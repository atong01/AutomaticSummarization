<article title='Cygwin'><paragraph><template><target>Refimprove</target><arg name="date">November 2011</arg></template><template><target>Infobox software</target><arg name="name"><space/>Cygwin
</arg><arg name="logo"><space/>[[File:Cygwin logo.svg|64px|Logo of Cygwin]]
</arg><arg name="screenshot"><space/>[[File:Cygwin X11 rootless WinXP.png|300px]]
</arg><arg name="caption"><space/>Running Cygwin, including [[Cygwin/X]], under [[Windows XP]]
</arg><arg name="collapsible"><space/>yes
</arg><arg name="author"><space/>[[Cygnus Solutions]]
</arg><arg name="developer"><space/>[[Cygnus Solutions]], [[Red Hat]], others
</arg><arg name="released"><space/>{{start date and age|1995}}
</arg><arg name="latest release version"><space/>2.2.1-1<ref>{{cite web |url</arg><arg name="latest release date"><space/>{{start date and age|2015|08|20}}
</arg><arg name="operating system"><space/>[[Microsoft Windows]]
</arg><arg name="programming language"><space/>[[C (programming language)|C]]/[[C++]]
</arg><arg name="genre"><space/>[[Compatibility layer]]
</arg><arg name="license"><space/>[[GNU General Public License#Version 3|GNU GPLv3]]
</arg><arg name="website"><space/>{{URL|cygwin.com}}
</arg></template><bold>Cygwin</bold><space/>(<template><target>IPAc-en</target><arg>ˈ</arg><arg>s</arg><arg>ɪ</arg><arg>ɡ</arg><arg>w</arg><arg>ɪ</arg><arg>n</arg></template><space/><template><target>respell</target><arg>SIG</arg><arg>win</arg></template><extension extension_name='ref'><template><target>Cite web</target><arg name="url"><space/>http://cygwin.com/ml/cygwin/2004-09/msg00702.html<space/></arg><arg name="title"><space/>Re: How do you pronounce it?<space/></arg><arg name="author"><space/>Larry Hall<space/></arg><arg name="date"><space/>2004-09-14<space/></arg><arg name="accessdate"><space/>2007-10-10</arg></template></extension>) is a<space/><link><target>Unix-like</target></link><space/>environment and<space/><link><target>command-line interface</target></link><space/>for<space/><link><target>Microsoft Windows</target></link>. Cygwin provides native integration of Windows-based applications, data, and other system resources with applications, software tools, and data of the Unix-like environment. Thus it is possible to launch Windows applications from the Cygwin environment, as well as to use Cygwin tools and applications within the Windows operating context.</paragraph><paragraph>Cygwin consists of two parts: a<space/><link><target>dynamic-link library</target></link><space/>(DLL) as an API compatibility layer providing a substantial part of the<space/><link><target>POSIX</target></link><space/>API functionality, and an extensive collection of<space/><link><target>Programming tool</target><part>software tools</part></link><space/>and applications that provide a Unix-like<space/><link><target>look and feel</target></link>.</paragraph><paragraph>Cygwin was originally developed by<space/><link><target>Cygnus Solutions</target></link>, which was later acquired by<space/><link><target>Red Hat</target></link>. It is<space/><link><target>free and open source software</target></link>, released under the<space/><link><target>GNU General Public License</target></link><space/>version 3. Today it is maintained by employees of Red Hat,<space/><link><target>NetApp</target></link><space/>and many other volunteers.</paragraph><heading level='2'>Description</heading><paragraph>Cygwin consists of a library that implements the<space/><link><target>POSIX</target></link><space/>system call<space/><link><target>application programming interface</target><part>API</part></link><space/>in terms of<space/><link><target>Win32</target></link><space/>system calls, a<space/><link><target>GNU</target></link><space/>development toolchain (including<space/><link><target>GNU Compiler Collection</target><part>GCC</part></link><space/>and<space/><link><target>GNU Debugger</target><part>GDB</part></link>) to allow software development, and a large number of application programs equivalent to those on<space/><link><target>Unix</target></link><space/>systems. Programmers have ported many Unix, GNU,<space/><link><target>BSD</target></link><space/>and<space/><link><target>Linux</target></link><space/>programs and packages to Cygwin, including the<space/><link><target>X Window System</target></link>,<space/><link><target>K Desktop Environment 3</target></link>,<space/><link><target>GNOME</target></link>,<extension extension_name='ref'><template><target>cite web</target><arg name="url">http://sourceware.org/cygwinports/</arg><arg name="title">Cygwin Ports</arg><arg name="publisher"></arg><arg name="accessdate">2 May 2015</arg></template></extension><space/><link><target>Apache HTTP Server</target><part>Apache</part></link>, and<space/><link><target>TeX</target></link>. Cygwin permits installing<space/><link><target>inetd</target></link>,<space/><link><target>syslogd</target></link>,<space/><link><target>Secure Shell</target><part>sshd</part></link>,<space/><link><target>Apache HTTP Server</target><part>Apache</part></link>, and other daemons as standard<space/><link><target>Windows service</target><trail>s</trail></link>, allowing Microsoft Windows systems to emulate Unix and Linux servers.</paragraph><paragraph>Cygwin programs are installed by running Cygwin's &quot;setup&quot; program, which downloads the necessary program and feature package files from repositories on the Internet. Setup can install, update, and remove programs and their source code packages. A complete installation will take in excess of 36&amp;nbsp;GB of hard disk space, but usable configurations may require as little as 1 or 2&amp;nbsp;GB.</paragraph><paragraph>Efforts to reconcile concepts that differ between Unix and Windows systems include:</paragraph><list type='bullet'><listitem>A Cygwin-specific version of the Unix<space/><link><target>Mount (computing)</target><part><xhtml:code>mount</xhtml:code></part></link><space/>command allows mounting Windows paths as &quot;filesystems&quot; in the Unix file space. Initial mount-points can be configured in<space/><xhtml:code><link><target>fstab</target><part>/etc/fstab</part></link></xhtml:code>, which has a very similar format as on Unix systems, except that Windows paths appear in place of devices. Filesystems can be mounted in binary mode (by default), or in text mode, which enables automatic conversion between<space/><link><target>Newline</target><part>LF and CRLF endings</part></link><space/>(which only affects programs that open files without explicitly specifying text or binary mode).</listitem><listitem>Cygwin 1.7 introduced comprehensive support for POSIX<space/><link><target>locale</target><trail>s</trail></link><space/>and many<space/><link><target>character encoding</target><trail>s</trail></link>, whereby the<space/><link><target>UTF-8</target></link><space/><link><target>Unicode</target></link><space/>encoding became the default. Windows file-names and other identifiers, which are encoded as<space/><link><target>UTF-16</target></link>, are automatically converted to and from the selected character-encoding.</listitem><listitem>Windows<space/><link><target>drive letter</target><trail>s</trail></link><space/>map to a special directory, so for example<space/><xhtml:code>C:</xhtml:code><space/>appears as<space/><xhtml:code>/cygdrive/c</xhtml:code>. The<space/><xhtml:code>/cygdrive</xhtml:code><space/>prefix can be changed. Windows network paths of the form<space/><xhtml:code>\\HOST\SHARE\FILE</xhtml:code><space/>are mapped to<space/><xhtml:code>//HOST/SHARE/FILE</xhtml:code>. Windows paths can also be used directly from Cygwin programs, but many programs do not support them correctly, hence this is discouraged.</listitem><listitem>Full-featured<space/><xhtml:code><link><target>/dev</target></link></xhtml:code><space/>and<space/><xhtml:code><link><target>/proc</target></link></xhtml:code><space/>file-systems are provided.<space/><xhtml:code>/proc/registry</xhtml:code><space/>provides direct filesystem access to the registry.</listitem><listitem>Cygwin supports POSIX<space/><link><target>symbolic link</target><trail>s</trail></link>, representing them as plain-text files with the system<space/><link><target>attrib</target><trail>ute</trail></link><space/>set. Cygwin 1.5 represented them as<space/><link><target>Windows Explorer</target></link><space/><link><target>File shortcut</target><part>shortcuts</part></link>, but this has been changed for reasons of performance and POSIX correctness. Cygwin also recognises NTFS<space/><link><target>NTFS junction point</target><part>junction points</part></link><space/>and<space/><link><target>NTFS symbolic link</target><part>symbolic links</part></link><space/>and treats them as POSIX symbolic links, but it does not create them as their semantics are not fully POSIX-compliant.</listitem><listitem>The<space/><link><target>Solaris Operating System</target><part>Solaris</part></link><space/>API for handling<space/><link><target>access control list</target><trail>s</trail></link><space/>(ACLs) is supported and maps to the Windows NT ACL system.</listitem><listitem>Special formats of<space/><xhtml:code>/etc/passwd</xhtml:code><space/>and<space/><xhtml:code>/etc/group</xhtml:code><space/>are provided that include pointers to the Windows equivalent<space/><link><target>Security Identifier</target><part>SID</part><trail>s</trail></link><space/>(in the<space/><link><target>Gecos field</target><part>GECOS field</part></link>), allowing for mapping between Unix and Windows users and groups.</listitem><listitem>The<space/><link><target>Fork (computing)</target><part>fork</part></link><space/>system call for duplicating a process is fully implemented, but it does not map well to the Windows API. For example, the<space/><link><target>copy-on-write</target></link><space/>optimization strategy could not be used. As a result, Cygwin's fork is rather slow compared with Linux and others. (That overhead can often be avoided by replacing uses of the<space/><link><target>fork-exec</target><part>fork/exec</part></link><space/>technique with calls to the<space/><link><target>spawn (computing)</target><part>spawn</part></link><space/>functions declared in the Windows-specific<space/><link><target>process.h</target></link><space/>header).</listitem><listitem>The Cygwin DLL contains a console driver that emulates a Unix-style<space/><link><target>Terminal emulator</target><part>terminal</part></link><space/>within the<space/><link><target>Win32 console</target><part>Windows console</part></link>. Cygwin's default user interface is the<space/><link><target>Bash (Unix shell)</target><part>bash</part></link><space/>shell running in the Cygwin console.</listitem><listitem>The DLL also implements<space/><link><target>pseudo terminal</target></link><space/>(pty) devices. Cygwin ships with a number of<space/><link><target>terminal emulator</target><trail>s</trail></link><space/>that are based on them, including<space/><link><target>mintty</target></link>,<space/><link><target>rxvt</target></link>(<link><target>rxvt-unicode</target><part>-unicode</part></link>), and<space/><link><target>xterm</target></link>. These are more compliant with Unix terminal standards and user interface conventions than the Cygwin console, but are less suited for running Windows console programs.</listitem><listitem>Various utilities are provided for converting between Windows and Unix paths and file formats, for handling line ending (CRLF/LF) issues, for displaying the<space/><link><target>Dynamic-link library</target><part>DLL</part><trail>s</trail></link><space/>that an executable is linked with, etc.</listitem><listitem>Apart from always being linked against the Cygwin DLL, Cygwin executables are normal Windows executables. This means that Cygwin programs have full access to the<space/><link><target>Windows API</target></link><space/>and other Windows libraries, which allows gradual porting of programs from one platform to the other. However, programmers need to be careful about mixing conflicting POSIX and Windows functions.</listitem></list><paragraph>The version of<space/><link><target>GNU Compiler Collection</target><part>gcc</part></link><space/>that comes with Cygwin has various extensions for creating Windows DLLs, specifying whether a program is a windowing or console-mode program, adding resources, etc. Support for compiling programs that do not require the POSIX compatibility layer provided by the Cygwin DLL used to be included in the default<space/><xhtml:code>gcc</xhtml:code>, but<space/><template><target>as of</target><arg><space/>2014<space/></arg><arg name="lc"><space/>on</arg></template><space/>is provided by cross-compilers contributed by the<space/><link><target>MinGW</target></link>-w64 project.</paragraph><paragraph>Cygwin is used heavily for porting many popular pieces of software to the Windows platform. It is used to compile<space/><link><target>Sun Microsystems</target><part>Sun</part></link><space/><link><target>Java (programming language)</target><part>Java</part></link>,<space/><link><target>OpenOffice.org</target></link>,<space/><link><target>LibreOffice</target></link>, and even web server software like<space/><link><target>Lighttpd</target></link><space/>and<space/><link><target>Hiawatha (web server)</target><part>Hiawatha</part></link>.<extension extension_name='ref'><link type='external' href='http://www.hiawatha-webserver.org/download'>Windows package of Hiawatha Webserver compiled via Cygwin</link></extension></paragraph><paragraph>Red Hat normally licenses the Cygwin library under the<space/><link><target>GNU General Public License</target></link><space/>version 3 with an exception to allow linking to any<space/><link><target>free and open source software</target></link><space/>whose license conforms to the<space/><link><target>Open Source Definition</target></link>.<extension extension_name='ref' name="cyglicense"><template><target>cite web</target><arg name="url"><space/>http://cygwin.com/licensing.html<space/></arg><arg name="title"><space/>What are the licensing terms?<space/></arg><arg name="archiveurl"><space/>http://www.webcitation.org/query?url</arg><arg name="archivedate">2012-07-30<space/></arg><arg name="work"><space/>Cygwin</arg></template></extension><space/>Red Hat also sells commercial licenses to those who wish to redistribute programs that use the Cygwin library under<space/><link><target>proprietary software</target><part>proprietary</part></link><space/>terms.<extension extension_name='ref' name="cyglicense"></extension><extension extension_name='ref'><template><target>cite web</target><arg name="url">http://www.redhat.com/services/custom/cygwin/</arg><arg name="title">Cygwin</arg><arg name="archiveurl"><space/>http://www.webcitation.org/query?url</arg><arg name="archivedate">2012-07-30</arg><arg name="publisher">[[Red Hat]]</arg></template></extension></paragraph><heading level='2'>History</heading><paragraph>Cygwin began in 1995 as a project of Steve Chamberlain, a<space/><link><target>Cygnus Solutions</target><part>Cygnus</part></link><space/>engineer who observed that Windows NT and 95 used<space/><link><target>COFF</target></link><space/>as their<space/><link><target>object file format</target></link>, and that GNU already included support for<space/><link><target>x86</target></link><space/>and COFF, and the C library<space/><link><target>newlib</target></link>. He thought it would be possible to retarget<space/><link><target>GNU Compiler Collection</target><part>GCC</part></link><space/>and produce a<space/><link><target>cross compiler</target></link><space/>generating executables that could run on Windows. This proved practical and a prototype was quickly developed.</paragraph><paragraph>The next step was to attempt to<space/><link><target>Bootstrapping (compilers)</target><part>bootstrap</part></link><space/>the compiler on a Windows system, requiring sufficient emulation of Unix to let the<space/><link><target>Autoconf</target><part>GNU configure</part></link><space/><link><target>shell script</target></link><space/>run. A<space/><link><target>Bourne shell</target></link>-compatible command interpreter, such as<space/><link><target>Bash (Unix shell)</target><part>bash</part></link>, was needed and in turn a<space/><link><target>Fork (computing)</target><part>fork</part></link><space/>system call emulation and<space/><link><target>Standard streams</target><part>standard input/output</part></link>. Windows includes similar functionality, so the Cygwin library just needed to provide a<space/><link><target>POSIX</target></link>-compatible<space/><link><target>application programming interface</target></link><space/>(API) and properly translate calls and manage private versions of data, such as<space/><link><target>file descriptor</target><trail>s</trail></link>.</paragraph><paragraph>Initially, Cygwin was called gnuwin32 (not to be confused with the current<space/><link><target>GnuWin32</target></link><space/>project). The name was changed to Cygwin32 to emphasize Cygnus' role in creating it. When<space/><link><target>Microsoft</target></link><space/>registered the trademark<space/><link><target>Win32</target></link>, the 32 was dropped to simply become Cygwin.</paragraph><paragraph>By 1996, other engineers had joined in, because it was clear that Cygwin would be a useful way to provide Cygnus' embedded tools hosted on Windows systems (the previous strategy had been to use<space/><link><target>DJGPP</target></link>). It was especially attractive because it was possible to do a<space/><link><target>Canadian cross</target><part>three-way cross-compile</part></link>, for instance to use a hefty<space/><link><target>Sun Microsystems</target><part>Sun workstation</part></link><space/>to build, say, a Windows-x-<link><target>MIPS instruction set</target><part>MIPS</part></link><space/>cross-compiler, which was faster than using the PC at the time. In 1999, Cygnus offered Cygwin 1.0 as a commercial product of interest in its own right although subsequent versions have not been released, instead relying on continued open source releases.</paragraph><paragraph>Geoffrey Noer was the project lead from 1996 to 1998. Christopher Faylor was the project lead from 1998 to mid-2014. Corinna Vinschen became co-lead since<template><target>clarify</target><arg name="date">June 2012</arg></template><space/>early 2004 when Faylor left Red Hat and has been lead since mid-2014, when Faylor withdrew from active participation in the project.<extension extension_name='ref'><template><target>cite web</target><arg name="url">https://sourceware.org/ml/cygwin/2014-07/msg00392.html</arg><arg name="title">Christopher Faylor - Withdrawing from the project</arg><arg name="publisher"></arg><arg name="accessdate">2 May 2015</arg></template></extension></paragraph><heading level='2'>Features</heading><paragraph><template><target>unreferenced section</target><arg name="date">December 2011</arg></template></paragraph><paragraph>Cygwin's default package selection is fairly small, containing little more than the<space/><link><target>Bash (Unix shell)</target><part>bash</part></link><space/>shell and the core file manipulation utilities expected of a Unix command line. Additional packages are available as optional installs from within Cygwin's package manager (&quot;setup-x86.exe&quot; - 32bit &amp; &quot;setup-x86_64.exe&quot; - 64bit). These include (among many others):</paragraph><list type='bullet'><listitem>Shells (i.e. command line interpreters):<space/><link><target>Bash (Unix shell)</target><part>bash</part></link>,<space/><link><target>Debian Almquist shell</target><part>dash</part></link>,<space/><link><target>Friendly interactive shell</target><part>fish</part></link>,<space/><link><target>Korn shell</target><part>pdksh</part></link>,<space/><link><target>tcsh</target></link>,<space/><link><target>zsh</target></link></listitem><listitem>File and system utilities:<space/><link><target>coreutils</target></link>,<space/><link><target>findutils</target></link>,<space/><link><target>util-linux</target></link></listitem><listitem>Text utilities:<space/><link><target>grep</target></link>,<space/><link><target>sed</target></link>,<space/><link><target>diff</target></link>,<space/><link><target>patch (Unix)</target><part>patch</part></link>,<space/><link><target>awk</target></link></listitem><listitem>Terminals:<space/><link><target>mintty</target></link>,<space/><link><target>rxvt</target></link>,<space/><link><target>GNU Screen</target><part>screen</part></link></listitem><listitem>Editors:<space/><link><target>emacs</target></link>,<space/><link><target>Joe's Own Editor</target><part>joe</part></link>,<space/><link><target>mined (text editor)</target><part>mined</part></link>,<space/><link><target>nano (text editor)</target><part>nano</part></link>,<space/><link><target>Vim (text editor)</target><part>vim</part></link></listitem><listitem>Remote login:<space/><link><target>OpenSSH</target><part>ssh</part></link>,<space/><link><target>Remote Shell</target><part>rsh</part></link>,<space/><link><target>telnet</target></link></listitem><listitem>Remote file transfer/synchronization:<space/><link><target>ftp</target></link>,<space/><link><target>Secure copy</target><part>scp</part></link>,<space/><link><target>rsync</target></link>,<space/><link><target>Unison (file synchronizer)</target><part>unison</part></link>,<space/><link><target>rtorrent</target></link></listitem><listitem>Compression/archiving:<space/><link><target>tar (file format)</target><part>tar</part></link>,<space/><link><target>gzip</target></link>,<space/><link><target>bzip2</target></link>,<space/><link><target>lzma</target></link>,<space/><link><target>ZIP (file format)</target><part>zip</part></link></listitem><listitem>Text processing:<space/><link><target>TeX</target></link>,<space/><link><target>groff (software)</target><part>groff</part></link>,<space/><link><target>Ghostscript</target></link></listitem><listitem>Programming languages:<space/><link><target>C (programming language)</target><part>C</part></link>,<space/><link><target>C++</target></link>,<space/><link><target>Objective-C</target></link>,<space/><link><target>Fortran</target></link>,<space/><link><target>Perl</target></link>,<space/><link><target>Python (programming language)</target><part>Python</part></link>,<space/><link><target>Ruby (programming language)</target><part>Ruby</part></link>,<space/><link><target>Tcl</target></link>,<space/><link><target>Ada (programming language)</target><part>Ada</part></link>,<space/><link><target>CLISP</target></link>,<space/><link><target>Scheme (programming language)</target><part>Scheme</part></link>,<space/><link><target>OCaml</target></link>,<space/><link><target>Prolog</target></link></listitem><listitem>Development tools:<space/><link><target>make (software)</target><part>make</part></link>,<space/><link><target>autotools</target></link>,<space/><link><target>flex lexical analyser</target><part>flex</part></link>,<space/><link><target>GNU bison</target><part>bison</part></link>,<space/><link><target>doxygen</target></link></listitem><listitem>Version control systems:<space/><link><target>Concurrent Versions System</target><part>cvs</part></link>,<space/><link><target>Subversion (software)</target><part>subversion</part></link>,<space/><link><target>Git (software)</target><part>git</part></link>,<space/><link><target>mercurial</target></link></listitem><listitem>Servers:<space/><link><target>Apache HTTP Server</target><part>Apache</part></link>,<space/><link><target>BIND</target></link>,<space/><link><target>PostgreSQL</target></link>,<space/><link><target>Pure-FTPd</target></link>,<space/><link><target>OpenSSH</target></link>,<space/><link><target>telnetd</target></link>,<space/><link><target>exim</target></link>,<space/><link><target>UW IMAP</target></link></listitem><listitem>Clients:<space/><link><target>Mutt (e-mail client)</target><part>Mutt</part></link><space/>(email),<space/><link><target>Lynx (web browser)</target><part>Lynx</part></link><space/>(web),<space/><link><target>Irssi</target></link><space/>(IRC),<space/><link><target>tin (newsreader)</target><part>tin</part></link><space/>(newsgroups)</listitem></list><paragraph>The<space/><link><target>Cygwin/X</target></link><space/>project contributes an implementation of the<space/><link><target>X Window System</target></link><space/>that allows graphical Unix programs to display their user interfaces on the Windows desktop. This can be used with both local and remote programs. Cygwin ships with a fairly small number of X applications, for example:</paragraph><list type='bullet'><listitem>Terminals:<space/><link><target>rxvt-unicode</target></link>,<space/><link><target>xterm</target></link></listitem><listitem>Editors: emacs-X11,<space/><link><target>Vim (text editor)</target><part>gvim</part></link></listitem><listitem>Text processors/viewers:<space/><link><target>LyX</target></link>,<space/><link><target>xpdf</target></link>,<space/><link><target>Device independent file format</target><part>xdvi</part></link></listitem></list><paragraph>In addition to the low-level<space/><link><target>Xlib</target></link>/<link><target>XCB</target></link><space/>libraries for developing X applications, Cygwin also ships with various higher-level and cross-platform<space/><link><target>GUI</target></link><space/>frameworks, including<space/><link><target>GTK+</target></link><space/>and<space/><link><target>Qt (software)</target><part>Qt</part></link>.</paragraph><paragraph>The<space/><link><target>Cygwin Ports</target></link><space/>project provides many additional packages that are not available in the Cygwin distribution itself. Examples include<space/><link><target>GNOME</target></link><space/>and<space/><link><target>K Desktop Environment 3</target></link><space/>as well as the<space/><link><target>MySQL</target></link><space/>database and the<space/><link><target>PHP</target></link><space/>scripting language.</paragraph><heading level='2'>Alternative Windows/Unix integration tools</heading><paragraph>Several open-source and proprietary alternatives provide simultaneous access to both Windows and UNIX environments on the same hardware.</paragraph><paragraph>Toolsets like<space/><link><target>Microsoft Windows Services for UNIX</target><part>Microsoft Windows Services for UNIX (SFU)</part></link>,<space/><link><target>UWIN</target></link>,<space/><link><target>MKS Toolkit</target></link><space/>for Enterprise Developers and<space/><link><target>Hamilton C shell</target></link><space/>also aim to provide a Unix-like user- and development-environment. They implement at least a shell and a set of the most popular utilities. Most include the familiar GNU and/or Unix development tools, including<space/><link><target>make (software)</target><part>make</part></link>,<space/><link><target>yacc</target></link>,<space/><link><target>lex (software)</target><part>lex</part></link><space/>and a<space/><link><target>cc (software)</target><part>cc</part></link><space/>command which acts a wrapper around a supported<space/><link><target>C (programming language)</target><part>C</part></link><space/>compiler. SFU also includes the<space/><link><target>GNU Compiler Collection</target><part>GCC</part></link><space/>compiler.</paragraph><paragraph><link><target>MinGW</target></link><space/>provides a native<space/><link><target>porting</target><part>software port</part></link><space/>of the GCC to Microsoft Windows, along with a set of freely-distributable import libraries and<space/><link><target>header files</target></link><space/>for the<space/><link><target>Windows API</target></link>. MinGW allows developers to create native Microsoft Windows applications. In addition, a component of MinGW known as<space/><bold>MSYS</bold><space/>(<italics>Minimal SYStem</italics>), which derives from Cygwin version 1.3.3, provides a minimal Unix-like<space/><link><target>shell (computer science)</target><part>shell</part></link><space/>environment including<space/><link><target>Bash (Unix shell)</target><part>bash</part></link><space/>and a selection of<space/><link><target>POSIX</target></link><space/>tools sufficient to enable<space/><link><target>autoconf</target></link><space/>scripts to run.<extension extension_name='ref'><template><target>cite web</target><arg name="url">http://mingw.org/wiki/MSYS</arg><arg name="title">MSYS</arg><arg name="publisher"></arg><arg name="accessdate">2 May 2015</arg></template></extension></paragraph><paragraph>Numerous<space/><link><target>virtualization</target></link><space/>solutions provide<space/><link><target>x86 architecture</target><part>x86</part></link><space/><link><target>platform virtualization</target></link><space/>to run Windows and Unix-like operating systems simultaneously on the same hardware, but without the integration of the environments that Cygwin provides. Some, like<space/><link><target>VirtualBox</target></link><space/>and<space/><link><target>VMware Player</target></link><space/>run on Windows and Linux hosts and can run many other operating systems.<space/><link><target>Cooperative Linux</target></link><space/>(abbreviated<space/><italics>coLinux</italics>) runs a full, but modified Linux kernel like a driver under Windows, effectively making Windows and Linux two<space/><link><target>coroutines</target></link>, using<space/><link><target>cooperative multitasking</target></link><space/>to switch between them.</paragraph><paragraph><link><target>Wine (software)</target><part>Winelib</part></link>, a part of the Wine project, is the inverse of Cygwin it is a<space/><link><target>free and open source software</target><part>free and open-source</part></link><space/><link><target>compatibility layer</target></link><space/>for<space/><link><target>Unix-like</target></link><space/><link><target>operating system</target><trail>s</trail></link><space/>on the x86 or<space/><link><target>x86-64</target></link><space/>architecture that can allow programs written for<space/><link><target>Microsoft Windows</target></link><space/>to run on Unix-like operating systems. Unlike Cygwin, which requires &quot;You rebuild your application from source if you want it to run on Windows&quot;,<extension extension_name='ref'><template><target>cite web</target><arg name="title">Cygwin homepage section "What Cygwin Isn't?"</arg><arg name="url">http://cygwin.com/</arg><arg name="publisher">Cygwin</arg></template></extension><space/>the full Wine product supports executing unmodified Windows binaries.</paragraph><heading level='2'>References</heading><paragraph><template><target>Reflist</target></template></paragraph><heading level='2'>External links</heading><paragraph><template><target>wikibooks</target></template></paragraph><list type='bullet'><listitem><template><target>official website</target></template></listitem></list><paragraph><template><target>FLOSS</target></template><template><target>Unix-Windows Interoperability</target></template></paragraph><paragraph><link><target>Category:Free compilers and interpreters</target></link><link><target>Category:Free emulation software</target></link><link><target>Category:Free software programmed in C</target></link><link><target>Category:Free software programmed in C++</target></link><link><target>Category:Computer programming tools</target></link><link><target>Category:Compatibility layers</target></link><link><target>Category:Unix emulators</target></link><link><target>Category:Red Hat</target></link><link><target>Category:System administration</target></link><link><target>Category:Windows-only free software</target></link><link><target>Category:Free educational software</target></link></paragraph></article>