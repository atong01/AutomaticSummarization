{{About|the programming language standard|the paper size|Paper size#ANSI paper sizes}}
{{Refimprove|date=July 2010}}
'''ANSI C''', '''ISO C''' and '''Standard C''' refer to the successive standards for the [[C (programming language)|C programming language]] published by the [[American National Standards Institute]] (ANSI) and the [[International Standards Organization]] (ISO).  Historically, the names referred specifically to the original and best-supported version of the standard (known as '''C89''' or '''C90''').  Software developers writing in C are encouraged to conform to the standards, as doing so aids [[porting|portability]] between compilers.

==History and outlook==

The first standard for C was published by ANSI. Although this document was subsequently adopted by [[International Organization for Standardization]] (ISO) and subsequent revisions published by ISO have been adopted by ANSI, the name ANSI C (rather than ISO C) is still more widely used. While some software developers use the term ISO C, others are standards bodyâ€“neutral and use Standard C.

===C89===
In 1983, the American National Standards Institute formed a committee, X3J11, to establish a standard specification of C. After a long and arduous process{{Citation needed|date=December 2013}}, the standard was completed in 1989 and ratified as ANSI X3.159-1989 "Programming Language C." This version of the language is often referred to as "ANSI C". Later on sometimes the label "C89" is used to distinguish it from C99 but using the same labelling method.

===C90===
The same standard as C89 was ratified by the International Organization for Standardization as ISO/IEC 9899:1990, with only formatting changes,<ref>{{cite web|url=http://gcc.gnu.org/onlinedocs/gcc/Standards.html|title=Standards - Using the GNU Compiler Collection (GCC)|accessdate=2012-06-24}}</ref> which is sometimes referred to as C90. Therefore, the terms "C89" and "C90" refer to essentially the same language.

This standard has been withdrawn by both INCITS<ref name="ref1" /> and ISO/IEC.<ref>{{cite web|url=http://www.iso.org/iso/iso_catalogue/catalogue_ics/catalogue_detail_ics.htm?csnumber=17782|title=ISO/IEC 9899:1990 - Programming Languages -- C|accessdate=2012-06-24}}</ref>

===C95===
In 1995 the [[International Organization for Standardization|ISO]] published an extension, called Amendment&nbsp;1, for the ANSI-C standard. Its full name finally was ''ISO/IEC 9899/AMD1:1995'' or nicknamed ''C95''. Aside to error correction there were further changes to the language capabilities,<ref>{{Cite web| url=http://www.lysator.liu.se/c/na1.html | title=A brief description of Normative Addendum 1 | author=Clive D.W. Feather | date=2010-09-12}}</ref><ref>{{Cite web | url=http://www.iso.org/iso/home/store/catalogue_ics/catalogue_detail_ics.htm?csnumber=23909 | title=ISO/IEC 9899:1990/Amd 1:1995 | date=2013-03-22 | publisher= International Organization for Standardization}}</ref> such as:

* Improvements to the support for ''multi byte'' and ''[[wide character]]'' char sets in the standard library.
* Addition of [[Digraph (computing)#C|Digraphs]] to the language.
* Specification of standard macros for the alternative specification of operators, e.g. <code>and</code> for <code>&&</code>.
* Specification of the standard macro <code>__STDC_VERSION__</code>.

====Preprocessor Test for C95 compatibility====
<source lang="c">
#if defined(__STDC_VERSION__) && __STDC_VERSION__ >= 199409L
/* C95 compatible source code. */
#elif defined(__ANSI__)
/* C89 compatible source code. */
#endif
</source>

===C99===
{{Main|C99}}
In March 2000, ANSI adopted the ISO/IEC 9899:1999 standard. This standard is commonly referred to as C99. Some notable additions to the previous standard include:

* New built-in [[C data types|data types]]: <code>long long</code>, <code>_Bool</code> and <code>_Complex</code>
* Several new array features, including [[variable-length array]]s and [[flexible array member]]s
* <code>[[stdint.h]]</code>, which defines typedefs for fixed-width and minimum-width integral types
* <code>[[restrict]]</code> keyword, used to guarantee that two or more pointers do not point to the same address
* Improved compatibility with several [[C++]] features, including [[inline function]]s and single-line [[Comment (computer programming)|comments]]

This standard has been withdrawn by ISO/IEC in favour of C11,<ref>{{cite web|url=http://www.iso.org/iso/iso_catalogue/catalogue_ics/catalogue_detail_ics.htm?csnumber=29237|title=ISO/IEC 9899:1999 - Programming Languages -- C|accessdate=2012-06-24}}</ref> but is still approved by INCITS.{{Citation needed|date=March 2012}}

===C11===
{{Main|C11_(C_standard_revision)|l1=C11}}
"C11" is the latest [[Open standard|standard]] for the [[C (programming language)|C programming language]]. Notable features introduced over the previous standard include improved [[Unicode]] support, a type-generic math library <code>tgmath.h</code> for both floating point and <code>_Complex</code> types based on the new <code>_Generic</code> keyword and <code>threads.h</code>, which defines a cross-platform [[Thread (computing)|multi-threading]] API.

==Support from major compilers==
{{Unreferenced section|date=June 2011}}
ANSI C is now supported by almost all the widely used compilers. Most of the C code being written nowadays is based on ANSI C. Any program written ''only'' in standard C and without any hardware dependent assumptions is virtually guaranteed to compile correctly on any [[system platform|platform]] with a conforming C implementation.  Without such precautions, most programs may compile only on a certain platform or with a particular compiler, due, for example, to the use of non-standard libraries, such as [[Graphical user interface|GUI]] libraries, or to the reliance on compiler- or platform-specific attributes such as the exact size of certain data types and byte [[endianness]].

===Compliance detectability===
To mitigate the differences between [[K&R C]] and the ANSI C standard, the <code>__STDC__</code> ("standard c") macro can be used to split code into ANSI and K&R sections.
<syntaxhighlight lang="c">
 #if defined(__STDC__) && __STDC__
 extern int getopt(int, char * const *, const char *);
 #else
 extern int getopt();
 #endif
</syntaxhighlight>
In the above example, a prototype is used in a function declaration for ANSI compliant implementations, while an obsolescent non-prototype declaration is used otherwise. Those are still ANSI-compliant as of C99. Note how this code checks both definition and evaluation: this is because some implementations may set <code>__STDC__</code> to zero to indicate non-ANSI compliance.

==Compilers supporting ANSI C==
* [[Amsterdam Compiler Kit]] (C K&R and C89/90)
* [[ARM Holdings|ARM]] RealView
* [[Clang]], using [[LLVM]] backend
* [[GNU Compiler Collection|GCC]] (Full C89/90, C99 and C11)
* HP C/ANSI C compiler (C89 and C99)<ref>{{cite web|title=HP C/ANSI C developer's bundle|url=http://www.hp.com/go/c|accessdate=2015-07-12}}</ref>

* [[IBM XL C/C++]] (C11, starting with version 12.1)<ref>[http://www.ibm.com/developerworks/rational/library/support-iso-c11/index.html Support for ISO C11 added to IBM XL C/C++ compilers]</ref>
* [[Intel C++ Compiler|Intel's ICC]]
* [[LabWindows/CVI]]
* [[LCC (compiler)|LCC]]
* [[OpenWatcom]] (C89/90 and some C99)
* [[Visual C++|Microsoft Visual C++]] (C89/90 and some C99)
* [[Pelles C]] (C99 and C11. Windows only.)
* [[vbcc]] (C89/90 and C99)

==References==
<references>
<ref name="ref1">http://www.techstreet.com/cgi-bin/detail?doc_no=incits_iso_iec%7C9899;product_id=232462</ref>
</references>

==External links==
* [http://www.open-std.org/jtc1/sc22/wg14/ ISO C working group]
* [http://flash-gordon.me.uk/ansi.c.txt ''Draft ANSI C Standard'' (ANSI X3J11/88-090)] (May 13, 1988), [http://groups.google.com/group/comp.lang.c/msg/20b174b18cdd919d?hl=en Third Public Review]
* [https://docs.google.com/viewer?a=v&pid=explorer&chrome=true&srcid=0BxVCLS4f8Sg5NWZmM2NjZWEtYmExMS00Y2EzLWE3ZTMtNzFmYjYwYzBiOTIw&hl=en_US ''Draft ANSI C Rationale'' (ANSI X3J11/88-151)] (Nov 18, 1988)
* [https://docs.google.com/viewer?a=v&pid=explorer&chrome=true&srcid=0B-3PfyBhOSOxOTdjYmM1N2ItMmE0ZC00OGE3LTllODUtZDNkMDMzYWU3NDlk&hl=en_US ''C Information Bulletin #1'' (ANSI X3J11/93-007)] (May 27, 1992)
* [http://www.quut.com/c/ANSI-C-grammar-y.html ANSI C Yacc grammar]
** [http://www.lysator.liu.se/c/ANSI-C-grammar-l.html ANSI C grammar, Lex specification]
* {{Cite book
 |first=Axel-Tobias
 |last=Schreiner
 |authorlink=Axel-Tobias Schreiner
 |title=Object oriented programming with ANSI-C
 |publisher=Hanser
 |isbn=3-446-17426-5
 |id={{hdl|1850/8544}}
}}
* {{Cite web
   |url=http://webstore.ansi.org/RecordDetail.aspx?sku=ISO%2FIEC+9899%3A1999
   |title=ISO/IEC 9899:1999 Programming Languages -- C
   |publisher=American National Standards Institute
}}
* {{Cite web
   |url=http://publicaa.ansi.org/sites/apdl/Documents/Standards%20Action/2005%20PDFs/SAV3648.pdf
   |title=ANSI Standards Action Vol. 36, #48
   |publisher=American National Standards Institute
   |date=2005-12-02
}}

{{CProLang}}

{{DEFAULTSORT:Ansi C}}
[[Category:C (programming language)]]
[[Category:Programming language standards]]
[[Category:ANSI standards]]