<article title='Chinese_remainder_theorem'><paragraph><link><target>File:Disqvisitiones-800.jpg</target><part>thumb</part><part>The Chinese remainder theorem was proved by<space/><link><target>Carl Friedrich Gauss</target><part>Gauss</part></link><space/>with his 1801 book ''<link><target>Disquisitiones Arithmeticae</target></link>''.<extension extension_name='ref' name="Gauss1801.loc=32-36"><template><target>Harvtxt</target><arg>Gauss</arg><arg>Clarke</arg><arg>1986</arg><arg name="loc">Art. 32-36</arg></template></extension></part></link>The<space/><bold>Chinese remainder theorem</bold><space/>is a result about<space/><link><target>modular arithmetic</target><part>congruences</part></link><space/>in<space/><link><target>number theory</target></link><space/>and its generalizations in<space/><link><target>abstract algebra</target></link>. It was first published in the 3rd to 5th centuries by the Chinese mathematician<space/><link><target>Sun Tzu (mathematician)</target><part>Sun Tzu</part></link>.</paragraph><paragraph>In its basic form, the Chinese remainder theorem will determine a number<space/><italics>n</italics><space/>that, when divided by some given divisors, leaves given remainders. For example, what is the lowest number<space/><italics>n</italics><space/>that when divided by 3 leaves a remainder of 2, when divided by 5 leaves a remainder of 3, and when divided by 7 leaves a remainder of 2?</paragraph><heading level='2'>Theorem statement</heading><paragraph>The original form of the theorem, which is contained in the 5th-century book<space/><italics><link><target>Sunzi's Mathematical Classic</target></link></italics><space/>(<template><target>lang</target><arg>zh</arg><arg>孫子算經</arg></template>) by the Chinese mathematician<space/><link><target>Sun Tzu (mathematician)</target><part>Sun Tzu</part></link><space/>and later generalized with a complete solution called<space/><italics>Dayanshu</italics><space/>(<template><target>lang</target><arg>zh</arg><arg>大衍術</arg></template>) in<space/><link><target>Qin Jiushao</target></link>'s 1247<space/><italics><link><target>Mathematical Treatise in Nine Sections</target></link></italics><space/>(<template><target>lang</target><arg>zh</arg><arg>數書九章</arg></template>,<space/><italics>Shushu Jiuzhang</italics>), is a statement about simultaneous congruences.</paragraph><paragraph>Suppose<space/><template><target>math</target><arg>''n''<sub>1</sub>, ..., ''n<sub>k</sub>''</arg></template><space/>are positive<space/><link><target>integer</target><trail>s</trail></link><space/>that are<space/><link><target>pairwise coprime</target></link>. Then, for any given sequence of integers<space/><template><target>math</target><arg>''a''<sub>1</sub>, ..., ''a<sub>k</sub>''</arg></template>, there exists an integer<space/><template><target>mvar</target><arg>x</arg></template><space/>solving the following system of simultaneous congruences.</paragraph><list type='ident'><listitem><extension extension_name='math'>\begin{cases} x \equiv a_1 &amp; \pmod{n_1} \\ \quad \cdots \\ x \equiv a_k &amp;\pmod{n_k} \end{cases}</extension></listitem></list><paragraph>Furthermore, all solutions<space/><template><target>mvar</target><arg>x</arg></template><space/>of this system are congruent modulo the product,<space/><template><target>math</target><arg name="''N'' {{">}} ''n''<sub>1</sub><space/>... ''n<sub>k</sub>''</arg></template>. Hence</paragraph><list type='ident'><listitem><extension extension_name='math'>x \equiv y \pmod{n_i}, \quad 1 \leq i \leq k \qquad \Longleftrightarrow \qquad x \equiv y \pmod{N}.</extension></listitem></list><paragraph>Sometimes, the simultaneous congruences can be solved even if the<space/><template><target>math</target><arg>''n<sub>i</sub>''</arg></template><space/>are not pairwise coprime. A solution<space/><template><target>mvar</target><arg>x</arg></template><space/>exists if and only if:</paragraph><list type='ident'><listitem><extension extension_name='math'>a_i \equiv a_j \pmod{\gcd(n_i,n_j)} \qquad \text{for all }i\text{ and }j</extension></listitem></list><paragraph>All solutions<space/><template><target>mvar</target><arg>x</arg></template><space/>are then congruent modulo the<space/><link><target>least common multiple</target></link><space/>of the<space/><template><target>math</target><arg>''n<sub>i</sub>''</arg></template>.</paragraph><paragraph>Sun Tzu's work contains neither a proof nor a full algorithm. What amounts to an algorithm for solving this problem was described by<space/><link><target>Aryabhata</target></link><space/>(6th century; see<space/><template><target>harvnb</target><arg>Kak</arg><arg>1986</arg></template>). Special cases of the Chinese remainder theorem were also known to<space/><link><target>Brahmagupta</target></link><space/>(7th century), and appear in<space/><link><target>Fibonacci</target></link>'s<space/><link><target>Liber Abaci</target></link><space/>(1202).</paragraph><paragraph>A modern restatement of the theorem in algebraic language is that for a positive integer with<space/><link><target>prime factorization</target></link></paragraph><list type='ident'><listitem><extension extension_name='math'>n = p_1^{r_1}\cdots p_k^{r_k}</extension></listitem></list><paragraph>we have the<space/><link><target>isomorphism</target></link><space/>between a<space/><link><target>ring (mathematics)</target><part>ring</part></link><space/>and the<space/><link><target>direct product</target></link><space/>of its prime power parts:</paragraph><list type='ident'><listitem><extension extension_name='math'>\mathbf{Z}/n\mathbf{Z} \cong \mathbf{Z}/p_1^{r_1}\mathbf{Z} \times \cdots \times \mathbf{Z}/p_k^{r_k}\mathbf{Z}</extension></listitem></list><paragraph>The theorem can also be restated in the language of<space/><link><target>combinatorics</target></link><space/>as the fact that the infinite<space/><link><target>arithmetic progression</target><trail>s</trail></link><space/>of integers form a<space/><link><target>Helly family</target></link><space/><template><target>harv</target><arg>Duchet</arg><arg>1995</arg></template>.</paragraph><heading level='2'>Existence and uniqueness</heading><paragraph>The existence and uniqueness of the solution can easily be seen through a non-constructive argument:</paragraph><paragraph>There are<space/><template><target>math</target><arg name="''N'' {{">}} ''n''<sub>1</sub>·…·''n<sub>k</sub>''</arg></template><space/>different<space/><template><target>mvar</target><arg>k</arg></template>-<link><target>tuples</target></link><space/>of remainders. Let us call this set<space/><template><target>mvar</target><arg>R</arg></template>. On the other hand<space/><template><target>math</target><arg name="''N'' {{">}} #{1, ..., ''N''},</arg></template><space/>and each element of<space/><template><target>math</target><arg>{1, ..., ''N''}<space/></arg></template><space/>corresponds to an element of<space/><template><target>mvar</target><arg>R</arg></template>. Can two numbers<space/><template><target>math</target><arg>''a'', ''b'' ∈ {1, ..., ''N''},</arg></template><space/>correspond to the same member of<space/><template><target>mvar</target><arg>R</arg></template>? That is, can they have the same set of remainders when divided by<space/><template><target>math</target><arg>''n''<sub>1</sub>, ..., ''n<sub>k</sub>''</arg></template>? If they did then<space/><template><target>math</target><arg>''a'' − ''b''</arg></template><space/>would be divisible by each<space/><template><target>mvar</target><arg>n<sub>i</sub></arg></template>. Since the<space/><template><target>mvar</target><arg>n<sub>i</sub></arg></template><space/>are relatively prime,<space/><template><target>math</target><arg>''a'' − ''b''</arg></template><space/>would be divisible by their product:<space/><template><target>mvar</target><arg>N</arg></template>. But, as<space/><template><target>math</target><arg><space/>0<space/>< {{!}} ''a'' − ''b'' {{!}}<space/>< ''N''</arg></template>, this can't be, so this function<space/><template><target>math</target><arg>{1, ..., ''N''} → ''R''</arg></template><space/>is one-to-one. Since<space/><template><target>math</target><arg name="#{1, ..., ''N''} {{">}} #''R''</arg></template>, it must be onto as well. Thus we have established the existence of a<space/><link><target>bijection</target></link>.</paragraph><paragraph>Existence can be seen by an explicit construction of<space/><template><target>mvar</target><arg>x</arg></template>. Let<space/><template><target>math</target><arg>[''a''<sup>−1</sup>]<sub>''b''</sub></arg></template><space/>denote the<space/><link><target>Modular multiplicative inverse</target><part>multiplicative inverse</part></link><space/>of<space/><template><target>math</target><arg>''a'' (mod ''b'')</arg></template><space/>given by the<space/><link><target>Extended Euclidean algorithm</target></link>. It is defined exactly when<space/><template><target>mvar</target><arg>a</arg></template><space/>and<space/><template><target>mvar</target><arg>b</arg></template><space/>are coprime; the following construction explains why this condition is needed.</paragraph><heading level='3'>Case of two equations (<template><target>math</target><arg name="''k'' {{">}} 2</arg></template>)</heading><paragraph>Consider the system:</paragraph><list type='ident'><listitem><extension extension_name='math'>\begin{cases} x \equiv a_1 &amp; \pmod{n_1} \\ x \equiv a_2 &amp; \pmod{n_2} \end{cases}</extension></listitem></list><paragraph>Since<space/><template><target>math</target><arg name="gcd(''n''<sub>1</sub>, ''n''<sub>2</sub>) {{">}} 1</arg></template>,<space/><link><target>Bzout's identity</target></link><space/>implies:</paragraph><list type='ident'><listitem><extension extension_name='math'>n_2 \left [n_2^{-1} \right ]_{n_1} + n_1 \left [n_1^{-1} \right ]_{n_2} = 1</extension></listitem></list><paragraph>This is true because we are using the inverses provided by the Extended Euclidean algorithm; for any other inverses, this would not necessarily be true, but still be valid<space/><template><target>math</target><arg>(mod ''n''<sub>1</sub>''n''<sub>2</sub>)</arg></template>.</paragraph><paragraph>Multiplying both sides by<space/><template><target>mvar</target><arg>x</arg></template>, we get</paragraph><list type='ident'><listitem><extension extension_name='math'>x = x n_2 \left [n_2^{-1} \right ]_{n_1} + x n_1 \left [n_1^{-1} \right ]_{n_2}</extension></listitem></list><paragraph>If we take the congruence modulo<space/><template><target>math</target><arg>''n''<sub>1</sub></arg></template><space/>for the right-hand-side expression, it is readily seen that</paragraph><list type='ident'><listitem><extension extension_name='math'>x \underbrace{n_2 \left [n_2^{-1} \right ]_{n_1}}_1 + x \underbrace{n_1}_0 \left [n_1^{-1} \right ]_{n_2} \equiv x \times 1 + x \times 0 \times \left [n_1^{-1} \right ]_{n_2} \equiv x \pmod {n_1}</extension></listitem></list><paragraph>But we know that<space/><template><target>math</target><arg>''x'' ≡ ''a''<sub>1</sub><space/>(mod ''n''<sub>1</sub>)</arg></template>, thus this suggests that the coefficient of the first term on the right-hand-side expression can be replaced by<space/><template><target>math</target><arg>''a''<sub>1</sub></arg></template>. Similarly, we can show that the coefficient of the second term can be substituted by<space/><template><target>math</target><arg>''a''<sub>2</sub></arg></template>. We can now define the value</paragraph><list type='ident'><listitem><extension extension_name='math'>x \equiv a_1 n_2 \left [n_2^{-1} \right ]_{n_1} + a_2 n_1 \left [n_1^{-1} \right ]_{n_2}</extension></listitem></list><paragraph>and it is seen to satisfy both congruences, for example:</paragraph><list type='ident'><listitem><extension extension_name='math'>a_1 n_2 \left [n_2^{-1} \right ]_{n_1} + a_2 n_1 \left [n_1^{-1} \right ]_{n_2} \equiv a_1 \times 1 + a_2 \times 0 \times \left [n_1^{-1} \right ]_{n_2} \equiv a_1 \pmod {n_1}</extension></listitem></list><heading level='3'>General case</heading><paragraph>The same type of construction works in the general case of<space/><template><target>mvar</target><arg>k</arg></template><space/>congruence equations. Let<space/><template><target>math</target><arg name="''N'' {{">}} ''n''<sub>1</sub><space/>... ''n<sub>k</sub>''</arg></template><space/>be the product of every modulus then define</paragraph><list type='ident'><listitem><extension extension_name='math'>x := \left[\sum_{i} a_i \frac{N}{n_i} \left[\left(\frac{N}{n_i}\right)^{-1}\right]_{n_i}\right]_{N}</extension></listitem></list><paragraph>and this is seen to satisfy the system of congruences by a similar calculation as before.</paragraph><heading level='2'>Finding the solution with basic algebra and modular arithmetic</heading><paragraph>For example, consider the problem of finding an integer<space/><template><target>mvar</target><arg>x</arg></template><space/>such that</paragraph><list type='ident'><listitem><extension extension_name='math'>\begin{cases} x \equiv 2 \pmod{3} \\ x \equiv 3 \pmod{4} \\ x \equiv 1 \pmod{5} \end{cases}</extension></listitem></list><heading level='3'>Brute-force approach</heading><paragraph>A brute-force approach converts these congruences into sets and writes the elements out to the product of<space/><template><target>math</target><arg name="3×4×5 {{">}} 60</arg></template><space/>(the solutions modulo 60 for each congruence):</paragraph><list type='ident'><listitem><template><target>math</target><arg>''x'' ∈ {2, 5, 8, '''11''', 14, 17, 20, 23, 26, 29, 32, 35, 38, 41, 44, 47, 50, 53, 56, 59, 62, 65, 68, '''71''', 74, ...}<space/></arg></template></listitem><listitem><template><target>math</target><arg>''x'' ∈ {3, 7, '''11''', 15, 19, 23, 27, 31, 35, 39, 43, 47, 51, 55, 59, 63, 67, '''71''', 75, 79, ...}<space/></arg></template></listitem><listitem><template><target>math</target><arg>''x'' ∈ {1, 6, '''11''', 16, 21, 26, 31, 36, 41, 46, 51, 56, 61, 66, '''71''', 76, 81, 86, 91, 96, ...}<space/></arg></template></listitem></list><paragraph>To find an x that satisfies all three congruences, intersect the three sets to get:</paragraph><list type='ident'><listitem><template><target>math</target><arg>''x'' ∈ {11, 71, ...}<space/></arg></template></listitem></list><paragraph>Which can be expressed as</paragraph><list type='ident'><listitem><extension extension_name='math'>x \equiv 11 \pmod{60}</extension></listitem></list><heading level='3'>Algebraic approach</heading><paragraph>Another way to find a solution is with basic algebra, modular arithmetic, and stepwise substitution.</paragraph><paragraph>We start by translating these congruences into equations for some<space/><template><target>mvar</target><arg>t, s</arg></template>, and<space/><template><target>mvar</target><arg>u</arg></template>:</paragraph><list type='ident'><listitem><extension extension_name='math'>\begin{cases}x = 2 + 3t \\ x = 3 + 4s \\ x = 1 + 5u \end{cases}</extension></listitem></list><paragraph>Start by substituting the<space/><template><target>mvar</target><arg>x</arg></template><space/>from the first equation into the second congruence:</paragraph><list type='ident'><listitem><extension extension_name='math'>\begin{align}
 2 + 3t &amp;\equiv 3 &amp;&amp;\pmod{4} \\
 3t &amp;\equiv 1 &amp;&amp; \pmod{4} \\
 t &amp;\equiv (3)^{-1} \equiv 3 &amp;&amp;\pmod{4}
\end{align}</extension></listitem></list><paragraph>meaning that<space/><template><target>math</target><arg name="''t'' {{">}} 3 + 4''s''</arg></template><space/>for some integer<space/><template><target>mvar</target><arg>s</arg></template>. Substitute<space/><template><target>mvar</target><arg>t</arg></template><space/>into the first equation:</paragraph><list type='ident'><listitem><extension extension_name='math'>x = 2 + 3t = 2 + 3(3 + 4s) = 11 + 12s</extension></listitem></list><paragraph>Substitute this<space/><template><target>mvar</target><arg>x</arg></template><space/>into the third congruence:</paragraph><list type='ident'><listitem><extension extension_name='math'><space/>\begin{align}
11 + 12s &amp;\equiv 1 &amp;&amp; \pmod{5} \\
 1 + 2s &amp;\equiv 1 &amp;&amp;\pmod{5} \\
 2s &amp;\equiv 0 &amp;&amp;\pmod{5}
\end{align}</extension></listitem></list><paragraph>meaning that<space/><template><target>math</target><arg name="''s'' {{">}} 0 + 5''u''</arg></template><space/>for some integer<space/><template><target>mvar</target><arg>u</arg></template>. Finally,</paragraph><list type='ident'><listitem><extension extension_name='math'>x = 11 + 12s = 11 + 12(5u) = 11 + 60u</extension></listitem></list><paragraph>So, we have solutions<space/><template><target>math</target><arg>{11, 71, 131, 191, ...}.</arg></template></paragraph><paragraph>Notice that 60 = lcm(3,4,5). If the moduli are pairwise<space/><link><target>coprime</target></link><space/>(as they are in this example), the solutions will be congruent modulo their product.</paragraph><heading level='2'>A constructive algorithm to find the solution</heading><paragraph>The following algorithm only applies if the<space/><template><target>math</target><arg>''n<sub>i</sub>''</arg></template><space/>are pairwise coprime. (For simultaneous congruences when the moduli are not pairwise coprime, the<space/><link><target>method of successive substitution</target></link><space/>can often yield solutions.)</paragraph><paragraph>Suppose, as above, that a solution is required for the system of congruences:</paragraph><list type='ident'><listitem><extension extension_name='math'>x \equiv a_i \pmod{n_i}, \qquad i = 1, \cdots, k.</extension></listitem></list><paragraph>Define:<space/><template><target>math</target><arg name="''N'' {{">}} ''n''<sub>1</sub><space/>... ''n<sub>k</sub>''</arg></template>. For each<space/><template><target>mvar</target><arg>i</arg></template>, the integers<space/><template><target>math</target><arg>''n<sub>i</sub>''</arg></template><space/>and<space/><template><target>math</target><arg>{{sfrac|''N''|''n<sub>i</sub>''}}</arg></template><space/>are coprime. Using the<space/><link><target>extended Euclidean algorithm</target></link><space/>we can find<space/><template><target>math</target><arg>''r<sub>i</sub>'', ''s<sub>i</sub>'' ∈ '''Z'''</arg></template><space/>such that<space/><template><target>math</target><arg name="''r<sub>i</sub>n<sub>i</sub>'' + {{sfrac|''s<sub>i</sub>N''|''n<sub>i</sub>''}} {{">}} 1</arg></template>. Substitute<space/><template><target>math</target><arg>''e<sub>i</sub>''</arg></template><space/>for<space/><template><target>math</target><arg>{{sfrac|''s<sub>i</sub>N''|''n<sub>i</sub>''}},</arg></template><space/>to arrive at:<space/><template><target>math</target><arg name="''r<sub>i</sub>n<sub>i</sub>'' + ''e<sub>i</sub>'' {{">}} 1.</arg></template><space/>So the remainder of<space/><template><target>math</target><arg>''e<sub>i</sub>''</arg></template><space/>divided by<space/><template><target>math</target><arg>''n<sub>i</sub>''</arg></template><space/>is<space/><template><target>math</target><arg>1</arg></template>. On the other hand,<space/><template><target>math</target><arg name="''e<sub>i</sub>'' {{">}} {{sfrac|''s<sub>i</sub>N''|''n<sub>i</sub>''}},</arg></template><space/>guarantees that<space/><template><target>math</target><arg>''n<sub>j</sub>''</arg></template><space/>divides<space/><template><target>math</target><arg>''e<sub>i</sub>''</arg></template><space/>for<space/><template><target>math</target><arg>''j'' ≠ ''i''</arg></template>. To summarize:</paragraph><list type='ident'><listitem><extension extension_name='math'>e_i \equiv \begin{cases} 1 \pmod{n_i} \\ 0 \pmod{n_j} &amp; j \ne i \end{cases}</extension></listitem></list><paragraph>Because of this, and the multiplication rules allowed in congruences, one solution to the system of simultaneous congruences is:</paragraph><list type='ident'><listitem><extension extension_name='math'>x = \sum_{i=1}^k a_i e_i</extension></listitem></list><paragraph>For example, consider the problem of finding an integer<space/><template><target>mvar</target><arg>x</arg></template><space/>such that</paragraph><list type='ident'><listitem><extension extension_name='math'>\begin{cases} x \equiv 2 &amp; \pmod{3} \\ x \equiv 3 &amp; \pmod{4} \\ x \equiv 1 &amp; \pmod{5} \end{cases}</extension></listitem></list><paragraph>Using the extended Euclidean algorithm, for<space/><template><target>mvar</target><arg>x</arg></template><space/>modulo 3 and 20 [4 5], we find<space/><template><target>math</target><arg name="(−13) × 3 + 2 × 20 {{">}} 1</arg></template>; i.e.,<space/><template><target>math</target><arg name="''e''<sub>1</sub><space/>{{">}} 40</arg></template>. For<space/><template><target>mvar</target><arg>x</arg></template><space/>modulo 4 and 15 [3 5], we get<space/><template><target>math</target><arg name="(−11) × 4 + 3 × 15 {{">}} 1</arg></template>, i.e.<space/><template><target>math</target><arg name="''e''<sub>2</sub><space/>{{">}} 45</arg></template>. Finally, for<space/><template><target>mvar</target><arg>x</arg></template><space/>modulo 5 and 12 [3 4], we get<space/><template><target>math</target><arg name="5 × 5 + (−2) × 12 {{">}} 1</arg></template>, i.e.<space/><template><target>math</target><arg name="''e''<sub>3</sub><space/>{{">}} −24</arg></template>. A solution<space/><template><target>mvar</target><arg>x</arg></template><space/>is therefore<space/><template><target>math</target><arg name="2 × 40 + 3 × 45 + 1 × (−24) {{">}} 191</arg></template>. All other solutions are congruent to 191 modulo 60, [3 4 5], which means they are all congruent to 11 modulo 60.</paragraph><paragraph>Or in words:<space/></paragraph><list type='numbered'><listitem>Find a number<space/><template><target>math</target><arg>''e''<sub>i</sub></arg></template><space/>that gives modulo 1 for a particular divisor, but is divisible by all other divisors (coprime, in this case).<space/></listitem><listitem>Multiply the remainder (of the original number N to this particular divisor). Repeat with all the divisors.<space/></listitem><listitem>Sum all these products together.</listitem><listitem>Divide the sum by the<space/><link><target>Lowest common multiple</target><part>LCM</part></link><space/>of all the divisors. N shares the modulo with the final remainder.</listitem></list><paragraph>Thus, we have<space/><template><target>math</target><arg>''e''<sub>i</sub></arg></template><space/>values of<space/><italics>40</italics><space/>(divisible by 4 and 5; gives 1 for mod 3),<space/><italics>45</italics><space/>(for mod 4) and<space/><italics>36</italics><space/>(for mod 5). Multiplying by the given remainders 2, 3 and 1 yields 80, 135 and 36 respectively. The sum, 251, is then divided by 60, yielding remainder<space/><bold>11</bold>.</paragraph><list type='ident'><listitem><xhtml:small><bold>Note</bold>: There are multiple implementations of the extended Euclidean algorithm which will yield different sets of<space/><template><target>math</target><arg name="''e''<sub>1</sub><space/>{{">}} −20, ''e''<sub>2</sub><space/>{{</arg></template>, and<space/><template><target>math</target><arg name="''e''<sub>3</sub><space/>{{">}} −24</arg></template>. These sets however will produce the same solution; i.e.,<space/><template><target>math</target><arg name="(−20)2 + (−15)3 + (−24)1 {{">}} −109 ≡ 11 (mod 60)</arg></template>.</xhtml:small></listitem></list><paragraph>Using the same principle, the answer to Sun Tzu's original question is therefore<space/><bold>23</bold>, using<space/><template><target>math</target><arg>''e''<sub>i</sub></arg></template><space/>values of<space/><italics>70</italics>,<space/><italics>21</italics><space/>and<space/><italics>15</italics><space/>for divisors 3, 5, 7:<space/><template><target>math</target><arg name="(70)2 + (21)3 + (15)2 {{">}} 233 ≡ 23 (mod 105)</arg></template>.</paragraph><heading level='2'>Statement for principal ideal domains</heading><list type='ident'><listitem><bold>Chinese Remainder Theorem for<space/><link><target>principal ideal domain</target><part>Principal Ideal Domains</part></link>.</bold><space/>Let<space/><template><target>mvar</target><arg>R</arg></template><space/>be<space/><link><target>principal ideal domain</target></link>. If<space/><template><target>math</target><arg>''u''<sub>1</sub>, ..., ''u<sub>k</sub>''</arg></template><space/>are<space/><link><target>pairwise coprime</target></link><space/>elements of<space/><template><target>mvar</target><arg>R</arg></template><space/>where<space/><template><target>math</target><arg name="''u'' {{">}} ''u''<sub>1</sub>...''u<sub>k</sub>''</arg></template>, then the<space/><link><target>quotient ring</target></link><space/><template><target>math</target><arg>''R/uR''</arg></template><space/>and the<space/><link><target>product of rings</target><part>product ring</part></link><space/><template><target>math</target><arg>''R/u''<sub>1</sub>''R'' × ... × ''R/u<sub>k</sub>R''</arg></template><space/>are isomorphic via the following map:<list type='ident'><listitem><extension extension_name='math'>\begin{align}
 f: R/uR &amp;\to R/u_1R \times \cdots \times R/u_k R \\
 f(x + uR) &amp;= (x + u_1R, \ldots, x + u_kR)
\end{align}</extension></listitem></list></listitem></list><paragraph>This statement is a straightforward generalization of the above theorem about integer congruences:<space/><link><target>integer</target><part><template><target>math</target><arg>'''Z'''</arg></template></part></link><space/>is a principal ideal domain, the<space/><link><target>surjective</target><part>surjectivity</part></link><space/>of the map<space/><italics>f</italics><space/>shows that every system of congruences of the form</paragraph><list type='ident'><listitem><extension extension_name='math'>x \equiv a_i \pmod{u_i} \qquad 1 \leq i \leq k</extension></listitem></list><paragraph>can be solved for<space/><template><target>mvar</target><arg>x</arg></template>, and the<space/><link><target>injective</target><part>injectivity</part></link><space/>of the map<space/><italics>f</italics><space/>shows that all the solutions<space/><template><target>mvar</target><arg>x</arg></template><space/>are congruent modulo<space/><template><target>mvar</target><arg>u</arg></template>.</paragraph><paragraph><bold>Proof.</bold><space/>This map is well-defined and a homomorphism of rings. An inverse homomorphism can be constructed as follows, showing that it is in fact an isomorphism. For each<space/><template><target>mvar</target><arg>i</arg></template>, the elements<space/><template><target>math</target><arg>''u<sub>i</sub>''</arg></template><space/>and<space/><template><target>math</target><arg>''u/u<sub>i</sub>''</arg></template><space/>are coprime, and therefore there exist elements<space/><template><target>mvar</target><arg>r</arg></template><space/>and<space/><template><target>mvar</target><arg>s</arg></template><space/>in<space/><template><target>mvar</target><arg>R</arg></template><space/>with</paragraph><list type='ident'><listitem><extension extension_name='math'>r u_i + s u/u_i = 1</extension></listitem></list><paragraph>Set<space/><template><target>math</target><arg name="''e<sub>i</sub>'' {{">}} ''su/u<sub>i</sub>''</arg></template>. Then it is clear that</paragraph><list type='ident'><listitem><extension extension_name='math'>e_i \equiv \delta_{ij} \pmod{u_jR}.</extension></listitem></list><paragraph>Thus the inverse of<space/><italics>f</italics><space/>is the map</paragraph><list type='ident'><listitem><extension extension_name='math'>\begin{align}
 g: R/u_1R \times \cdots \times R/u_kR &amp;\to R/uR \\
 g(a_1 + u_1R, \ldots, a_k + u_kR) &amp;= \sum_{i=1}^k a_i e_i + uR
\end{align}</extension></listitem></list><heading level='2'>Statement for general rings</heading><paragraph>The general form of the Chinese remainder theorem, which implies all the statements given above, can be formulated for commutative<space/><link><target>ring (algebra)</target><part>rings</part></link><space/>and<space/><link><target>ring ideal</target><part>ideals</part></link>.</paragraph><paragraph><bold>Chinese Remainder Theorem for Commutative Rings.</bold><space/>If<space/><template><target>mvar</target><arg>R</arg></template><space/>is a commutative ring and<space/><template><target>math</target><arg>''I''<sub>1</sub>, ..., ''I<sub>k</sub>''</arg></template><space/>are ideals of<space/><italics>R</italics><space/>that are pairwise<space/><link><target>Coprime#Coprimality_in_ring_ideals</target><part>coprime</part></link><space/>(meaning<space/><template><target>math</target><arg name="''I<sub>i</sub>'' + ''I<sub>j</sub>'' {{">}} ''R''</arg></template><space/>for all<space/><template><target>math</target><arg>''i'' ≠ ''j''</arg></template>), then the product<space/><template><target>mvar</target><arg>I</arg></template><space/>of these ideals is equal to their intersection, and the<space/><link><target>quotient ring</target></link><space/><template><target>math</target><arg>''R/I''</arg></template><space/>is isomorphic to the<space/><link><target>product of rings</target><part>product ring</part></link><space/><template><target>math</target><arg>''R''/''I''<sub>1</sub><space/>× ... × ''R''/''I<sub>k</sub>''</arg></template><space/>via the<space/><link><target>ring homomorphism</target><part>isomorphism</part></link></paragraph><list type='ident'><listitem><list type='ident'><listitem><extension extension_name='math'>\begin{align}
 f\colon R/I &amp;\to R/I_1 \times \cdots \times R/I_k \\
 f(x + I) &amp;= (x + I_1, \cdots, x + I_k)
\end{align}</extension></listitem></list></listitem></list><paragraph>Here is a version of the theorem where<space/><italics>R</italics><space/>is not required to be commutative:</paragraph><paragraph><bold>Chinese Remainder Theorem for Noncommutative Rings.</bold><space/>Let<space/><template><target>mvar</target><arg>R</arg></template><space/>be any ring with 1 (not necessarily commutative) and<space/><template><target>math</target><arg>''I''<sub>1</sub>, ..., ''I<sub>k</sub>''</arg></template><space/>be pairwise coprime<space/><template><target>math</target><arg>2</arg></template>-sided ideals. Then the canonical ring homomorphism<space/><template><target>math</target><arg>''R'' → ''R''/''I''<sub>1</sub><space/>× ... × ''R''/''I<sub>k</sub>''</arg></template><space/>is onto, with kernel<space/><template><target>math</target><arg>''I''<sub>1</sub><space/>∩ ... ∩ ''I<sub>k</sub>''</arg></template>. Hence,<space/><extension extension_name='math'>\scriptstyle R/(I_1 \,\cap\, \cdots \,\cap\, I_k) \,\simeq\, R/I_1 \,\times\, \cdots \,\times\, R/I_k</extension>.</paragraph><heading level='2'>Applications</heading><heading level='3'>Sequence numbering</heading><paragraph>The Chinese remainder theorem can be used to construct an elegant<space/><link><target>Gdel numbering for sequences</target></link>, which is needed to prove<space/><link><target>Gdel's incompleteness theorems</target></link>.</paragraph><heading level='3'>Fast Fourier transform</heading><paragraph>The Good-Thomas<space/><link><target>fast Fourier transform</target></link><space/>algorithm exploits a re-indexing of the data based on the Chinese remainder theorem. The<space/><link><target>Prime-factor FFT algorithm</target></link><space/>contains an implementation.</paragraph><heading level='3'>Encryption</heading><paragraph>The Chinese remainder theorem can also be used in<space/><link><target>secret sharing</target></link>, which consists of distributing a set of shares among a group of people who, all together (but no one alone), can recover a certain secret from the given set of shares. Each of the shares is represented in a congruence, and the solution of the system of congruences using the Chinese remainder theorem is the secret to be recovered.<space/><link><target>Secret Sharing using the Chinese Remainder Theorem</target></link><space/>uses, along with the Chinese remainder theorem, special sequences of integers that guarantee the impossibility of recovering the secret from a set of shares with less than a certain<space/><link><target>cardinality</target></link>.</paragraph><heading level='3'>Hermite interpolation</heading><paragraph><bold>The General<space/><link><target>Hermite interpolation</target><part>Hermite Interpolation</part></link><space/>Problem.</bold><space/>Given<space/><template><target>mvar</target><arg>r</arg></template><space/>complex points (&quot;interpolation nodes&quot;)<space/><template><target>math</target><arg>''λ''<sub>1</sub>, …, ''λ<sub>r</sub>''</arg></template><space/>and complex data<space/><template><target>math</target><arg>{''a<sub>j,k</sub>'': 1 ≤ ''j'' ≤ ''r'', 0 ≤ ''k''<space/>< ''ν<sub>j</sub>''},</arg></template><space/>find<space/><template><target>math</target><arg>''P''(''x'') ∈ '''C'''[''x'']</arg></template><space/>such that:</paragraph><list type='ident'><listitem>&lt;math&gt;P^{(k)}(\lambda_j) = a_{j, k}\qquad 1 \leq j \leq r, \quad 0 \leq k &lt; \nu_j.&lt;/math&gt;</listitem></list><paragraph><bold>Solution.</bold><space/>Introducing the polynomials</paragraph><list type='ident'><listitem><extension extension_name='math'>A_j(x) := \sum_{k=0}^{\nu_j - 1}\frac{a_{j, k}}{k!}(x - \lambda_j)^k</extension></listitem></list><paragraph>the problem may be equivalently reformulated as a system of<space/><template><target>mvar</target><arg>r</arg></template><space/>simultaneous congruences:</paragraph><list type='ident'><listitem><extension extension_name='math'>P(x) \equiv A_j(x) \pmod {(x - \lambda_j)^{\nu_j}}, \qquad 1 \leq j \leq r</extension></listitem></list><paragraph>By the Chinese remainder theorem in the principal ideal domain<space/><template><target>math</target><arg>'''C'''[''x'']</arg></template>, there is a unique polynomial<space/><template><target>math</target><arg>''P''(''x'')</arg></template><space/>such that:</paragraph><list type='ident'><listitem><extension extension_name='math'>\deg(P) &lt; n := \sum_j\nu_j.</extension></listitem></list><paragraph>A direct construction, in analogy with the above proof for the integer number case, can be performed as follows. Define the polynomials</paragraph><list type='ident'><listitem><extension extension_name='math'>\begin{align}
 Q &amp;= \prod_{i=1}^{r}(x - \lambda_i)^{\nu_i} \\
 Q_j &amp;= \frac{Q}{(x - \lambda_j)^{\nu_j}}
\end{align}</extension></listitem></list><paragraph>The<space/><link><target>partial fraction decomposition</target></link><space/>of<space/><template><target>math</target><arg>{{sfrac|1|''Q''}}</arg></template><space/>gives<space/><template><target>mvar</target><arg>r</arg></template><space/>polynomials<space/><template><target>math</target><arg>''S<sub>j</sub>''</arg></template><space/>with degrees<space/><template><target>math</target><arg>deg(''S<sub>j</sub>'')<space/>< ''ν<sub>j</sub>''</arg></template><space/>such that</paragraph><list type='ident'><listitem><extension extension_name='math'>\frac{1}{Q} = \sum_{i=1}^{r} \frac{S_i}{(x - \lambda_i)^{\nu_i}}</extension></listitem></list><paragraph>so that</paragraph><list type='ident'><listitem><extension extension_name='math'>1 = \sum_{i=1}^{r}S_i Q_i.</extension></listitem></list><paragraph>Then a solution of the simultaneous congruence system is given by the polynomial</paragraph><list type='ident'><listitem><extension extension_name='math'>\sum_{i=1}^r A_i S_i Q_i = A_j + \sum_{i=1}^{r}(A_i - A_j) S_i Q_i \equiv A_j\pmod{(x - \lambda_j)^{\nu_j}}\qquad 1 \leq j \leq r</extension></listitem></list><paragraph>and the minimal degree solution is this one reduced modulo<space/><template><target>mvar</target><arg>Q</arg></template>, that is the unique with degree less than<space/><template><target>mvar</target><arg>n</arg></template>.</paragraph><heading level='3'>Dedekind's theorem</heading><paragraph><bold>Dedekind's Theorem on the Linear Independence of Characters.</bold><space/>Let<space/><template><target>mvar</target><arg>M</arg></template><space/>be a<space/><link><target>monoid</target></link><space/>and<space/><template><target>mvar</target><arg>k</arg></template><space/>an<space/><link><target>integral domain</target></link>, viewed as a monoid by considering the multiplication on<space/><template><target>mvar</target><arg>k</arg></template>. Then any finite family<space/><template><target>math</target><arg>(&nbsp;''f<sub>i</sub>''&nbsp;)<sub>''i''∈''I''</sub></arg></template><space/>of distinct monoid homomorphisms<space/><template><target>math</target><arg>&nbsp;''f<sub>i</sub>'' : ''M'' → ''k''</arg></template><space/>is linearly independent. In other words every family<space/><template><target>math</target><arg>(''α<sub>i</sub>'')<sub>''i''∈''I''</sub></arg></template><space/>of elements<space/><template><target>math</target><arg>''α<sub>i</sub>'' ∈ ''k''</arg></template><space/>satisfying<space/></paragraph><list type='ident'><listitem><extension extension_name='math'>\sum_{i \in I}\alpha_i f_i = 0</extension><space/></listitem></list><paragraph>must be equal to the family<space/><template><target>math</target><arg>(0)<sub>''i''∈''I''</sub></arg></template>.</paragraph><paragraph><bold>Proof.</bold><space/>First assume that<space/><template><target>mvar</target><arg>k</arg></template><space/>is a field, otherwise, replace the integral domain<space/><template><target>mvar</target><arg>k</arg></template><space/>by its quotient field, and nothing will change. We can linearly extend the monoid homomorphisms<space/><template><target>math</target><arg>&nbsp;''f<sub>i</sub>'' : ''M'' → ''k''</arg></template><space/>to<space/><template><target>mvar</target><arg>k</arg></template>-algebra homomorphisms<space/><template><target>math</target><arg>''F<sub>i</sub>'' : ''k''[''M''] → ''k''</arg></template>, where<space/><template><target>math</target><arg>''k''[''M'']</arg></template><space/>is the<space/><link><target>monoid ring</target></link><space/>of<space/><template><target>mvar</target><arg>M</arg></template><space/>over<space/><template><target>mvar</target><arg>k</arg></template>. Then, by linearity, the condition</paragraph><list type='ident'><listitem><extension extension_name='math'>\sum_{i\in I}\alpha_i f_i = 0,</extension></listitem></list><paragraph>yields</paragraph><list type='ident'><listitem><extension extension_name='math'>\sum_{i \in I}\alpha_i F_i = 0.</extension></listitem></list><paragraph>Next, for<space/><template><target>math</target><arg>''i'', ''j'' ∈ ''I''; ''i'' ≠ ''j''</arg></template><space/>the two<space/><template><target>mvar</target><arg>k</arg></template>-linear maps<space/><template><target>math</target><arg>''F<sub>i</sub>'' : ''k''[''M''] → ''k''</arg></template><space/>and<space/><template><target>math</target><arg>''F<sub>j</sub>'' : ''k''[''M''] → ''k''</arg></template><space/>are not proportional to each other. Otherwise<space/><template><target>math</target><arg>&nbsp;''f<sub>i</sub>''&nbsp;</arg></template><space/>and<space/><template><target>math</target><arg>&nbsp;''f<sub>j</sub>''&nbsp;</arg></template><space/>would also be proportional, and thus equal since as monoid homomorphisms they satisfy:<space/><template><target>math</target><arg name="&nbsp;''f<sub>i</sub>''&nbsp;(1) {{">}} 1 {{</arg></template>, which contradicts the assumption that they are distinct.</paragraph><paragraph>Therefore the kernels<space/><template><target>math</target><arg>Ker ''F<sub>i</sub>''</arg></template><space/>and<space/><template><target>math</target><arg>Ker ''F<sub>j</sub>''</arg></template><space/>are distinct. Since<space/><template><target>math</target><arg name="''k''[''M'']/Ker ''F<sub>i</sub>'' ≅ ''F<sub>i</sub>''(''k''[''M'']) {{">}} ''k''</arg></template><space/>is a field,<space/><template><target>math</target><arg>Ker ''F<sub>i</sub>''</arg></template><space/>is a maximal ideal of<space/><template><target>math</target><arg>''k''[''M'']</arg></template><space/>for every<space/><template><target>math</target><arg>''i'' ∈ ''I''</arg></template>. Because they are distinct and maximal the ideals<space/><template><target>math</target><arg>Ker ''F<sub>i</sub>''</arg></template><space/>and<space/><template><target>math</target><arg>Ker ''F<sub>j</sub>''</arg></template><space/>are coprime whenever<space/><template><target>math</target><arg>''i'' ≠ ''j''</arg></template>. The Chinese Remainder Theorem (for general rings) yields an isomorphism:</paragraph><list type='ident'><listitem><extension extension_name='math'>\begin{align}
 \phi: k[M] / K &amp;\to \prod_{i \in I}k[M] / \mathrm{Ker} F_i \\
 \phi(x + K) &amp;= \left(x + \mathrm{Ker} F_i\right)_{i \in I}
\end{align}</extension></listitem></list><paragraph>where</paragraph><list type='ident'><listitem><extension extension_name='math'>K = \prod_{i \in I}\mathrm{Ker} F_i = \bigcap_{i \in I}\mathrm{Ker} F_i.</extension></listitem></list><paragraph>Consequently, the map</paragraph><list type='ident'><listitem><extension extension_name='math'>\begin{align}
 \Phi: k[M] &amp;\to \prod_{i \in I}k[M]/ \mathrm{Ker} F_i \\
 \Phi(x) &amp;= \left(x + \mathrm{Ker} F_i\right)_{i \in I}
\end{align}</extension></listitem></list><paragraph>is surjective. Under the isomorphisms<space/><template><target>math</target><arg name="''k''[''M'']/Ker ''F<sub>i</sub>'' → ''F<sub>i</sub>''(''k''[''M'']) {{">}} ''k'',</arg></template><space/>the map<space/><template><target>math</target><arg>Φ</arg></template><space/>corresponds to:</paragraph><list type='ident'><listitem><extension extension_name='math'>\begin{align}
 \psi: k[M] &amp;\to \prod_{i \in I}k \\
 \psi(x) &amp;= \left[F_i(x)\right]_{i \in I}
\end{align}</extension></listitem></list><paragraph>Now,</paragraph><list type='ident'><listitem><extension extension_name='math'>\sum_{i \in I}\alpha_i F_i = 0</extension></listitem></list><paragraph>yields</paragraph><list type='ident'><listitem><extension extension_name='math'>\sum_{i \in I}\alpha_i u_i = 0</extension></listitem></list><paragraph>for every vector<space/><template><target>math</target><arg>(''u<sub>i</sub>'')<sub>''i''∈''I''</sub></arg></template><space/>in the image of the map<space/><template><target>mvar</target><arg>ψ</arg></template>. Since<space/><template><target>mvar</target><arg>ψ</arg></template><space/>is surjective, this means that</paragraph><list type='ident'><listitem><extension extension_name='math'>\sum_{i \in I}\alpha_i u_i = 0</extension></listitem></list><paragraph>for every vector</paragraph><list type='ident'><listitem><extension extension_name='math'>\left(u_i\right)_{i \in I} \in \prod_{i \in I}k.</extension></listitem></list><paragraph>Consequently,<space/><template><target>math</target><arg name="(''α<sub>i</sub>'')<sub>''i''∈''I''</sub><space/>{{">}} (0)<sub>''i''∈''I''</sub></arg></template>. QED.</paragraph><heading level='2'>Non-commutative case: a caveat</heading><paragraph>Sometimes in the commutative case, the conclusion of the Chinese Remainder Theorem is stated as<space/><template><target>math</target><arg>''R''/(''I''<sub>1</sub><space/>... ''I<sub>k</sub>'') ≅ ''R''/''I''<sub>1</sub><space/>× ... × ''R''/''I<sub>k</sub>''</arg></template>. This version does not hold in the non-commutative case, since<space/><template><target>math</target><arg>''I''<sub>1</sub><space/>∩ ... ∩ ''I<sub>k</sub>'' ≠ ''I''<sub>1</sub><space/>... ''I<sub>k</sub>''</arg></template>, as can be seen from the following case:</paragraph><list type='ident'><listitem><bold>Proposition.</bold><space/>Let<space/><template><target>mvar</target><arg>R</arg></template><space/>be the ring of non-commutative real polynomials in<space/><template><target>mvar</target><arg>x</arg></template><space/>and<space/><template><target>mvar</target><arg>y</arg></template>. Let<space/><template><target>mvar</target><arg>I</arg></template><space/>be the principal two-sided ideal generated by<space/><template><target>mvar</target><arg>x</arg></template><space/>and<space/><template><target>mvar</target><arg>J</arg></template><space/>the principal two-sided ideal generated by<space/><template><target>math</target><arg>''xy'' + 1</arg></template>. Then<space/><template><target>math</target><arg name="''I'' + ''J'' {{">}} ''R''</arg></template><space/>but<space/><template><target>math</target><arg>''I'' ∩ ''J'' ≠ ''IJ''</arg></template>.</listitem></list><paragraph><bold>Proof.</bold><space/>Observe that<space/><template><target>mvar</target><arg>I</arg></template><space/>is formed by all polynomials with an<space/><template><target>mvar</target><arg>x</arg></template><space/>in every term and that every polynomial in<space/><template><target>mvar</target><arg>J</arg></template><space/>vanishes under the substitution<space/><template><target>math</target><arg name="''y'' {{">}} − {{sfrac|1|''x''}}</arg></template>. Then clearly<space/><template><target>math</target><arg name="''p'' {{">}} (''xy'' + 1)''x'' ∈ ''I'' ∩ ''J''</arg></template>. Define a &quot;term in<space/><template><target>mvar</target><arg>R</arg></template>&quot;, as an element of the multiplicative monoid of<space/><template><target>mvar</target><arg>R</arg></template><space/>generated by<space/><template><target>mvar</target><arg>x</arg></template><space/>and<space/><template><target>mvar</target><arg>y</arg></template>, and its degree as the usual degree of the term after the substitution<space/><template><target>math</target><arg name="''y'' {{">}} ''x''</arg></template>. On the other hand, suppose<space/><template><target>math</target><arg>''q'' ∈ ''J''</arg></template>. Observe that a term in<space/><template><target>mvar</target><arg>q</arg></template><space/>of maximum degree depends on<space/><template><target>mvar</target><arg>y</arg></template><space/>otherwise<space/><template><target>mvar</target><arg>q</arg></template><space/>under the substitution<space/><template><target>math</target><arg name="''y'' {{">}} − {{sfrac|1|''x''}}</arg></template><space/>can not vanish. The same happens then for an element<space/><template><target>math</target><arg>''q'' ∈ ''IJ''</arg></template>. Note that the last<space/><template><target>mvar</target><arg>y</arg></template>, from left to right, in a term of maximum degree in an element of<space/><template><target>mvar</target><arg>IJ</arg></template><space/>is preceded by more than one<space/><template><target>mvar</target><arg>x</arg></template>. (We are counting here all the preceding<space/><template><target>mvar</target><arg>x</arg></template>s. E.g., in<space/><template><target>math</target><arg>''x''<sup>2</sup>''yxyx''<sup>5</sup></arg></template><space/>the last<space/><template><target>mvar</target><arg>y</arg></template><space/>is preceded by three<space/><template><target>mvar</target><arg>x</arg></template>s.) This proves that<space/><template><target>math</target><arg name="''p'' {{">}} (''xy'' + 1)''x'' ∉ ''IJ''</arg></template><space/>since the last<space/><template><target>mvar</target><arg>y</arg></template><space/>in the term of maximum degree in<space/><template><target>mvar</target><arg>p</arg></template><space/>(<template><target>mvar</target><arg>xyx</arg></template>) is preceded by only one<space/><template><target>mvar</target><arg>x</arg></template>. Hence<space/><template><target>math</target><arg>''I'' ∩ ''J'' ≠ ''IJ''</arg></template>.</paragraph><paragraph>However, it is true in general that<space/><template><target>math</target><arg name="''I'' + ''J'' {{">}} ''R''</arg></template><space/>implies<space/><template><target>math</target><arg name="''I'' ∩ ''J'' {{">}} ''IJ'' + ''JI''</arg></template>. To see this, note that<space/><template><target>math</target><arg name="''I'' ∩ ''J'' {{">}} (''I'' ∩ ''J'')(''I'' + ''J'') ⊂ ''IJ'' + ''JI''</arg></template>, while the opposite inclusion is obvious. Also, we have in general that, provided<space/><template><target>math</target><arg>''I''<sub>1</sub>, ..., ''I<sub>m</sub>''</arg></template><space/>are pairwise coprime two-sided ideals in<space/><template><target>mvar</target><arg>R</arg></template>, the natural map</paragraph><list type='ident'><listitem><extension extension_name='math'>R / (I_1 \cap \cdots \cap I_m) \to R/I_1 \oplus \cdots \oplus R/I_m</extension></listitem></list><paragraph>is an isomorphism. Note that<space/><template><target>math</target><arg>''I''<sub>1</sub><space/>∩ ... ∩ ''I<sub>m</sub>''</arg></template><space/>can be replaced by a sum over all orderings of<space/><template><target>math</target><arg>''I''<sub>1</sub>, ..., ''I<sub>m</sub>''</arg></template><space/>of their product (or just a sum over enough orderings, using inductively that<space/><template><target>math</target><arg name="''I'' ∩ ''J'' {{">}} ''IJ'' + ''JI''</arg></template><space/>for coprime ideals<space/><template><target>math</target><arg>''I'', ''J'' ⊂ ''R''</arg></template>).</paragraph><heading level='2'>See also</heading><list type='bullet'><listitem><link><target>Covering system</target></link></listitem><listitem><link><target>Hasse principle</target></link></listitem><listitem><link><target>Residue number system</target></link></listitem><listitem><link><target>Secret sharing using the Chinese remainder theorem</target></link></listitem></list><heading level='2'>Notes</heading><paragraph><template><target>Reflist</target></template></paragraph><heading level='2'>References</heading><paragraph><template><target>nofootnotes</target><arg name="date">February 2015</arg></template></paragraph><list type='bullet'><listitem><template><target>citation</target><arg name="last1"><space/>Cormen
<space/></arg><arg name="first1"><space/>Thomas H.
<space/></arg><arg name="authorlink1"><space/>Thomas H. Cormen
<space/></arg><arg name="last2"><space/>Leiserson
<space/></arg><arg name="first2"><space/>Charles E.
<space/></arg><arg name="authorlink2"><space/>Charles E. Leiserson
<space/></arg><arg name="last3"><space/>Rivest
<space/></arg><arg name="first3"><space/>Ronald L.
<space/></arg><arg name="authorlink3"><space/>Ronald L. Rivest
<space/></arg><arg name="last4"><space/>Stein
<space/></arg><arg name="first4"><space/>Clifford
<space/></arg><arg name="authorlink4"><space/>Clifford Stein
<space/></arg><arg name="year"><space/>2001
<space/></arg><arg name="title"><space/>[[Introduction to Algorithms]]
<space/></arg><arg name="edition"><space/>Second
<space/></arg><arg name="publisher"><space/>[[MIT Press]] and McGraw-Hill
<space/></arg><arg name="isbn"><space/>0-262-03293-7
</arg></template>. See Section 31.5: The Chinese remainder theorem, pp.&amp;nbsp;873876.</listitem><listitem><template><target>citation</target><arg name="title"><space/>Chinese Remainder Theorem: Applications in Computing, Coding, Cryptography
<space/></arg><arg name="last1"><space/>Ding
<space/></arg><arg name="first1"><space/>Cunsheng
<space/></arg><arg name="last2"><space/>Pei
<space/></arg><arg name="first2"><space/>Dingyi
<space/></arg><arg name="last3"><space/>Salomaa
<space/></arg><arg name="first3"><space/>Arto
<space/></arg><arg name="publisher"><space/>World Scientific Publishing
<space/></arg><arg name="year"><space/>1996
<space/></arg><arg name="isbn"><space/>981-02-2827-9
<space/></arg><arg name="url"><space/>http://www.worldscientific.com/worldscibooks/10.1142/3254
<space/></arg><arg name="pages"><space/>1–213
</arg></template></listitem><listitem><template><target>citation</target><arg name="last"><space/>Duchet
<space/></arg><arg name="first"><space/>Pierre
<space/></arg><arg name="editor1-last"><space/>Graham<space/></arg><arg name="editor1-first"><space/>R. L.
<space/></arg><arg name="editor2-last"><space/>Grötschel<space/></arg><arg name="editor2-first"><space/>M.
<space/></arg><arg name="editor3-last"><space/>Lovász<space/></arg><arg name="editor3-first"><space/>L.
<space/></arg><arg name="contribution"><space/>Hypergraphs
<space/></arg><arg name="location"><space/>Amsterdam
<space/></arg><arg name="mr"><space/>1373663
<space/></arg><arg name="pages"><space/>381–432
<space/></arg><arg name="publisher"><space/>Elsevier
<space/></arg><arg name="title"><space/>Handbook of combinatorics, Vol. 1, 2
<space/></arg><arg name="year"><space/>1995
</arg></template>. See in particular Section 2.5, &quot;Helly Property&quot;,<space/><link type='external' href='http://books.google.com/books?id=5Y9NCwlx63IC&amp;amp;pg=PA393'>pp.&amp;nbsp;393394</link>.</listitem><listitem><template><target>citation</target><arg name="last1"><space/>Gauss<space/></arg><arg name="first1"><space/>Carl Friedrich
<space/></arg><arg name="last2"><space/>Clarke<space/></arg><arg name="first2"><space/>Arthur A. (translator into English) 
<space/></arg><arg name="title"><space/>Disquisitiones Arithemeticae
<space/></arg><arg name="edition"><space/>Second, corrected
<space/></arg><arg name="publisher"><space/>[[Springer Science+Business Media|Springer]]
<space/></arg><arg name="location"><space/>New York
<space/></arg><arg name="year"><space/>1986
<space/></arg><arg name="isbn"><space/>978-0-387-96254-2
<space/></arg><arg name="url"><space/>http://www.springer.com/mathematics/algebra/book/978-0-387-96254-2
</arg></template></listitem><listitem><template><target>citation</target><arg name="title"><space/>Algebra
<space/></arg><arg name="last"><space/>Hungerford
<space/></arg><arg name="first"><space/>Thomas W.
<space/></arg><arg name="authorlink"><space/>Thomas W. Hungerford
<space/></arg><arg name="publisher"><space/>Springer-Verlag
<space/></arg><arg name="series"><space/>Graduate Texts in Mathematics, Vol. 73
<space/></arg><arg name="year"><space/>1974
<space/></arg><arg name="isbn"><space/>978-1-4612-6101-8
<space/></arg><arg name="url"><space/>http://www.springer.com/mathematics/algebra/book/978-0-387-90518-1
<space/></arg><arg name="pages"><space/>131–132
</arg></template></listitem><listitem><template><target>citation</target><arg name="last"><space/>Kak
<space/></arg><arg name="first"><space/>Subhash
<space/></arg><arg name="authorlink"><space/>Subhash Kak
<space/></arg><arg name="issue"><space/>1
<space/></arg><arg name="journal"><space/>Indian Journal of History of Science
<space/></arg><arg name="pages"><space/>62–71
<space/></arg><arg name="title"><space/>Computational aspects of the Aryabhata algorithm
<space/></arg><arg name="url"><space/>http://www.ece.lsu.edu/kak/AryabhataAlgorithm.pdf
<space/></arg><arg name="volume"><space/>21
<space/></arg><arg name="year"><space/>1986
</arg></template></listitem><listitem><template><target>citation</target><arg name="last"><space/>Knuth
<space/></arg><arg name="first"><space/>Donald
<space/></arg><arg name="authorlink"><space/>Donald Knuth
<space/></arg><arg name="year"><space/>1997
<space/></arg><arg name="title"><space/>[[The Art of Computer Programming]]
<space/></arg><arg name="volume"><space/>Volume 2: ''Seminumerical Algorithms''
<space/></arg><arg name="edition"><space/>Third
<space/></arg><arg name="publisher"><space/>Addison-Wesley
<space/></arg><arg name="isbn"><space/>0-201-89684-2
</arg></template>. See Section 4.3.2 (pp.&amp;nbsp;286291), exercise 4.6.23 (page 456).</listitem><listitem><template><target>citation</target><arg name="title"><space/>Fibonacci's Liber Abaci
<space/></arg><arg name="author1"><space/>[[Leonardo Pisano]]
<space/></arg><arg name="last2"><space/>Sigler
<space/></arg><arg name="first2"><space/>Laurence E. (translator into English)
<space/></arg><arg name="publisher"><space/>Springer-Verlag
<space/></arg><arg name="year"><space/>2002
<space/></arg><arg name="isbn"><space/>0-387-95419-8
<space/></arg><arg name="url"><space/>http://www.springer.com/mathematics/book/978-0-387-40737-1
<space/></arg><arg name="pages"><space/>402–403
</arg></template></listitem></list><heading level='2'>External links</heading><list type='bullet'><listitem><template><target>springer</target><arg name="title"><space/>Chinese remainder theorem<space/></arg><arg name="id"><space/>p/c022120</arg></template></listitem><listitem><link type='external' href='http://demonstrations.wolfram.com/ChineseRemainderTheorem/'>&quot;Chinese Remainder Theorem&quot;</link><space/>by<space/><link><target>Ed Pegg, Jr.</target></link>,<space/><link><target>Wolfram Demonstrations Project</target></link>, 2007.</listitem><listitem><template><target>MathWorld</target><arg name="urlname"><space/>ChineseRemainderTheorem<space/></arg><arg name="title"><space/>Chinese Remainder Theorem</arg></template></listitem><listitem><link type='external' href='http://www.codeproject.com/KB/recipes/CRP.aspx'>C# program and discussion</link><space/>at<space/><link><target>codeproject</target></link></listitem><listitem><link type='external' href='http://www.math.hawaii.edu/~lee/courses/Chinese.pdf'>University of Hawaii System</link><space/>CRT by Lee Lady</listitem><listitem><link type='external' href='http://ctext.org/sunzi-suan-jing'>Full text of the Sunzi Suanjing</link><space/>(Chinese) &amp;mdash;<space/><link><target>Chinese Text Project</target></link></listitem></list><paragraph><link><target>Category:Articles containing proofs</target></link><link><target>Category:Chinese mathematical discoveries</target><part>Sun, Master</part></link><link><target>Category:Commutative algebra</target></link><link><target>Category:Modular arithmetic</target></link><link><target>Category:Theorems in number theory</target></link></paragraph></article>