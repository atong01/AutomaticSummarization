<article title='Extractor_%28mathematics%29'><paragraph>An<space/><extension extension_name='math'>(N,M,D,K,\epsilon)</extension><space/>-<bold>extractor</bold><space/>is a<space/><link><target>bipartite graph</target></link><space/>with<space/><extension extension_name='math'>N</extension><space/>nodes on the left and<space/><extension extension_name='math'>M</extension><space/>nodes on the right such that each node on the left has<space/><extension extension_name='math'>D</extension><space/>neighbors (on the right), which has the added property thatfor any subset<space/><extension extension_name='math'>A</extension><space/>of the left vertices of size at least<space/><extension extension_name='math'>K</extension>, the distribution on right vertices obtained by choosing a random node in<space/><extension extension_name='math'>A</extension><space/>and then following a random<space/><link><target>graph theory</target><part>edge</part></link><space/>to get a node x on the right side is<space/><extension extension_name='math'>\epsilon</extension>-close to the<space/><link><target>Uniform distribution (continuous)</target><part>uniform distribution</part></link><space/>in terms of<space/><link><target>total variation distance</target></link>.</paragraph><paragraph>A<space/><link><target>disperser</target></link><space/>is a related graph.<space/></paragraph><paragraph>An equivalent way to view an extractor is as a bivariate function<space/></paragraph><list type='ident'><listitem><extension extension_name='math'>E : [N] \times [D] \rightarrow [M]</extension><space/></listitem></list><paragraph>in the natural way. With this view it turns out that the extractor property is equivalent to: for any source of randomness<space/><extension extension_name='math'>X</extension><space/>that gives<space/><extension extension_name='math'>n</extension><space/><link><target>bit</target><trail>s</trail></link><space/>with<space/><link><target>min-entropy</target></link><space/><extension extension_name='math'>\log K</extension>, the distribution<space/><extension extension_name='math'><space/>E(X,U_D)<space/></extension><space/>is<space/><extension extension_name='math'>\epsilon</extension>-close to<space/><extension extension_name='math'>U_M</extension>, where<space/><extension extension_name='math'>U_T</extension><space/>denotes the uniform distribution on<space/><extension extension_name='math'>[T]</extension>.</paragraph><paragraph>Extractors are interesting when they can be constructed with small<space/><extension extension_name='math'>K,D,\epsilon</extension><space/>relative to<space/><extension extension_name='math'>N</extension><space/>and<space/><extension extension_name='math'>M</extension><space/>is as close to<space/><extension extension_name='math'>KD</extension><space/>(the total randomness in the input sources) as possible.</paragraph><paragraph>Extractor functions were originally researched as a way to<space/><italics>extract</italics><space/><link><target>randomness</target></link><space/>from weakly random sources.<space/><italics>See</italics><space/><link><target>randomness extractor</target></link>.</paragraph><paragraph>Using the<space/><link><target>probabilistic method</target></link><space/>it is easy to show that extractor graphs with really good parameters exist. The challenge is to find explicit or<space/><link><target>polynomial time</target></link><space/>computable examples of such graphs with good parameters. Algorithms that compute extractor (and disperser) graphs have found many applications in<space/><link><target>computer science</target></link>.</paragraph><heading level='2'>References</heading><list type='bullet'><listitem>Ronen Shaltiel,<space/><link type='external' href='http://www.cs.haifa.ac.il/~ronen/online_papers/survey.ps'>Recent developments in extractors</link><space/>- a survey</listitem></list><paragraph><link><target>Category:Graph families</target></link><link><target>Category:Pseudorandomness</target></link><link><target>Category:Theoretical computer science</target></link></paragraph></article>