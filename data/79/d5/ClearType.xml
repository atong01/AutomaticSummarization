<article title='ClearType'><paragraph><template><target>multiple issues</target><arg name="{{refimprove|date">August 2014}}
{{misleading|date</arg></template><bold>ClearType</bold><space/>is<space/><link><target>Microsoft</target></link>'s implementation of<space/><link><target>subpixel rendering</target></link><space/>technology in rendering text in a<space/><link><target>font</target></link><space/>system. ClearType attempts to improve the appearance of text on certain types of<space/><link><target>computer display</target></link><space/>screens by sacrificing color fidelity for additional intensity variation. This trade-off is asserted to work well on<space/><link><target>LCD</target></link><space/><link><target>flat panel</target></link><space/>monitors.</paragraph><paragraph>ClearType was first announced at the November 1998<space/><link><target>COMDEX</target></link><space/>exhibition. The technology was first introduced in software in January 2000<extension extension_name='ref'><template><target>cite web</target><arg name="url">http://www.microsoft.com/typography/links/news.aspx?NID</arg><arg name="title">First ClearType screens posted</arg><arg name="publisher">Microsoft Typography</arg><arg name="date">2000-01-26</arg><arg name="accessdate">2008-03-20</arg></template></extension><space/>as an always-on feature of<space/><link><target>Microsoft Reader</target></link>, which was released to the public in August 2000.</paragraph><paragraph>ClearType was significantly changed with the introduction of<space/><link><target>DirectWrite</target></link><space/>in<space/><link><target>Windows 7</target></link>.<extension extension_name='ref' name="ails"><template><target>cite web</target><arg name="last1">Giannattasio</arg><arg name="first1">Tom</arg><arg name="title">The Ails Of Typographic Anti-Aliasing</arg><arg name="url">http://www.smashingmagazine.com/2009/11/the-ails-of-typographic-anti-aliasing/</arg><arg name="website">Smashing Magazine</arg><arg name="accessdate">11 August 2015</arg></template></extension></paragraph><heading level='2'>Background</heading><paragraph>Computer displays where the positions of individual pixels are permanently fixedsuch as most modern<space/><link><target>flat panel</target></link><space/>displayscan show saw-tooth edges when displaying small, high-contrast graphic elements, such as text. ClearType uses<space/><link><target>spatial anti-aliasing</target></link><space/>at the subpixel level to reduce visible artifacts on such displays when text is rendered, making the text appear &quot;smoother&quot; and less jagged. ClearType also uses very heavy<space/><link><target>font hinting</target></link><space/>to force the font to fit into the pixel grid. This increases edge contrast and readability of small fonts at the expense of font rendering fidelity and has been criticized by graphic designers for making different fonts look similar<space/><template><target>Citation needed</target><arg name="date">April 2014</arg></template>.</paragraph><paragraph>Like most other types of subpixel rendering, ClearType involves a compromise, sacrificing one aspect of image quality (color or<space/><italics><link><target>chrominance</target></link></italics><space/>detail) for another (light and dark or<space/><italics><link><target>luminance</target></link></italics><space/>detail). The compromise can improve text appearance when luminance detail is more important than chrominance.</paragraph><paragraph>Only user and system applications render application of ClearType. ClearType does not alter other graphic display elements (including text already in<space/><link><target>bitmap</target><trail>s</trail></link>). For example, ClearType enhancement renders text on the screen in<space/><link><target>Microsoft Office Word</target><part>Microsoft Word</part></link>, but text placed in a bitmapped image in a program such as<space/><link><target>Photoshop</target><part>Adobe Photoshop</part></link><space/>is not. In theory, the method (called &quot;RGB Decimation&quot; internally) can enhance the anti-aliasing of any digital image.<extension extension_name='ref'>Betrisey et al., &quot;Displaced Filtering for Patterned Displays&quot;, Proc. Society for Information Display Symposium, 2000</extension></paragraph><paragraph>ClearType is not used when printing text. Most printers already use such small pixels that aliasing is rarely a problem, and they don't have the addressable fixed subpixels ClearType requires. Nor does ClearType affect text stored in files. ClearType only applies any processing to the text while it is being rendered onto the screen.</paragraph><paragraph>ClearType was invented in the Microsoft e-Books team by Bert Keely and Greg Hitchcock. It was then analyzed by researchers in the company, and signal processing expert<space/><link><target>John Platt (Principal Researcher)</target><part>John Platt</part></link><space/>designed an improved version of the algorithm.<extension extension_name='ref'>Platt, J.C., &quot;<link type='external' href='http://research.microsoft.com/pubs/68972/optfilt.pdf'>Optimal Filtering for Patterned Displays</link>&quot;, IEEE Signal Processing Letters, 7(7), 2000, pp. 179-180</extension><space/><link><target>Dick Brass</target></link>, a Vice President at Microsoft from 1997 to 2004, complained that the company was slow in moving ClearType to market in the portable computing field.<extension extension_name='ref'><link type='external' href='http://www.nytimes.com/2010/02/04/opinion/04brass.html?pagewanted=1&amp;amp;ref=opinion'>Microsofts Creative Destruction</link></extension></paragraph><heading level='2'>How ClearType works</heading><paragraph><template><target>unreferenced section</target><arg name="date">August 2014</arg></template><template><target>Duplication</target><arg name="section">yes</arg><arg name="dupe">subpixel rendering</arg><arg name="date">August 2014</arg></template>Normally, the software in a computer treats the computers display screen as a rectangular array of square, indivisible<space/><link><target>pixel</target><trail>s</trail></link>, each of which has an intensity and color that are determined by the blending of three<space/><link><target>primary color</target><trail>s</trail></link>: red, green, and blue. However, actual display hardware usually implements each pixel as a group of three adjacent, independent<space/><italics><link><target>subpixel</target><trail>s</trail></link>,</italics><space/>each of which displays a different primary color. Thus, on a real computer display, each pixel is actually composed of separate red, green, and blue subpixels. For example, if a flat-panel display is examined under a magnifying glass, the pixels may appear as follows:</paragraph><paragraph><link><target>Image:27 subpixels.svg</target><part>center</part><part>Subpixels</part><part>thumb</part></link></paragraph><paragraph>In the illustration above, there are nine pixels but 27 subpixels.</paragraph><paragraph>If the computer controlling the display knows the exact position and color of all the subpixels on the screen, it can take advantage of this to improve the apparent resolution in certain situations. If each pixel on the display actually contains three rectangular subpixels of red, green, and blue, in that fixed order, then things on the screen that are smaller than one full pixel in size can be rendered by lighting only one or two of the subpixels. For example, if a diagonal line with a width smaller than a full pixel must be rendered, then this can be done by lighting only the subpixels that the line actually touches. If the line passes through the leftmost portion of the pixel, only the red subpixel is lit; if it passes through the rightmost portion of the pixel, only the blue subpixel is lit. This effectively triples the horizontal resolution of the image at normal viewing distances; the drawback is that the line thus drawn will show color fringes (at some points it might look green, at other points it might look red or blue).</paragraph><paragraph><link><target>Image:Antialias-vrs-Cromapixel.svg</target><part>center</part><part>frame</part><part>1) A diagonal line on a 1-bit display. 2) Grayscale anti-aliasing. 3) Identical to 1, but on a color monitor. 4) Rendered with direct control of each color subpixel. 5) Smaller version of 1-4. 6) 1 pixel lines without and with anti-aliasing.</part></link></paragraph><paragraph>ClearType uses this method to improve the smoothness of text. When the elements of a type character are smaller than a full pixel, ClearType lights only the appropriate subpixels of each full pixel in order to more closely follow the outlines of that character. Text rendered with ClearType looks smoother than text rendered without it, provided that the pixel layout of the display screen exactly matches what ClearType expects.</paragraph><paragraph>The following picture shows a 4 enlargement of the word<space/><italics>Wikipedia</italics><space/>rendered using ClearType.The word was originally rendered using a<space/><link><target>Times New Roman</target></link><space/>12<space/><link><target>Point (typography)</target><part>pt</part></link><space/><link><target>typeface</target><part>font</part></link>.</paragraph><list type='ident'><listitem><link><target>Image:Wikipedia ClearType.png</target><part>center</part><part>frame</part><part>The word &quot;Wikipedia&quot; rendered using ClearType</part></link></listitem></list><paragraph>In this magnified view, it becomes clear that, while the overall smoothness of the text seems to improve, there is also color fringing of the text.</paragraph><paragraph><link><target>Image:ClearTypePixels.svg</target><part>thumb</part><part>center</part><part>283px</part><part>(a) text rendered without ClearType and (b) text rendered with ClearType</part></link></paragraph><paragraph>An extreme close-up of a color display shows (a) text rendered without ClearType and (b) text rendered with ClearType. Note the changes in subpixel intensity that are used to increase effective resolution when ClearType is enabledwithout ClearType, all sub-pixels of a given pixel have the same intensity.</paragraph><paragraph><link><target>Image:Cleartype-vs-Standard-Antialiasing.gif</target><part>center</part><part>(a) text rendered without ClearType and (b) text rendered with ClearType</part></link></paragraph><paragraph>In the above lines of text, when the orange circle is shown, all the text in the frame is rendered using ClearType (RGB subpixel rendering); when the orange circle is absent all the text is rendered using normal (full pixel greyscale) anti-aliasing.</paragraph><heading level='2'>ClearType, human vision and cognition</heading><paragraph>ClearType and similar technologies work on the theory that variations in intensity are more noticeable than variations in color.</paragraph><heading level='3'>Expert opinion</heading><paragraph>In a<space/><link><target>MSDN</target></link><space/>article, Microsoft acknowledges that &quot;[te]xt that is rendered with ClearType can also appear significantly different when viewed by individuals with varying levels of color sensitivity. Some individuals can detect slight differences in color better than others.&quot;<extension extension_name='ref'><link type='external' href='http://msdn.microsoft.com/en-us/library/aa970267.aspx'>Windows Presentation Foundation ClearType Registry Settings</link></extension><space/>This opinion is shared by font designer Thomas Phinney (Vice President of<space/><link><target>FontLab</target></link><space/>and formerly with<space/><link><target>Adobe Systems</target></link><extension extension_name='ref'>http://www.adobe.com/products/type/font-designers/thomas-phinney.html</extension>): &quot;There is also considerable variation between individuals in their sensitivity to color fringing. Some people just notice it and are bothered by it a lot more than others.&quot;<extension extension_name='ref'><template><target>cite web</target><arg name="url">http://www.typophile.com/node/33005#comment-197028<space/></arg><arg name="title">ClearType, in XP and Vista<space/></arg><arg name="publisher">Typophile<space/></arg><arg name="date"><space/></arg><arg name="accessdate">2010-01-22</arg></template></extension><space/>Software developer Melissa Elliot has written about finding ClearType rendering uncomfortable to read, saying that &quot;instead of seeing black text, I see blue text, and rendered over it but offset by a pixel or two, I see orange text, and someone reached into a bag of purple pixel glitter and just tossed it on...Im not the only person in the world with this problem, and yet, every time it comes up, people are quick to assure me it works for them as if thats supposed to make me feel better.&quot;<extension extension_name='ref' name="ClearType Elliott"><template><target>cite web</target><arg name="last1">Elliott</arg><arg name="first1">Melissa</arg><arg name="title">ClearType</arg><arg name="url">http://abad1dea.tumblr.com/post/98281499300/to-not-be-taken-seriously</arg><arg name="accessdate">15 August 2015</arg></template></extension></paragraph><paragraph>Hinting expert<space/><link><target>Beat Stamm</target></link>, who worked on ClearType at Microsoft,<extension extension_name='ref'><template><target>cite web</target><arg name="url">http://www.myfonts.com/person/stamm/beat/<space/></arg><arg name="title">Beat Stamm<space/></arg><arg name="publisher">MyFonts<space/></arg><arg name="date">1999-02-22<space/></arg><arg name="accessdate">2010-01-22</arg></template></extension><space/>agrees that ClearType may look blurry at<space/><link><target>Dots per inch#Computer monitor DPI standards</target><part>96 dpi</part></link>, which was a typical<extension extension_name='ref'><template><target>cite web</target><arg name="url">http://dictionary.zdnet.com/definition/Dpi.html<space/></arg><arg name="title">Dpi: Definition and additional resources from ZDNet<space/></arg><arg name="publisher">Dictionary.zdnet.com<space/></arg><arg name="date"><space/></arg><arg name="accessdate">2010-01-22</arg></template></extension><space/>resolution for<space/><link><target>LCD</target><trail>s</trail></link><space/>in 2008, but adds that higher resolution displays improve on this aspect: &quot;WPF [Windows Presentation Foundation] uses method C [ClearType with fractional pixel positioning<extension extension_name='ref'><template><target>cite web</target><arg name="url">http://www.beatstamm.com/typography/RTRCh3.htm#Sec32<space/></arg><arg name="title">Fractional Advance Widths<space/></arg><arg name="publisher">The Raster Tragedy at Low-Resolution Revisited<space/></arg><arg name="date">2011-03-14<space/></arg><arg name="accessdate">2011-03-17</arg></template></extension>], but few display devices have a sufficiently high resolution to make the potential blur a moot point for everybody.&amp;nbsp;.&amp;nbsp;.&amp;nbsp;. Some people are ok with the blur in Method C, some arent. Anecdotal evidence suggests that some people are fine with Method C when reading continuous text at 96 dpi (e.g. Times Reader, etc.) but not in UI scenarios. Many people are fine with the colors of ClearType, even at 96 dpi, but a few arent To my eyes and at 96 dpi, Method C doesnt read as well as Method A. It reads blurrily to me. Conversely, at 144 dpi, I dont see a problem with Method C. It looks and reads just fine to me.&quot;<extension extension_name='ref'><template><target>cite web</target><arg name="url">http://www.typophile.com/node/33005#comment-197660<space/></arg><arg name="title">ClearType, in XP and Vista<space/></arg><arg name="publisher">Typophile<space/></arg><arg name="date"><space/></arg><arg name="accessdate">2010-01-22</arg></template></extension><space/>One illustration of the potential problem is the following image:</paragraph><paragraph><link><target>Image:FontSmoothingExample.gif</target><part>center</part><part>Text without rendering (upper portion) and text with ClearType rendering (lower portion)</part></link></paragraph><paragraph>In the above block of text, the same portion of text is shown in the upper half without and in the lower half with ClearType rendering (as opposed to Standard and ClearType in the previous image). This and the previous example with the orange circle demonstrate the blurring introduced. For many observers this blurring is beneficial; others do not find ClearType beneficial.</paragraph><heading level='3'>Empirical studies</heading><paragraph>A 2001 study conducted by researchers from<space/><link><target>Clemson University</target></link><space/>and<space/><link><target>The University of Pennsylvania</target></link><space/>on &quot;18 users who spent 60 minutes reading fiction from each of three different displays&quot; found that &quot;When reading from an LCD display, users preferred text rendered with ClearType. ClearType also yielded higher readability judgments and lower ratings of mental fatigue.&quot;<extension extension_name='ref'><template><target>cite journal</target><arg name="doi"><space/>10.1889/1.1831776<space/></arg><arg name="title">47.4: Empirical Evaluation of User Responses to Reading Text Rendered Using ClearType™ Technologies<space/></arg><arg name="journal">SID Symposium Digest of Technical Papers<space/></arg><arg name="date">2001<space/></arg><arg name="volume">32<space/></arg><arg name="issue">1<space/></arg><arg name="pages">1205<space/></arg><arg name="first">Richard A.<space/></arg><arg name="last">Tyrrell</arg></template></extension><space/>A 2002 study on 24 users conducted by the same researchers from Clemson University also found that &quot;Participants were significantly more accurate at identifying words with ClearType than without ClearType.&quot;<extension extension_name='ref'><template><target>cite journal</target><arg name="doi"><space/>10.1177/154193120204601733<space/></arg><arg name="title">Legibility of Words Rendered Using CleartypeTM<space/></arg><arg name="journal">Proceedings of the Human Factors and Ergonomics Society Annual Meeting<space/></arg><arg name="date">2002<space/></arg><arg name="volume">46<space/></arg><arg name="issue">17<space/></arg><arg name="pages">1684–1687<space/></arg><arg name="first">T. R.<space/></arg><arg name="last">Aten</arg></template></extension></paragraph><paragraph>According to a 2006 study at the<space/><link><target>University of Texas at Austin</target></link><space/>by Dillon et al., ClearType &quot;may not be universally beneficial&quot;. The study notes that maximum benefit may be seen when the information worker is spending large proportions of their time reading text (which is not necessarily the case for the majority of computer users today). Additionally, over one third of the study participants experienced some disadvantage when using ClearType. Whether ClearType, or other rendering, should be used is very subjective and it must be the choice of the individual, with the report recommending &quot;to allow users to disable [ClearType] if they find it produces effects other than improved performance&quot;.<extension extension_name='ref'>Dillon, A., Kleinman, L., Choi, G. O., &amp; Bias, R. (2006).<space/><link type='external' href='http://www.ischool.utexas.edu/~ct/chi_p618.pdf'>Visual search and reading tasks using ClearType and regular displays: two experiments</link>. CHI 06: Proceedings of the SIGCHI conference on Human Factors in computing systems, 503-511.</extension></paragraph><paragraph>Another 2007 empirical study found that &quot;while ClearType rendering does not improve text legibility, reading speed or comfort compared to perceptually-tuned grayscale rendering, subjects prefer text with moderate ClearType rendering to text with grayscale or higher-level ClearType contrast.&quot;<extension extension_name='ref'><template><target>cite journal</target><arg name="doi"><space/>10.1016/j.displa.2007.09.016<space/></arg><arg name="title">ClearType sub-pixel text rendering: Preference, legibility and reading performance<space/></arg><arg name="journal">Displays<space/></arg><arg name="date">2008<space/></arg><arg name="volume">29<space/></arg><arg name="issue">2<space/></arg><arg name="pages">138–151<space/></arg><arg name="first">Jim<space/></arg><arg name="last">Sheedy</arg></template><space/>http://www.pacificu.edu/vpi/publications/documents/ClearTypesub-pixeltextrenderingPreferencelegibilityandreadingperformance.pdf</extension></paragraph><paragraph>A 2007 survey of the literature by Microsoft researcher Kevin Larson presented a different picture: &quot;Peer-reviewed studies have consistently found that using ClearType boosts reading performance compared with other text-rendering systems. In a 2004 study, for instance, Lee Gugerty, a psychology professor at Clemson University, in South Carolina, measured a 17 percent improvement in word recognition accuracy with ClearType. Gugertys group also showed, in a sentence comprehension study, that ClearType boosted reading speed by 5 percent and comprehension by 2 percent. Those results were unusual because, typically, any gain in reading speed decreases comprehension. Similarly, in a study published last year, psychologist Andrew Dillon at the University of Texas at Austin found that when subjects were asked to scan a spreadsheet and pick out certain information, they did those tasks 7 percent faster with ClearType.&quot;<extension extension_name='ref'>Kevin Larson (May 2007) &quot;<link type='external' href='http://spectrum.ieee.org/computing/software/the-technology-of-text'>The Technology of Text</link>&quot;,<space/><italics><link><target>IEEE Spectrum</target></link></italics></extension></paragraph><heading level='2'>Display requirements</heading><paragraph>ClearType and allied technologies require display hardware with fixed pixels and subpixels. More precisely, the positions of the pixels and subpixels on the screen must be exactly known to the computer to which it is connected. This is the case for flat-panel displays, on which the positions of the pixels are permanently fixed by the design of the screen itself. Almost all flat panels have a perfectly rectangular array of square pixels, each of which contains three rectangular subpixels in the three primary colors, with the normal ordering being red, green, and blue, arranged in vertical bands. ClearType assumes this arrangement of pixels when rendering text.</paragraph><paragraph>ClearType does not work properly with flat-panel displays that are operated at resolutions other than their native resolutions, since only the native resolution corresponds exactly to the actual positions of pixels on the screen of the display.</paragraph><paragraph>If a display does not have the type of fixed pixels that ClearType expects, text rendered with ClearType enabled actually looks worse than type rendered without it. Some flat panels have unusual pixel arrangements, with the colors in a different order, or with the subpixels positioned differently (in three horizontal bands, or in other ways). ClearType needs to be manually tuned for use with such displays (see below).</paragraph><paragraph>ClearType will not work as intended on displays that have no fixed pixel positions, such as<space/><link><target>cathode ray tube</target><part>CRT</part></link><space/>displays, however it will still have some antialiasing effect and may be preferable to some users as compared to non-anti-aliased type.<extension extension_name='ref' name="faq"><template><target>cite web</target><arg name="title">ClearType FAQ</arg><arg name="url">http://www.microsoft.com/typography/ClearTypeFAQ.mspx</arg><arg name="website">Microsoft</arg><arg name="accessdate">19 July 2009</arg><arg name="archiveurl">http://web.archive.org/web/20150624222557/http://www.microsoft.com/typography/ClearTypeFAQ.mspx</arg><arg name="archivedate">24 June 2015</arg><arg name="date">19 July 2009</arg></template></extension></paragraph><heading level='2'>Sensitivity to display orientation</heading><paragraph>Because ClearType utilizes the physical layout of the red, green and blue<space/><link><target>pigments</target></link><space/>of the LCD screen, it is sensitive to the orientation of the display.</paragraph><paragraph>ClearType in<space/><link><target>Windows XP</target></link><space/>currently supports the<space/><link><target>RGB</target></link><space/>and<space/><link><target>BGR (subpixels)</target><part>BGR</part></link><space/>sub pixel structures. Rotated displays, in which the subpixels are arranged vertically rather than horizontally, are<space/><italics>not</italics><space/>currently supported. Using ClearType on these display configurations will actually reduce the display quality. The best option for users of Windows XP having rotated LCD displays (<link><target>Microsoft Tablet PC</target><part>Tablet PCs</part></link><space/>or swivel-stand LCD displays) is using regular anti-aliasing, or switching off font-smoothing altogether.</paragraph><paragraph>The software developer documentation for<space/><link><target>Windows CE</target></link><space/>states that ClearType for rotated screens is supported on that platform.<extension extension_name='ref'><link type='external' href='http://msdn2.microsoft.com/en-us/library/ms901093.aspx'>Working with ClearType Fonts</link></extension></paragraph><paragraph>Vertical sub pixel structures are not supported in Windows XP.<extension extension_name='ref'><link type='external' href='http://www.brandonfurtwangler.com/?p=54'>Tablets and cleartype, and a requested feature of Avalon at Brandon Furtwangler blog</link></extension></paragraph><heading level='2'>Implementations</heading><list type='bullet'><listitem><link><target>Microsoft Reader</target></link></listitem><listitem><link><target>Windows XP</target></link><space/>(off by default)</listitem><listitem><link><target>Windows Vista</target></link><space/>(on by default)</listitem><listitem><link><target>Windows 7</target></link><space/>(on by default)</listitem><listitem><link><target>Microsoft Office 2007</target></link><space/>and later (on by default)</listitem><listitem><link><target>Internet Explorer 7</target></link><space/>and later (on by default)</listitem><listitem><link><target>Windows Live Messenger</target></link><space/>(on by default)</listitem><listitem><link><target>Windows 8</target></link>: Only used in Windows 8 Desktop and all desktop apps.<extension extension_name='ref'><link type='external' href='http://www.istartedsomething.com/20120303/cleartype-takes-a-back-seat-for-windows-8-metro/'>ClearType takes a back seat for Windows 8 Metro</link></extension></listitem></list><paragraph>ClearType is also an integrated component of the<space/><link><target>Windows Presentation Foundation</target></link><space/>text-rendering engine.</paragraph><heading level='3'>ClearType in GDI</heading><paragraph>ClearType can be globally enabled or disabled for<space/><link><target>Graphics Device Interface</target><part>GDI</part></link><space/>applications. A control panel applet is available to let the users tune the GDI ClearType settings. The GDI implementation of ClearType does not support sub-pixel positioning.<extension extension_name='ref'><link type='external' href='http://msdn.microsoft.com/en-us/library/ms749295.aspx'>Windows Presentation Foundation ClearType Overview</link></extension></paragraph><heading level='3'>ClearType tuning</heading><paragraph>Some versions of<space/><link><target>Microsoft Windows</target></link>, as supplied, allow ClearType to be turned on or off, with no adjustment; other versions allow tuning of the ClearType parameters. A Microsoft ClearType tuner utility is available for free download for Windows versions lacking this facility.<extension extension_name='ref'><template><target>cite web</target><arg name="url"><space/>http://www.microsoft.com/typography/ClearTypePowerToy.mspx<space/></arg><arg name="title"><space/>Microsoft's ClearType Tuner PowerToy<space/></arg><arg name="accessdate"><space/>2007-09-27</arg></template></extension><space/>If ClearType is disabled in the operating system, applications with their own ClearType controls can still support it.<space/><link><target>Microsoft Reader</target></link><space/>(for<space/><link><target>e-book</target><trail>s</trail></link>) has its own ClearType tuner.</paragraph><heading level='3'>ClearType in WPF</heading><paragraph>All text in<space/><link><target>Windows Presentation Foundation</target></link><space/>is anti-aliased and rendered using ClearType. There are separate ClearType registry settings for GDI and WPF applications, but by default the WPF entries are absent, and the GDI values are used in their absence. WPF registry entries can be tuned using the instructions<extension extension_name='ref'><link type='external' href='http://blogs.msdn.com/text/archive/2006/10/18/tips-for-improving-your-wpf-text-rendering-experience.aspx'>Tips for improving your WPF text rendering experience</link></extension><space/>from the MSDN WPF Text Blog.</paragraph><paragraph>ClearType in WPF supports sub-pixel positioning, natural advance widths, Y-direction anti-aliasing and<space/><link><target>hardware acceleration</target></link>. WPF supports aggressive caching of pre-rendered ClearType text in<space/><link><target>video memory</target></link>.<extension extension_name='ref'><link type='external' href='http://msdn2.microsoft.com/en-us/library/ms749295.aspx'>MSDN Library : .NET Development : WPF : ClearType Overview</link></extension><space/>The extent to which this is supported is dependent on the<space/><link><target>video card</target></link>.<space/><link><target>DirectX</target></link><space/>10 cards will be able to cache the font glyphs in<space/><link><target>video memory</target></link>, then perform the composition (assembling of character glyphs in the correct order, with the correct spacing),<space/><link><target>alpha blending</target></link><space/>(application of anti-aliasing), and RGB blending (ClearType's sub-pixel color calculations), entirely in hardware. This means that only the original glyphs need to be stored in video memory once per font (Microsoft estimates that this would require 2 MB of video memory per font), and other operations such as the display of anti-aliased text on top of other graphics&amp;nbsp; including video&amp;nbsp; can also be done with no computation effort on the part of the CPU. DirectX 9 cards will only be able to cache the alpha-blended glyphs in memory, thus requiring the CPU to handle glyph composition and alpha-blending before passing this to the video card. Caching these partially rendered glyphs requires significantly more memory (Microsoft estimates 5 MB per process). Cards that don't support DirectX 9 have no hardware-accelerated text rendering capabilities.</paragraph><heading level='3'>ClearType in DirectWrite</heading><paragraph><template><target>expand section</target><arg>changes</arg><arg name="date">August 2014</arg></template>The font rendering engine in<space/><link><target>DirectWrite</target></link><space/>supports an improved version of ClearType, as demonstrated at<space/><link><target>Professional Developers Conference</target><part>PDC</part></link><space/>2008.<extension extension_name='ref' name="DirectWrite"><template><target>cite web</target><arg name="url">http://channel9.msdn.com/pdc2008/PC18</arg><arg name="title">PC18: Introducing Direct2D and DirectWrite</arg><arg name="author">Kam VedBrat, Leonardo Blanco</arg><arg name="publisher">Microsoft</arg><arg name="date">2008-10-28</arg></template></extension><space/>The improved version is sometimes called<space/><italics>Natural ClearType</italics>.<extension extension_name='ref'>http://blogs.msdn.com/b/e7/archive/2009/02/13/advances-in-typography-and-text-rendering-in-windows-7.aspx</extension><space/>The improvements have been confirmed by independent sources, such as<space/><link><target>Firefox</target></link><space/>developers;<extension extension_name='ref'>http://www.basschouten.com/blog1.php/font-rendering-gdi-versus-directwrite</extension><space/>they were particularly noticeable for OpenType fonts in<space/><link><target>Compact Font Format</target></link><space/>(CFF).<extension extension_name='ref'>https://blog.mozilla.org/nattokirai/2009/10/22/better-postscript-cff-font-rendering-with-directwrite/</extension><extension extension_name='ref'>http://blog.typekit.com/2010/11/12/microsoft-directwrite-is-coming/</extension></paragraph><paragraph>Despite these improvements,<space/><link><target>Word 2013</target></link><space/>stopped using ClearType. The reasons invoked are, in the words of Murray Sargent: &quot;There is a problem with ClearType: it depends critically on the color of the background pixels. This isnt a problem if you know a priori that those pixels are white, which is usually the case for text. But the general case involves calculating what the colors should be for an arbitrary background and that takes time. Meanwhile, Word 2013 enjoys cool animations and smooth zooming. Nothing jumps any more. Even the caret (the blinking vertical line at the text insertion point) glides from one position to the next as you type. Jerking movement just isnt considered cool any more. Well animations and zooms have to be faster than human response times in order to appear smooth. And that rules out ClearType in animated scenarios at least with present generation hardware. And in future scenarios, screens will have sufficiently high resolution that gray-scale anti-aliasing should suffice.&quot;<extension extension_name='ref'>http://blogs.msdn.com/b/murrays/archive/2014/05/31/crisp-text-display.aspx</extension></paragraph><heading level='2'>Patents</heading><paragraph>ClearType is a<space/><link><target>registered trademark</target></link><space/>and Microsoft claims protection under the following U.S.<space/><link><target>patent</target><trail>s</trail></link>:<extension extension_name='ref' name="msip"><template><target>cite web</target><arg name="url">http://web.archive.org/web/20090113030909/http://www.microsoft.com/iplicensing/productDetail.aspx?productTitle</arg><arg name="title">Microsoft Intellectual Property and Licensing: ClearType</arg><arg name="accessdate">2008-12-02</arg></template></extension><extension extension_name='ref' name="cleartype_expl"><template><target>cite web</target><arg name="url">http://david.freetype.org/cleartype-patents.html</arg><arg name="date">2007-06-01</arg><arg name="accessdate">2009-04-09</arg><arg name="title">ClearType Patents, FreeType and the Unix Desktop: an explanation</arg><arg name="author">David Turner</arg></template></extension></paragraph><list type='bullet'><listitem>Subpixel rendering:<list type='bullet'><listitem><template><target>US patent</target><arg>6188385</arg></template><space/><italics>Method and apparatus for displaying images such as text</italics></listitem><listitem><template><target>US patent</target><arg>6219025</arg></template><space/><italics>Mapping image data samples to pixel sub-components on a striped display device</italics></listitem><listitem><template><target>US patent</target><arg>6239783</arg></template><space/><italics>Weighted mapping of image data samples to pixel sub-components on a display device</italics></listitem><listitem><template><target>US patent</target><arg>6307566</arg></template><space/><italics>Methods and apparatus for performing image rendering and rasterization operations</italics></listitem></list></listitem><listitem>Complex color filtering:<list type='bullet'><listitem><template><target>US patent</target><arg>6225973</arg></template><space/><italics>Mapping samples of foreground/background color image data to pixel sub-components</italics></listitem><listitem><template><target>US patent</target><arg>6243070</arg></template><space/><italics>Method and apparatus for detecting and reducing color artifacts in images</italics></listitem><listitem><template><target>US patent</target><arg>6393145</arg></template><space/><italics>Methods apparatus and data structures for enhancing the resolution of images to be rendered on patterned display devices</italics></listitem></list></listitem><listitem>Subpixel font hinting and layout:<list type='bullet'><listitem><template><target>US patent</target><arg>6421054</arg></template><space/><italics>Methods and apparatus for performing grid fitting and hinting operations</italics></listitem><listitem><template><target>US patent</target><arg>6282327</arg></template><space/><italics>Maintaining advance widths of existing characters that have been resolution enhanced</italics></listitem></list></listitem><listitem>ClearType tuning:<list type='bullet'><listitem><template><target>US patent</target><arg>6624828</arg></template><space/><italics>Method and apparatus for improving the quality of displayed images through the use of user reference information</italics></listitem></list></listitem></list><heading level='2'>Other uses of the ClearType brand</heading><paragraph>The ClearType name was also used to refer to the screens of<space/><link><target>Microsoft Surface</target></link><space/>tablets. ClearType HD Display includes a 1366x768 screen, while ClearType Full HD Display includes a 1920x1080 screen.<extension extension_name='ref'><link type='external' href='http://www.anandtech.com/show/6377/inside-microsofts-surface-rt-tablet'>Inside Microsoft's Surface RT Tablet</link></extension><extension extension_name='ref'><link type='external' href='http://www.anandtech.com/show/6015/microsofts-major-announcement-in-la-were-there'>Microsoft's Major Announcement in LA - We're There!</link></extension></paragraph><heading level='2'>See also</heading><list type='bullet'><listitem><link><target>Font rasterization</target></link></listitem><listitem><link><target>FreeType</target></link></listitem><listitem><link><target>OpenType</target></link></listitem><listitem><link><target>Apple Advanced Typography</target></link></listitem><listitem><link><target>CoolType</target></link><space/>a similar technology by Adobe</listitem><listitem><link><target>Quartz (graphics layer)</target></link></listitem><listitem><link><target>Retina Display</target></link></listitem></list><heading level='2'>References</heading><paragraph><template><target>Reflist</target><arg>30em</arg></template></paragraph><heading level='2'>External links</heading><list type='bullet'><listitem><link type='external' href='http://www.microsoft.com/typography/WhatIsClearType.mspx'>Explanation of ClearType</link><space/>at Microsoft Typography</listitem><listitem><link type='external' href='http://research.microsoft.com/en-us/projects/cleartype/'>Technical Overview of ClearType Filtering</link><space/>from Microsoft Research</listitem><listitem><link type='external' href='http://www.rastertragedy.com/'>The Raster Tragedy at Low-Resolution Revisited</link><space/>- Beat Stamm's online book about rasterization, with an emphasis on ClearType</listitem><listitem><link type='external' href='http://web.archive.org/web/20091026135732/http://www.geocities.com/cuncie/ClearType.html'>Ron Feigenblatt's remarks on Microsoft ClearType</link></listitem><listitem>John Markoff, &quot;<link type='external' href='http://www.nytimes.com/library/tech/98/12/biztech/articles/07microsoft-flat.html'>Microsoft's Cleartype Sets Off Debate on Originality</link>&quot;,<space/><italics>New York Times</italics>, December 7, 1998</listitem><listitem>Betrisey, C., Blinn, J. F., Dresevic, B., Hill, B., Hitchcock, G., Keely, B., Mitchell, D. P., Platt, J. C., Whitted, T.,<space/><link type='external' href='http://research.microsoft.com/pubs/68631/sid2000.pdf'>Displaced Filtering for Patterned Displays</link>, Proc. Society for Information Display Symposium, pp.&amp;nbsp;296299, (2000).<space/><template><target>doi</target><arg>10.1889/1.1832941</arg></template></listitem><listitem><template><target>cite journal</target><arg name="doi"><space/>10.1889/1.3256881<space/></arg><arg name="title">47.2: Visual Preference for ClearType Technology<space/></arg><arg name="journal">SID Symposium Digest of Technical Papers<space/></arg><arg name="date">2009<space/></arg><arg name="volume">40<space/></arg><arg name="issue">1<space/></arg><arg name="pages">702<space/></arg><arg name="first">Joyce<space/></arg><arg name="last">Farrell</arg></template><space/>http://scien.stanford.edu/jfsite/Papers/ImageRendering/Displays/Farrell_et_al_SID2009.pdf</listitem><listitem>Xu, J., Farrell, J., Matskewich, T., and Wandell, B.<space/><link type='external' href='http://scien.stanford.edu/jfsite/Papers/ImageRendering/Displays/Xu_Farrell_Matskewich_Wandell_final.pdf'>Prediction of preferred Cleartype filters using the S-CIELAB metric</link>, IEEE International Conference on Image Processing, October 2008.<template><target>doi</target><arg>10.1109/ICIP.2008.4711766</arg></template></listitem><listitem><link><target>Steven Sinofsky</target></link><space/>(23 Jun 2009)<space/><link type='external' href='http://blogs.msdn.com/b/e7/archive/2009/06/23/engineering-changes-to-cleartype-in-windows-7.aspx'>Engineering Changes to ClearType in Windows 7</link></listitem></list><paragraph><template><target>Windows Components</target></template></paragraph><paragraph><template><target>DEFAULTSORT:Cleartype</target></template><link><target>Category:Windows components</target></link><link><target>Category:Digital typography</target></link><link><target>Category:Computer graphics algorithms</target></link></paragraph></article>