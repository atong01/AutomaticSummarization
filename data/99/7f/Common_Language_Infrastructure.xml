<article title='Common_Language_Infrastructure'><paragraph><template><target>Distinguish</target><arg>Command-line interface</arg></template>The<space/><bold>Common Language Infrastructure</bold><space/>(<bold>CLI</bold>) is an open<space/><link><target>specification</target></link><space/>developed by<space/><link><target>Microsoft</target></link><space/>and standardized by<space/><link><target>International Organization for Standardization</target><part>ISO</part></link><extension extension_name='ref' name="iso_iec_23271_2012"><link type='external' href='http://www.iso.org/iso/home/store/catalogue_ics/catalogue_detail_ics.htm?csnumber=58046'>ISO/IEC 23271:2012 - Information technology -- Common Language Infrastructure (CLI)</link></extension><space/>and<space/><link><target>Ecma International</target><part>ECMA</part></link><extension extension_name='ref' name="ecma_355_2012"><link type='external' href='http://www.ecma-international.org/publications/standards/Ecma-335.htm'>Standard ECMA-335 - 6th edition (June 2012)</link></extension><space/>that describes executable code and a runtime environment that allow multiple high-level languages to be used on different computer platforms without being rewritten for specific architectures. The<space/><link><target>.NET Framework</target></link><space/>and the<space/><link><target>free and open source software</target><part>free and open source</part></link><space/><link><target>Mono (software)</target><part>Mono</part></link><space/>and<space/><link><target>Portable.NET</target></link><space/>are implementations of the CLI.</paragraph><heading level='2'>Overview</heading><paragraph><link><target>File:Overview of the Common Language Infrastructure.svg</target><part>thumb</part><part>280px</part><part>Visual overview of the Common Language Infrastructure (CLI)</part></link>Among other things, the CLI specification describes the following four aspects:</paragraph><list type='def'><listitem><defkey>The<space/><link><target>Common Type System</target></link><space/>(CTS)</defkey></listitem></list><list type='ident'><listitem>A set of<space/><link><target>data type</target><trail>s</trail></link><space/>and operations that are shared by all CTS-compliant<space/><link><target>programming language</target><trail>s</trail></link>.</listitem></list><list type='def'><listitem><defkey>The<space/><link><target>Metadata (CLI)</target><part>Metadata</part></link></defkey></listitem></list><list type='ident'><listitem>Information about program structure is<space/><link><target>Language-independent specification</target><part>language-agnostic</part></link>, so that it can be referenced between languages and tools, making it easy to work with code written in a language one's not using.</listitem></list><list type='def'><listitem><defkey>The Common Language Specification (CLS)</defkey></listitem></list><list type='ident'><listitem>A set of base rules to which any language targeting the CLI should conform in order to interoperate with other CLS-compliant languages. The CLS rules define a subset of the Common Type System.</listitem></list><list type='def'><listitem><defkey>The<space/><link><target>Virtual Execution System</target></link><space/>(VES)</defkey></listitem></list><list type='ident'><listitem>The VES loads and executes CLI-compatible programs, using the metadata to combine separately generated pieces of code at runtime.</listitem></list><paragraph>All compatible languages compile to<space/><link><target>Common Intermediate Language</target></link><space/>(CIL), which is an<space/><link><target>intermediate language</target></link><space/>that is abstracted from the platform hardware. When the code is executed, the platform-specific VES will compile the CIL to the<space/><link><target>machine language</target></link><space/>according to the specific hardware and operating system.</paragraph><heading level='2'>Standardization and licensing</heading><paragraph>In August 2000,<space/><link><target>Microsoft</target></link>,<space/><link><target>Hewlett-Packard</target></link>,<space/><link><target>Intel</target></link>, and others worked to standardize CLI. By December 2001, it was ratified by the<space/><link><target>Ecma International</target><part>ECMA</part></link>, with<space/><link><target>International Organization for Standardization</target><part>ISO</part></link><space/>standardization following in April 2003.</paragraph><paragraph>Microsoft and its partners hold patents for CLI. ECMA and ISO require that all patents essential to implementation be made available under &quot;<link><target>Reasonable and Non Discriminatory Licensing</target><part>reasonable and non-discriminatory (RAND) terms</part></link>.&quot; It is common for RAND licensing to require some royalty payment, which could be a cause for concern with Mono. As of January 2013, neither Microsoft nor its partners have identified any patents essential to CLI implementations subject to RAND terms.</paragraph><paragraph>As of July 2009,<extension extension_name='ref'><template><target>Cite web</target><arg name="url">http://port25.technet.com/archive/2009/07/06/the-ecma-c-and-cli-standards.aspx
</arg><arg name="title">The ECMA C# and CLI Standards - Port 25: The Open Source Community at Microsoft
</arg><arg name="date">2009-07-06
</arg></template></extension><space/><link><target>Microsoft</target></link><space/>added<space/><link><target>C Sharp (programming language)</target><part>C#</part></link><space/>and CLI to the list of specifications that the<space/><link><target>Microsoft Community Promise</target></link><space/>applies to,<extension extension_name='ref' name="mcp_covered_specifications"><link type='external' href='http://www.microsoft.com/openspecifications/en/us/programs/community-promise/covered-specifications/default.aspx'>Covered Specifications | Microsoft Open Specifications</link></extension><space/>so anyone can safely implement specified editions of the standards without fearing a patent lawsuit from Microsoft. To implement the CLI standard requires conformance to one of the supported and defined profiles of the standard, the minimum of which is the kernel profile. The kernel profile is actually a very small set of types to support in comparison to the well known core library of default .NET installations. However, the conformance clause of the CLI allows for extending the supported profile by adding new methods and types to classes, as well as deriving from new namespaces. But it does not allow for adding new members to interfaces. This means that the features of the CLI can be used and extended, as long as the conforming profile implementation does not change the behavior of a program intended to run on that profile, while allowing for unspecified behavior from programs written specifically for that implementation.</paragraph><paragraph>In 2012, ECMA and ISO published the new edition of the CLI standard,<extension extension_name='ref' name="iso_iec_23271_2012"><link type='external' href='http://www.iso.org/iso/home/store/catalogue_ics/catalogue_detail_ics.htm?csnumber=58046'>ISO/IEC 23271:2012 - Information technology -- Common Language Infrastructure (CLI)</link></extension><extension extension_name='ref' name="ecma_355_2012"><link type='external' href='http://www.ecma-international.org/publications/standards/Ecma-335.htm'>Standard ECMA-335 - 6th edition (June 2012)</link></extension><space/>which is not covered by the Community Promise.<extension extension_name='ref' name="mcp_covered_specifications"></extension></paragraph><heading level='2'>Implementations</heading><list type='bullet'><listitem><link><target>.NET Framework</target></link><space/>is Microsoft's original commercial implementation of the CLI. Its<space/><link><target>Virtual Execution System</target></link><space/>is the<space/><link><target>Common Language Runtime</target></link><space/>and its implementation of the<space/><link><target>Standard Libraries (CLI)</target><part>Standard Libraries</part></link><space/>is the<space/><link><target>Framework Class Library</target></link>.</listitem><listitem><link><target>.NET Compact Framework</target></link><space/>is Microsoft's commercial implementation of the CLI for portable devices and<space/><link><target>Xbox 360</target></link>.</listitem><listitem><link><target>.NET Micro Framework</target></link><space/>is an open source implementation of the CLI for resource-constrained devices.</listitem><listitem><link><target>Shared Source Common Language Infrastructure</target></link><space/>is a reference implementation of the CLI available from Microsoft, under the<space/><link><target>Shared Source</target></link><space/>licensing program.</listitem><listitem><link><target>Mono (software)</target><part>Mono development platform</part></link><space/>is an<space/><link><target>open source</target></link><space/>implementation of CLI and accompanying technologies, sponsored by<space/><link><target>Xamarin</target></link>.</listitem><listitem><link><target>Portable.NET</target></link>, part of the<space/><link><target>dotGNU</target></link><space/>project, is a<space/><link><target>free software</target></link><space/>implementation of ECMA-335 by<space/><link><target>Free Software Foundation</target></link>.</listitem></list><heading level='2'>See also</heading><list type='bullet'><listitem><link><target>Standard Libraries (CLI)</target></link></listitem></list><heading level='2'>Notes</heading><paragraph><template><target>Reflist</target><arg>2</arg></template></paragraph><heading level='2'>References</heading><list type='bullet'><listitem><template><target>Cite web</target><arg name="title"><space/>Standard ECMA-335, Common Language Infrastructure (CLI)
</arg><arg name="work"><space/>ECMA International
</arg><arg name="url"><space/>http://www.ecma-international.org/publications/standards/Ecma-335.htm
</arg><arg name="accessdate"><space/>August 31, 2005
</arg></template></listitem><listitem><template><target>Cite web</target><arg name="title"><space/>ISO/IEC 23271, Common Language Infrastructure
</arg><arg name="work"><space/>ISO
</arg><arg name="url"><space/>http://www.iso.org/iso/en/CatalogueDetailPage.CatalogueDetail?CSNUMBER</arg><arg name="accessdate"><space/>September 27, 2006
</arg></template></listitem><listitem><template><target>Cite web</target><arg name="title"><space/>ECMA C# and Common Language Infrastructure Standards
</arg><arg name="work"><space/>Microsoft Corporation
</arg><arg name="url"><space/>http://msdn.microsoft.com/en-us/netframework/aa569283.aspx
</arg><arg name="accessdate"><space/>October 13, 2009
</arg></template></listitem></list><paragraph><template><target>Common Language Infrastructure</target></template><template><target>Ecma International Standards</target></template><template><target>ISO standards</target></template></paragraph><paragraph><link><target>Category:Common Language Infrastructure</target></link><link><target>Category:ISO standards</target></link><link><target>Category:IEC standards</target></link><link><target>Category:Ecma standards</target></link></paragraph></article>