<article title='Context-free_language'><paragraph>In<space/><link><target>formal language theory</target></link>, a<space/><bold>context-free language</bold><space/>(<bold>CFL</bold>) is a<space/><link><target>formal language</target><part>language</part></link><space/>generated by some<space/><link><target>context-free grammar</target></link><space/>(CFG). Different CF grammars can generate the same CF language. It is important to distinguish properties of the language (intrinsic properties) from properties of a particular grammar (extrinsic properties).</paragraph><paragraph>The set of all context-free languages is identical to the set of languages accepted by<space/><link><target>pushdown automata</target></link>, which makes these languages amenable to parsing. Indeed, given a CFG, there is a direct way to produce a pushdown automaton for the grammar (and corresponding language), though going the other way (producing a grammar given an automaton) is not as direct.</paragraph><paragraph>Context-free languages have many applications in<space/><link><target>programming languages</target></link>; for example, the<space/><link><target>Dyck language</target><part>language of all properly matched parentheses</part></link><space/>is generated by the grammar<space/><extension extension_name='math'>S\to SS ~|~ (S) ~|~ \varepsilon</extension>. Also, most arithmetic expressions are generated by context-free grammars.</paragraph><heading level='2'>Examples</heading><paragraph>An archetypal context-free language is<space/><extension extension_name='math'>L = \{a^nb^n:n\geq1\}</extension>, the language of all non-empty even-length strings, the entire first halves of which are<space/><extension extension_name='math'>a</extension>'s, and the entire second halves of which are<space/><extension extension_name='math'>b</extension>'s.<space/><extension extension_name='math'>L</extension><space/>is generated by the grammar<space/><extension extension_name='math'>S\to aSb ~|~ ab</extension>.This language is not<space/><link><target>regular language</target><part>regular</part></link>.It is accepted by the<space/><link><target>pushdown automaton#Formal definition</target><part>pushdown automaton</part></link><space/><extension extension_name='math'>M=(\{q_0,q_1,q_f\}, \{a,b\}, \{a,z\}, \delta, q_0, z, \{q_f\})</extension><space/>where<space/><extension extension_name='math'>\delta</extension><space/>is defined as follows:<extension extension_name='ref' group="note">meaning of<space/><extension extension_name='math'>\delta</extension>'s arguments and results:<space/><extension extension_name='math'>\delta(\mathrm{state}_1, \mathrm{read}, \mathrm{pop}) = (\mathrm{state}_2, \mathrm{push})</extension></extension></paragraph><paragraph><xhtml:center><extension extension_name='math'>\delta(q_0, a, z) = (q_0, az)</extension><xhtml:br></xhtml:br><extension extension_name='math'>\delta(q_0, a, a) = (q_0, aa)</extension><xhtml:br></xhtml:br><extension extension_name='math'>\delta(q_0, b, a) = (q_1, \varepsilon)</extension><xhtml:br></xhtml:br><extension extension_name='math'>\delta(q_1, b, a) = (q_1, \varepsilon)</extension></xhtml:center></paragraph><paragraph>Unambiguous CFLs are a proper subset of all CFLs: there are<space/><link><target>Inherently ambiguous language</target><part>inherently ambiguous</part></link><space/>CFLs. An example of an inherently ambiguous CFL is the union of<space/><extension extension_name='math'>\{a^n b^m c^m d^n | n, m &gt; 0\}</extension><space/>with<space/><extension extension_name='math'>\{a^n b^n c^m d^m | n, m &gt; 0\}</extension>. This set is context-free, since the union of two context-free languages is always context-free. But there is no way to unambiguously parse strings in the (non-context-free) subset<space/><extension extension_name='math'>\{a^n b^n c^n d^n | n &gt; 0\}</extension><space/>which is the intersection of these two languages.<template><target>sfn</target><arg>Hopcroft</arg><arg>Ullman</arg><arg>1979</arg><arg name="p">100</arg><arg name="loc">Theorem 4.7</arg></template></paragraph><heading level='2'>Languages that are not context-free</heading><paragraph>The set<space/><extension extension_name='math'>\{a^n b^n c^n d^n | n &gt; 0\}</extension><space/>is a<space/><link><target>context-sensitive language</target></link>, but there does not exist a context-free grammar generating this language.<template><target>sfn</target><arg>Hopcroft</arg><arg>Ullman</arg><arg>1979</arg></template><space/>So there exist<space/><link><target>context-sensitive language</target><trail>s</trail></link><space/>which are not context-free. To prove that a given language is not context-free, one may employ the<space/><link><target>pumping lemma for context-free languages</target></link><extension extension_name='ref' name="Bar-Hillel.Perles.Shamir.1961"></extension><space/>or a number of other methods, such as<space/><link><target>Ogden's lemma</target></link><space/>or<space/><link><target>Parikh's theorem</target></link>.<extension extension_name='ref'><link type='external' href='http://cs.stackexchange.com/questions/265/how-to-prove-that-a-language-is-not-context-free'>How to prove that a language is not context-free?</link></extension></paragraph><heading level='2'>Closure properties</heading><paragraph>Context-free languages are<space/><link><target>closure (mathematics)</target><part>closed</part></link><space/>under the following operations. That is, if<space/><italics>L</italics><space/>and<space/><italics>P</italics><space/>are context-free languages, the following languages are context-free as well:</paragraph><list type='bullet'><listitem>the<space/><link><target>union (set theory)</target><part>union</part></link><space/><extension extension_name='math'>L \cup P</extension><space/>of<space/><italics>L</italics><space/>and<space/><italics>P</italics></listitem><listitem>the reversal of<space/><italics>L</italics></listitem><listitem>the<space/><link><target>concatenation</target></link><space/><extension extension_name='math'>L \cdot P</extension><space/>of<space/><italics>L</italics><space/>and<space/><italics>P</italics></listitem><listitem>the<space/><link><target>Kleene star</target></link><space/><extension extension_name='math'>L^*</extension><space/>of<space/><italics>L</italics></listitem><listitem>the image<space/><extension extension_name='math'>\varphi(L)</extension><space/>of<space/><italics>L</italics><space/>under a<space/><link><target>String operations#String homomorphism</target><part>homomorphism</part></link><space/><extension extension_name='math'>\varphi</extension></listitem><listitem>the image<space/><extension extension_name='math'>\varphi^{-1}(L)</extension><space/>of<space/><italics>L</italics><space/>under an<space/><link><target>String operations#String homomorphism</target><part>inverse homomorphism</part></link><space/><extension extension_name='math'>\varphi^{-1}</extension></listitem><listitem>the<space/><link><target>cyclic shift</target></link><space/>of<space/><italics>L</italics><space/>(the language<space/><extension extension_name='math'>\{vu : uv \in L \}</extension>)</listitem></list><paragraph>Context-free languages are not closed under<space/><link><target>complement (complexity)</target><part>complement</part></link>,<space/><link><target>intersection (set theory)</target><part>intersection</part></link>, or<space/><link><target>Complement (set theory)#Relative complement</target><part>difference</part></link>. However, if<space/><italics>L</italics><space/>is a context-free language and<space/><italics>D</italics><space/>is a regular language then both their intersection<space/><extension extension_name='math'>L\cap D</extension><space/>and their difference<space/><extension extension_name='math'>L\setminus D</extension><space/>are context-free languages.</paragraph><heading level='3'>Nonclosure under intersection, complement, and difference</heading><paragraph>The context-free languages are not closed under intersection. This can be seen by taking the languages<space/><extension extension_name='math'>A = \{a^n b^n c^m \mid m, n \geq 0 \}</extension><space/>and<space/><extension extension_name='math'>B = \{a^m b^n c^n \mid m,n \geq 0\}</extension>, which are both context-free.<extension extension_name='ref' group="note">A context-free grammar for the language<space/><italics>A</italics><space/>is given by the following production rules, taking<space/><italics>S</italics><space/>as the start symbol:<space/><italics>S</italics><space/><italics>Sc</italics><space/>|<space/><italics>aTb</italics><space/>|<space/><italics></italics>;<space/><italics>T</italics><space/><italics>aTb</italics><space/>|<space/><italics></italics>. The grammar for<space/><italics>B</italics><space/>is analogous.</extension><space/>Their intersection is<space/><extension extension_name='math'>A \cap B = \{ a^n b^n c^n \mid n \geq 0\}</extension>, which can be shown to be non-context-free by the<space/><link><target>pumping lemma for context-free languages</target></link>.</paragraph><paragraph>Context-free languages are also not closed under complementation, as for any languages A and B:<space/><extension extension_name='math'>A \cap B = \overline{\overline{A} \cup \overline{B}}<space/></extension>.</paragraph><paragraph>Context-free language are also not closed under difference: L<xhtml:sup>C</xhtml:sup><space/>=<space/><xhtml:sup><list type='bullet'><listitem></listitem></list></xhtml:sup><space/>\ L</paragraph><heading level='2'>Decidability properties</heading><paragraph>The following problems are<space/><link><target>Undecidable problem</target><part>undecidable</part></link><space/>for arbitrary<space/><link><target>context-free grammar</target><trail>s</trail></link><space/>A and B:</paragraph><list type='bullet'><listitem>Equivalence: Given two context-free grammars<space/><italics>A</italics><space/>and<space/><italics>B</italics>, is<space/><extension extension_name='math'>L(A)=L(B)</extension>?</listitem><listitem>Intersection Emptiness: Given two context-free grammars<space/><italics>A</italics><space/>and<space/><italics>B</italics>, is<space/><extension extension_name='math'>L(A) \cap L(B) = \emptyset<space/></extension><space/>? However, the intersection of a context-free language and a<space/><italics>regular</italics><space/>language is context-free,<extension extension_name='ref'><template><target>harvtxt</target><arg>Salomaa</arg><arg>1973</arg></template>, p. 59, Theorem 6.7</extension><space/>and the variant of the problem where<space/><italics>B</italics><space/>is a regular grammar is decidable.</listitem><listitem>Containment: Given a context-free grammar<space/><italics>A</italics>, is<space/><extension extension_name='math'>L(A) \subseteq L(B)</extension><space/>? Again, the variant of the problem where<space/><italics>B</italics><space/>is a regular grammar is decidable.</listitem><listitem>Universality: Given a context-free grammar<space/><italics>A</italics>, is<space/><extension extension_name='math'>L(A)=\Sigma^*</extension><space/>?</listitem></list><paragraph>The following problems are<space/><italics>decidable</italics><space/>for arbitrary context-free languages:</paragraph><list type='bullet'><listitem>Emptiness: Given a context-free grammar<space/><italics>A</italics>, is<space/><extension extension_name='math'>L(A) = \emptyset</extension><space/>?</listitem><listitem>Finiteness: Given a context-free grammar<space/><italics>A</italics>, is<space/><extension extension_name='math'>L(A)</extension><space/>finite?</listitem><listitem>Membership: Given a context-free grammar<space/><italics>G</italics>, and a word<space/><extension extension_name='math'>w</extension>, does<space/><extension extension_name='math'>w \in L(G)</extension><space/>? Efficient polynomial-time algorithms for the membership problem are the<space/><link><target>CYK algorithm</target></link><space/>and<space/><link><target>Earley parser</target><part>Earley's Algorithm</part></link>.</listitem></list><paragraph>According to Hopcroft, Motwani, Ullman (2003),<extension extension_name='ref'><template><target>cite book</target><arg name="author">John E. Hopcroft, Rajeev Motwani, Jeffrey D. Ullman</arg><arg name="title">Introduction to Automata Theory, Languages, and Computation</arg><arg name="year">2003</arg><arg name="publisher">Addison Wesley</arg></template><space/>Here: Sect.7.6, p.304, and Sect.9.7, p.411</extension><space/>many of the fundamental closure and (un)decidability properties of context-free languages were shown in the 1961 paper of Bar-Hillel, Perles, and Shamir<extension extension_name='ref' name="Bar-Hillel.Perles.Shamir.1961"><template><target>cite journal</target><arg name="author">Yehoshua Bar-Hillel, Micha Asher Perles, Eli Shamir</arg><arg name="title">On Formal Properties of Simple Phrase-Structure Grammars</arg><arg name="journal">Zeitschrift für Phonetik, Sprachwissenschaft und Kommunikationsforschung</arg><arg name="year">1961</arg><arg name="volume">14</arg><arg name="number">2</arg><arg name="pages">143–172</arg></template></extension></paragraph><heading level='2'>Parsing</heading><paragraph>Determining an instance of the membership problem; i.e. given a string<space/><extension extension_name='math'>w</extension>, determine whether<space/><extension extension_name='math'>w \in L(G)</extension><space/>where<space/><extension extension_name='math'>L</extension><space/>is the language generated by a given grammar<space/><extension extension_name='math'>G</extension>; is also known as<space/><italics>recognition</italics>. Context-free recognition for<space/><link><target>Chomsky normal form</target></link><space/>grammars was shown by Leslie G. Valiant to be reducible to boolean<space/><link><target>matrix multiplication</target></link>, thus inheriting its complexity upper bound of<space/><link><target>Big O notation</target><part>''O''</part></link>(<italics>n</italics><xhtml:sup>2.3728639</xhtml:sup>).<extension extension_name='ref'><template><target>cite techreport</target><arg name="author">Leslie Valiant</arg><arg name="title">General context-free recognition in less than cubic time</arg><arg name="date">Jan 1974</arg><arg name="pages">11</arg><arg name="institution">Carnegie Mellon University</arg><arg name="url">http://repository.cmu.edu/cgi/viewcontent.cgi?article</arg></template></extension><extension extension_name='ref'><template><target>cite journal</target><arg name="author">Leslie G. Valiant</arg><arg name="title">General context-free recognition in less than cubic time</arg><arg name="journal">Journal of Computer and System Sciences</arg><arg name="year">1975</arg><arg name="volume">10</arg><arg name="number">2</arg><arg name="pages">308–315</arg><arg name="doi">10.1016/s0022-0000(75)80046-8</arg></template></extension><extension extension_name='ref' group="note">In Valiant's papers,<space/><italics>O</italics>(<italics>n</italics><xhtml:sup>2.81</xhtml:sup>) given, the then best known upper bound. See<space/><link><target>Matrix multiplication#Algorithms for efficient matrix multiplication</target></link><space/>and<space/><link><target>CoppersmithWinograd algorithm</target></link><space/>for bound improvements since then.</extension>Conversely, Lillian Lee has shown<space/><italics>O</italics>(<italics>n</italics><xhtml:sup>3-</xhtml:sup>) boolean matrix multiplication to be reducible to<space/><italics>O</italics>(<italics>n</italics><xhtml:sup>3-3</xhtml:sup>) CFG parsing, thus establishing some kind of lower bound for the latter.<extension extension_name='ref'><template><target>cite journal</target><arg name="author">Lillian Lee</arg><arg name="title">Fast Context-Free Grammar Parsing Requires Fast Boolean Matrix Multiplication</arg><arg name="journal">JACM</arg><arg name="year">2002</arg><arg name="volume">49</arg><arg name="number">1</arg><arg name="pages">1–15</arg><arg name="url">http://www.cs.cornell.edu/home/llee/papers/bmmcfl-jacm.pdf</arg><arg name="doi">10.1145/505241.505242</arg></template></extension></paragraph><paragraph>Practical uses of context-free languages require also to produce a derivation tree that exhibits the structure that the grammar associates with the given string. The process of producing this tree is called<space/><italics><link><target>parsing</target></link></italics>. Known parsers have a time complexity that is cubic in the size of the string that is parsed.</paragraph><paragraph>Formally, the set of all context-free languages is identical to the set of languages accepted by<space/><link><target>pushdown automata</target></link><space/>(PDA). Parser algorithms for context-free languages include the<space/><link><target>CYK algorithm</target></link><space/>and<space/><link><target>Earley parser</target><part>Earley's Algorithm</part></link>.</paragraph><paragraph>A special subclass of context-free languages are the<space/><link><target>deterministic context-free language</target><trail>s</trail></link><space/>which are defined as the set of languages accepted by a<space/><link><target>deterministic pushdown automaton</target></link><space/>and can be parsed by a<space/><link><target>LR parser</target><part>LR(k) parser</part></link>.<extension extension_name='ref'><template><target>Cite journal</target><arg name="last1"><space/>Knuth<space/></arg><arg name="first1"><space/>D. E.<space/></arg><arg name="authorlink"><space/>Donald Knuth<space/></arg><arg name="title"><space/>On the translation of languages from left to right<space/></arg><arg name="doi"><space/>10.1016/S0019-9958(65)90426-2<space/></arg><arg name="journal"><space/>Information and Control<space/></arg><arg name="volume"><space/>8<space/></arg><arg name="issue"><space/>6<space/></arg><arg name="pages"><space/>607–639<space/></arg><arg name="date">July 1965<space/></arg><arg name="url"><space/>http://www.cs.dartmouth.edu/~mckeeman/cs48/mxcom/doc/knuth65.pdf<space/></arg><arg name="accessdate">29 May 2011<space/></arg><arg name="ref"><space/>harv<space/></arg></template></extension></paragraph><paragraph>See also<space/><link><target>parsing expression grammar</target></link><space/>as an alternative approach to grammar and parser.</paragraph><heading level='2'>See also</heading><list type='bullet'><listitem><link><target>Deterministic context-free language</target></link></listitem><listitem><link><target>Parsing</target></link></listitem></list><heading level='2'>Notes</heading><paragraph><template><target>Reflist</target><arg name="group">note</arg></template></paragraph><heading level='2'>References</heading><paragraph><template><target>Reflist</target></template><template><target>Refbegin</target></template></paragraph><list type='bullet'><listitem><template><target>cite book</target><arg name="author"><space/>[[Seymour Ginsburg]]<space/></arg><arg name="title"><space/>The Mathematical Theory of Context-Free Languages<space/></arg><arg name="year"><space/>1966<space/></arg><arg name="publisher"><space/>McGraw-Hill, Inc.<space/></arg><arg name="location"><space/>New York, NY, USA</arg></template></listitem><listitem><template><target>cite book</target><arg name="last1"><space/>Hopcroft
<space/></arg><arg name="first1"><space/>John E.
<space/></arg><arg name="last2"><space/>Ullman
<space/></arg><arg name="first2"><space/>Jeffrey D.
<space/></arg><arg name="title"><space/>Introduction to Automata Theory, Languages, and Computation
<space/></arg><arg name="publisher"><space/>Addison-Wesley
<space/></arg><arg name="edition"><space/>1st
<space/></arg><arg name="year"><space/>1979
<space/></arg><arg name="ref"><space/>harv
</arg></template></listitem><listitem><template><target>cite book</target><arg name="author">Arto Salomaa</arg><arg name="title"><space/>Formal Languages</arg><arg name="publisher"><space/>ACM Monograph Series</arg><arg name="year"><space/>1973</arg></template></listitem><listitem><template><target>cite book</target><arg name="author"><space/>[[Michael Sipser]]<space/></arg><arg name="year"><space/>1997<space/></arg><arg name="title"><space/>Introduction to the Theory of Computation<space/></arg><arg name="publisher"><space/>PWS Publishing<space/></arg><arg name="isbn"><space/>0-534-94728-X</arg></template><space/>Chapter 2: Context-Free Languages, pp.&amp;nbsp;91122.</listitem><listitem>Jean-Michel Autebert, Jean Berstel, Luc Boasson,<space/><link type='external' href='http://www-igm.univ-mlv.fr/~berstel/Articles/1997CFLPDA.pdf'>Context-Free Languages and Push-Down Automata</link>, in: G. Rozenberg, A. Salomaa (eds.), Handbook of Formal Languages, Vol. 1, Springer-Verlag, 1997, 111-174.</listitem></list><paragraph><template><target>Refend</target></template></paragraph><paragraph><template><target>Formal languages and grammars</target></template></paragraph><paragraph><link><target>Category:Formal languages</target></link><link><target>Category:Languages</target></link><link><target>Category:Linguistics</target></link></paragraph></article>