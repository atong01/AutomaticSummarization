<article title='Boolean_algebra_%28structure%29'><paragraph><template><target>about</target><arg></arg><arg>an introduction to the subject</arg><arg>Boolean algebra</arg><arg>an alternative presentation</arg><arg>Boolean algebras canonically defined</arg></template><template><target>insufficient inline citations</target><arg name="date">July 2013</arg></template>In<space/><link><target>abstract algebra</target></link>, a<space/><bold>Boolean algebra</bold><space/>or<space/><bold>Boolean lattice</bold><space/>is a<space/><link><target>complemented lattice</target><part>complemented</part></link><space/><link><target>distributive lattice</target></link>. This type of<space/><link><target>algebraic structure</target></link><space/>captures essential properties of both<space/><link><target>Set (mathematics)</target><part>set</part></link><space/>operations and<space/><link><target>logic</target></link><space/>operations. A Boolean algebra can be seen as a generalization of a<space/><link><target>power set</target></link><space/>algebra or a<space/><link><target>field of sets</target></link>, or its elements can be viewed as generalized<space/><link><target>truth value</target><trail>s</trail></link>. It is also a special case of a<space/><link><target>De Morgan algebra</target></link><space/>and a<space/><link><target>Kleene algebra (with involution)</target></link>.</paragraph><paragraph>Every Boolean algebra<space/><link><target>Boolean algebra (structure)#Boolean rings</target><part>gives rise</part></link><space/>to a<space/><link><target>Boolean ring</target></link>, and vice versa, with ring multiplication corresponding to<space/><link><target>logical conjunction</target><part>conjunction</part></link><space/>or<space/><link><target>meet (mathematics)</target><part>meet</part></link><space/>, and ring addition to<space/><link><target>exclusive or</target><part>exclusive disjunction</part></link><space/>or<space/><link><target>symmetric difference</target></link><space/>(not<space/><link><target>logical disjunction</target><part>disjunction</part></link><space/>). However, the theory of Boolean rings has an inherent asymmetry between the two operators, while the axioms and theorems of Boolean algebra express the symmetry of the theory described by the<space/><link><target>Duality principle (Boolean algebra)</target><part>duality principle</part></link>.<extension extension_name='ref'>Givant and<space/><link><target>Paul Halmos</target></link>, 2009, p. 20</extension><link><target>Image:Hasse diagram of powerset of 3.svg</target><part>thumb</part><part>right</part><part>250px</part><part>Boolean lattice of subsets</part></link><magic_variable>TOC</magic_variable></paragraph><heading level='2'>History</heading><paragraph>The term &quot;Boolean algebra&quot; honors<space/><link><target>George Boole</target></link><space/>(18151864), a self-educated English mathematician. He introduced the<space/><link><target>algebraic system</target></link><space/>initially in a small pamphlet,<space/><italics>The Mathematical Analysis of Logic</italics>, published in 1847 in response to an ongoing public controversy between<space/><link><target>Augustus De Morgan</target></link><space/>and<space/><link><target>Sir William Hamilton, 9th Baronet</target><part>William Hamilton</part></link>, and later as a more substantial book,<space/><italics><link><target>The Laws of Thought</target></link></italics>, published in 1854. Boole's formulation differs from that described above in some important respects. For example, conjunction and disjunction in Boole were not a dual pair of operations. Boolean algebra emerged in the 1860s, in papers written by<space/><link><target>William Jevons</target></link><space/>and<space/><link><target>Charles Sanders Peirce</target></link>. The first systematic presentation of Boolean algebra and<space/><link><target>distributive lattice</target><trail>s</trail></link><space/>is owed to the 1890<space/><italics>Vorlesungen</italics><space/>of<space/><link><target>Ernst Schrder</target></link>. The first extensive treatment of Boolean algebra in English is<space/><link><target>A. N. Whitehead</target></link>'s 1898<space/><italics>Universal Algebra</italics>. Boolean algebra as an axiomatic algebraic structure in the modern axiomatic sense begins with a 1904 paper by<space/><link><target>Edward V. Huntington</target></link>. Boolean algebra came of age as serious mathematics with the work of<space/><link><target>Marshall Stone</target></link><space/>in the 1930s, and with<space/><link><target>Garrett Birkhoff</target></link>'s 1940<space/><italics>Lattice Theory</italics>. In the 1960s,<space/><link><target>Paul Cohen (mathematician)</target><part>Paul Cohen</part></link>,<space/><link><target>Dana Scott</target></link>, and others found deep new results in<space/><link><target>mathematical logic</target></link><space/>and<space/><link><target>axiomatic set theory</target></link><space/>using offshoots of Boolean algebra, namely<space/><link><target>forcing (mathematics)</target><part>forcing</part></link><space/>and<space/><link><target>Boolean-valued model</target><trail>s</trail></link>.</paragraph><heading level='2'>Definition</heading><paragraph>A<space/><bold>Boolean algebra</bold><space/>is a six-<link><target>tuple</target></link><space/>consisting of a<space/><link><target>Set (mathematics)</target><part>set</part></link><space/><italics>A</italics>, equipped with two<space/><link><target>binary operation</target><trail>s</trail></link><space/>(called &quot;meet&quot; or &quot;and&quot;), (called &quot;join&quot; or &quot;or&quot;), a<space/><link><target>unary operation</target></link><space/>(called &quot;complement&quot; or &quot;not&quot;) and two elements 0 and 1 (called &quot;bottom&quot; and &quot;top&quot;, or &quot;least&quot; and &quot;greatest&quot; element, also denoted by the symbols and , respectively), such that for all elements<space/><italics>a</italics>,<space/><italics>b</italics><space/>and<space/><italics>c</italics><space/>of<space/><italics>A</italics>, the following<space/><link><target>axioms</target></link><space/>hold:<extension extension_name='ref'>Davey, Priestley, 1990, p.109, 131, 144</extension></paragraph><list type='ident'><listitem><list type='ident'><listitem><table cellpadding="5"><tablerow><tablecell><italics>a</italics><space/>(<italics>b</italics><space/><italics>c</italics>) = (<italics>a</italics><space/><italics>b</italics>)<space/><italics>c</italics></tablecell><tablecell><italics>a</italics><space/>(<italics>b</italics><space/><italics>c</italics>) = (<italics>a</italics><space/><italics>b</italics>)<space/><italics>c</italics></tablecell><tablecell><link><target>associativity</target></link></tablecell></tablerow><tablerow><tablecell><italics>a</italics><space/><italics>b</italics><space/>=<space/><italics>b</italics><space/><italics>a</italics></tablecell><tablecell><italics>a</italics><space/><italics>b</italics><space/>=<space/><italics>b</italics><space/><italics>a</italics></tablecell><tablecell><link><target>commutativity</target></link></tablecell></tablerow><tablerow><tablecell><italics>a</italics><space/>(<italics>a</italics><space/><italics>b</italics>) =<space/><italics>a</italics></tablecell><tablecell><italics>a</italics><space/>(<italics>a</italics><space/><italics>b</italics>) =<space/><italics>a</italics></tablecell><tablecell><link><target>Absorption law</target><part>absorption</part></link></tablecell></tablerow><tablerow><tablecell><italics>a</italics><space/>0 =<space/><italics>a</italics></tablecell><tablecell><italics>a</italics><space/>1 =<space/><italics>a</italics></tablecell><tablecell><link><target>identity element</target><part>identity</part></link></tablecell></tablerow><tablerow><tablecell><italics>a</italics><space/>(<italics>b</italics><space/><italics>c</italics>) = (<italics>a</italics><space/><italics>b</italics>) (<italics>a</italics><space/><italics>c</italics>)&amp;nbsp;&amp;nbsp;</tablecell><tablecell><italics>a</italics><space/>(<italics>b</italics><space/><italics>c</italics>) = (<italics>a</italics><space/><italics>b</italics>) (<italics>a</italics><space/><italics>c</italics>)&amp;nbsp;&amp;nbsp;</tablecell><tablecell><link><target>distributivity</target></link></tablecell></tablerow><tablerow><tablecell><italics>a</italics><space/><italics>a</italics><space/>= 1</tablecell><tablecell><italics>a</italics><space/><italics>a</italics><space/>= 0</tablecell><tablecell><link><target>complemented lattice</target><part>complements</part></link></tablecell></tablerow></table>Note, however, that the absorption law can be excluded from the set of axioms as it can be derived by the other axioms.</listitem></list></listitem></list><paragraph>A Boolean algebra with only one element is called a<space/><bold>trivial Boolean algebra</bold><space/>or a<space/><bold>degenerate Boolean algebra</bold>. (Some authors require 0 and 1 to be<space/><italics>distinct</italics><space/>elements in order to exclude this case.)</paragraph><paragraph>It follows from the last three pairs of axioms above (identity, distributivity and complements), or from the absorption axiom, that</paragraph><list type='ident'><listitem><list type='ident'><listitem><italics>a</italics><space/>=<space/><italics>b</italics><space/><italics>a</italics><space/>&amp;nbsp;&amp;nbsp;&amp;nbsp; if and only if &amp;nbsp;&amp;nbsp;&amp;nbsp;<space/><italics>a</italics><space/><italics>b</italics><space/>=<space/><italics>b</italics>.</listitem></list></listitem></list><paragraph>The relation defined by<space/><italics>a</italics><space/><italics>b</italics><space/>if these equivalent conditions hold, is a<space/><link><target>partial order</target></link><space/>with least element 0 and greatest element 1. The meet<space/><italics>a</italics><space/><italics>b</italics><space/>and the join<space/><italics>a</italics><space/><italics>b</italics><space/>of two elements coincide with their<space/><link><target>infimum</target></link><space/>and<space/><link><target>supremum</target></link>, respectively, with respect to .</paragraph><paragraph>The first four pairs of axioms constitute a definition of a<space/><link><target>bounded lattice</target></link>.</paragraph><paragraph>It follows from the first five pairs of axioms that any complement is unique.</paragraph><paragraph>The set of axioms is<space/><link><target>duality (order theory)</target><part>self-dual</part></link><space/>in the sense that if one exchanges with and 0 with 1 in an axiom, the result is again an axiom. Therefore by applying this operation to a Boolean algebra (or Boolean lattice), one obtains another Boolean algebra with the same elements; it is called its<space/><bold>dual</bold>.<extension extension_name='ref'><template><target>citation</target><arg name="title">Boolean Algebra</arg><arg name="first">R. L.</arg><arg name="last">Goodstein</arg><arg name="publisher">Courier Dover Publications</arg><arg name="year">2012</arg><arg name="isbn">9780486154978</arg><arg name="chapter">Chapter 2: The self-dual system of axioms</arg><arg name="pages">21ff</arg><arg name="url">http://books.google.com/books?id</arg></template>.</extension></paragraph><heading level='2'>Examples</heading><list type='bullet'><listitem>The simplest non-trivial Boolean algebra, the<space/><link><target>two-element Boolean algebra</target></link>, has only two elements, 0 and 1, and is defined by the rules:</listitem></list><table><tablerow><tablecell width="70"></tablecell><tablecell><table class="wikitable" border="1" cellpadding="4" cellspacing="0"><tablerow><tablehead></tablehead><tablecell>0</tablecell><tablecell>1</tablecell></tablerow><tablerow><tablehead>0</tablehead><tablecell>0</tablecell><tablecell>0</tablecell></tablerow><tablerow><tablehead>1</tablehead><tablecell>0</tablecell><tablecell>1</tablecell></tablerow></table></tablecell><tablecell></tablecell><tablecell width="30"></tablecell><tablecell><table class="wikitable" border="1" cellpadding="4" cellspacing="0"><tablerow><tablehead></tablehead><tablecell>0</tablecell><tablecell>1</tablecell></tablerow><tablerow><tablehead>0</tablehead><tablecell>0</tablecell><tablecell>1</tablecell></tablerow><tablerow><tablehead>1</tablehead><tablecell>1</tablecell><tablecell>1</tablecell></tablerow></table></tablecell><tablecell></tablecell><tablecell width="40"></tablecell><tablecell><table class="wikitable" border="1" cellpadding="4" cellspacing="0"><tablerow><tablehead><italics>a</italics></tablehead><tablecell>0</tablecell><tablecell>1</tablecell></tablerow><tablerow><tablehead><italics>a</italics></tablehead><tablecell>1</tablecell><tablecell>0</tablecell></tablerow></table></tablecell></tablerow></table><list type='ident'><listitem><list type='bullet'><listitem>It has applications in<space/><link><target>logic</target></link>, interpreting 0 as<space/><italics>false</italics>, 1 as<space/><italics>true</italics>, as<space/><italics>and</italics>, as<space/><italics>or</italics>, and as<space/><italics>not</italics>. Expressions involving variables and the Boolean operations represent statement forms, and two such expressions can be shown to be equal using the above axioms if and only if the corresponding statement forms are<space/><link><target>logical equivalence</target><part>logically equivalent</part></link>.</listitem></list></listitem></list><list type='ident'><listitem><list type='bullet'><listitem>The two-element Boolean algebra is also used for circuit design in<space/><link><target>electrical engineering</target></link>; here 0 and 1 represent the two different states of one<space/><link><target>bit</target></link><space/>in a<space/><link><target>digital circuit</target></link>, typically high and low<space/><link><target>voltage</target></link>. Circuits are described by expressions containing variables, and two such expressions are equal for all values of the variables if and only if the corresponding circuits have the same input-output behavior. Furthermore, every possible input-output behavior can be modeled by a suitable Boolean expression.</listitem></list></listitem></list><list type='ident'><listitem><list type='bullet'><listitem>The two-element Boolean algebra is also important in the general theory of Boolean algebras, because an equation involving several variables is generally true in all Boolean algebras if and only if it is true in the two-element Boolean algebra (which can be checked by a trivial<space/><link><target>brute force search</target><part>brute force</part></link><space/>algorithm for small numbers of variables). This can for example be used to show that the following laws (<italics>Consensus theorems</italics>) are generally valid in all Boolean algebras:<list type='bullet'><listitem>(<italics>a</italics><space/><italics>b</italics>) (<italics>a</italics><space/><italics>c</italics>) (<italics>b</italics><space/><italics>c</italics>) (<italics>a</italics><space/><italics>b</italics>) (<italics>a</italics><space/><italics>c</italics>)</listitem><listitem>(<italics>a</italics><space/><italics>b</italics>) (<italics>a</italics><space/><italics>c</italics>) (<italics>b</italics><space/><italics>c</italics>) (<italics>a</italics><space/><italics>b</italics>) (<italics>a</italics><space/><italics>c</italics>)</listitem></list></listitem></list></listitem></list><list type='bullet'><listitem>The<space/><link><target>power set</target></link><space/>(set of all subsets) of any given nonempty set<space/><italics>S</italics><space/>forms a Boolean algebra, an<space/><link><target>algebra of sets</target></link>, with the two operations := (union) and := (intersection). The smallest element 0 is the<space/><link><target>empty set</target></link><space/>and the largest element 1 is the set<space/><italics>S</italics><space/>itself.</listitem></list><list type='ident'><listitem><list type='bullet'><listitem>After the two-element Boolean algebra, the simplest Boolean algebra is that defined by the<space/><link><target>power set</target></link><space/>of two atoms:</listitem></list></listitem></list><table><tablerow><tablecell width="70"></tablecell><tablecell><table class="wikitable" border="1" cellpadding="4" cellspacing="0"><tablerow><tablehead></tablehead><tablecell>0</tablecell><tablecell>a</tablecell><tablecell>b</tablecell><tablecell>1</tablecell></tablerow><tablerow><tablehead>0</tablehead><tablecell>0</tablecell><tablecell>0</tablecell><tablecell>0</tablecell><tablecell>0</tablecell></tablerow><tablerow><tablehead>a</tablehead><tablecell>0</tablecell><tablecell>a</tablecell><tablecell>0</tablecell><tablecell>a</tablecell></tablerow><tablerow><tablehead>b</tablehead><tablecell>0</tablecell><tablecell>0</tablecell><tablecell>b</tablecell><tablecell>b</tablecell></tablerow><tablerow><tablehead>1</tablehead><tablecell>0</tablecell><tablecell>a</tablecell><tablecell>b</tablecell><tablecell>1</tablecell></tablerow></table></tablecell><tablecell></tablecell><tablecell width="30"></tablecell><tablecell><table class="wikitable" border="1" cellpadding="4" cellspacing="0"><tablerow><tablehead></tablehead><tablecell>0</tablecell><tablecell>a</tablecell><tablecell>b</tablecell><tablecell>1</tablecell></tablerow><tablerow><tablehead>0</tablehead><tablecell>0</tablecell><tablecell>a</tablecell><tablecell>b</tablecell><tablecell>1</tablecell></tablerow><tablerow><tablehead>a</tablehead><tablecell>a</tablecell><tablecell>a</tablecell><tablecell>1</tablecell><tablecell>1</tablecell></tablerow><tablerow><tablehead>b</tablehead><tablecell>b</tablecell><tablecell>1</tablecell><tablecell>b</tablecell><tablecell>1</tablecell></tablerow><tablerow><tablehead>1</tablehead><tablecell>1</tablecell><tablecell>1</tablecell><tablecell>1</tablecell><tablecell>1</tablecell></tablerow></table></tablecell><tablecell></tablecell><tablecell width="40"></tablecell><tablecell><table class="wikitable" border="1" cellpadding="4" cellspacing="0"><tablerow><tablehead><italics>x</italics></tablehead><tablecell>0</tablecell><tablecell>a</tablecell><tablecell>b</tablecell><tablecell>1</tablecell></tablerow><tablerow><tablehead><italics>x</italics></tablehead><tablecell>1</tablecell><tablecell>b</tablecell><tablecell>a</tablecell><tablecell>0</tablecell></tablerow></table></tablecell></tablerow></table><list type='bullet'><listitem>The set of all subsets of<space/><italics>S</italics><space/>that are either finite or<space/><link><target>cofinite</target></link><space/>is a Boolean algebra, an<space/><link><target>algebra of sets</target></link>.</listitem></list><list type='bullet'><listitem>Starting with the<space/><link><target>propositional calculus</target></link><space/>with sentence symbols, form the<space/><link><target>Lindenbaum-Tarski algebra</target><part>Lindenbaum algebra</part></link><space/>(that is, the set of sentences in the propositional calculus modulo<space/><link><target>tautology (logic)</target><part>tautology</part></link>). This construction yields a Boolean algebra. It is in fact the<space/><link><target>free Boolean algebra</target></link><space/>on generators. A truth assignment in propositional calculus is then a Boolean algebra homomorphism from this algebra to the two-element Boolean algebra.</listitem><listitem>Given any<space/><link><target>linearly ordered</target></link><space/>set<space/><italics>L</italics><space/>with a least element, the interval algebra is the smallest algebra of subsets of<space/><italics>L</italics><space/>containing all of the half-open intervals [<italics>a</italics>,<space/><italics>b</italics>) such that<space/><italics>a</italics><space/>is in<space/><italics>L</italics><space/>and<space/><italics>b</italics><space/>is either in<space/><italics>L</italics><space/>or equal to . Interval algebras are useful in the study of<space/><link><target>Lindenbaum-Tarski algebra</target><trail>s</trail></link>; every countable Boolean algebra is isomorphic to an interval algebra.</listitem></list><paragraph><link><target>File:T 30.svg</target><part>thumb</part><part>x150px</part><part><link><target>Hasse diagram</target></link><space/>of the Boolean algebra of divisors of 30.</part></link></paragraph><list type='bullet'><listitem>For any<space/><link><target>natural number</target></link><space/><italics>n</italics>, the set of all positive<space/><link><target>divisor</target><trail>s</trail></link><space/>of<space/><italics>n</italics>, defining<space/><italics>a</italics><italics>b</italics><space/>if<space/><italics>a</italics><space/><link><target>divides</target></link><space/><italics>b</italics>, forms a<space/><link><target>distributive lattice</target></link>. This lattice is a Boolean algebra if and only if<space/><italics>n</italics><space/>is<space/><link><target>square-free integer</target><part>square-free</part></link>. The bottom and the top element of this Boolean algebra is the natural number 1 and<space/><italics>n</italics>, respectively. The complement of<space/><italics>a</italics><space/>is given by<space/><italics>n</italics>/<italics>a</italics>. The meet and the join of<space/><italics>a</italics><space/>and<space/><italics>b</italics><space/>is given by the<space/><link><target>greatest common divisor</target></link><space/>(gcd) and the<space/><link><target>least common multiple</target></link><space/>(lcm) of<space/><italics>a</italics><space/>and<space/><italics>b</italics>, respectively. The ring addition<space/><italics>a</italics>+<italics>b</italics><space/>is given by lcm(<italics>a</italics>,<italics>b</italics>)/gcd(<italics>a</italics>,<italics>b</italics>). The picture shows an example for<space/><italics>n</italics><space/>= 30. As a counter-example, considering the non-square-free<space/><italics>n</italics>=60, the greatest common divisor of 30 and its complement 2 would be 2, while it should be the bottom element 1.</listitem></list><list type='bullet'><listitem>Other examples of Boolean algebras arise from<space/><link><target>topology</target><part>topological spaces</part></link>: if<space/><italics>X</italics><space/>is a topological space, then the collection of all subsets of<space/><italics>X</italics><space/>which are both open and closed forms a Boolean algebra with the operations := (union) and := (intersection).</listitem></list><list type='bullet'><listitem>If<space/><italics>R</italics><space/>is an arbitrary<space/><link><target>mathematical ring</target><part>ring</part></link><space/>and we define the set of<space/><italics>central idempotents</italics><space/>by<space/><xhtml:br></xhtml:br><space/><italics>A</italics><space/>= {<space/><italics>e</italics><space/><italics>R</italics><space/>:<space/><italics>e</italics><xhtml:sup>2</xhtml:sup><space/>=<space/><italics>e</italics>,<space/><italics>ex</italics><space/>=<space/><italics>xe</italics>,<space/><italics>x</italics><space/><italics>R</italics><space/>}<space/><xhtml:br></xhtml:br><space/>then the set<space/><italics>A</italics><space/>becomes a Boolean algebra with the operations<space/><italics>e</italics><space/><italics>f</italics><space/>:=<space/><italics>e</italics><space/>+<space/><italics>f</italics><space/>-<space/><italics>ef</italics><space/>and<space/><italics>e</italics><space/><italics>f</italics><space/>:=<space/><italics>ef</italics>.</listitem></list><heading level='2'>Homomorphisms and isomorphisms</heading><preblock><preline></preline></preblock><paragraph>A<space/><italics><link><target>homomorphism</target></link></italics><space/>between two Boolean algebras<space/><italics>A</italics><space/>and<space/><italics>B</italics><space/>is a<space/><link><target>function (mathematics)</target><part>function</part></link><space/><italics>f</italics><space/>:<space/><italics>A</italics><space/><italics>B</italics><space/>such that for all<space/><italics>a</italics>,<space/><italics>b</italics><space/>in<space/><italics>A</italics>:</paragraph><list type='ident'><listitem><italics>f</italics>(<italics>a</italics><space/><italics>b</italics>) =<space/><italics>f</italics>(<italics>a</italics>)<space/><italics>f</italics>(<italics>b</italics>),</listitem><listitem><italics>f</italics>(<italics>a</italics><space/><italics>b</italics>) =<space/><italics>f</italics>(<italics>a</italics>)<space/><italics>f</italics>(<italics>b</italics>),</listitem><listitem><italics>f</italics>(0) = 0,</listitem><listitem><italics>f</italics>(1) = 1.</listitem></list><paragraph>It then follows that<space/><italics>f</italics>(<italics>a</italics>) =<space/><italics>f</italics>(<italics>a</italics>) for all<space/><italics>a</italics><space/>in<space/><italics>A</italics>. The<space/><link><target>class (set theory)</target><part>class</part></link><space/>of all Boolean algebras, together with this notion of morphism, forms a<space/><link><target>full subcategory</target></link><space/>of the<space/><link><target>category theory</target><part>category</part></link><space/>of lattices.</paragraph><preblock><preline></preline></preblock><heading level='2'>Boolean rings</heading><paragraph><template><target>Main</target><arg>Boolean ring</arg></template>Every Boolean algebra (A, , ) gives rise to a<space/><link><target>ring (algebra)</target><part>ring</part></link><space/>(<italics>A</italics>, +, ) by defining<space/><italics>a</italics><space/>+<space/><italics>b</italics><space/>:= (<italics>a</italics><space/><italics>b</italics>) (<italics>b</italics><space/><italics>a</italics>) = (<italics>a</italics><space/><italics>b</italics>) (<italics>a</italics><space/><italics>b</italics>) (this operation is called<space/><link><target>symmetric difference</target></link><space/>in the case of sets and<space/><link><target>Truth table#Exclusive disjunction</target><part>XOR</part></link><space/>in the case of logic) and<space/><italics>a</italics><space/><italics>b</italics><space/>:=<space/><italics>a</italics><space/><italics>b</italics>. The zero element of this ring coincides with the 0 of the Boolean algebra; the multiplicative identity element of the ring is the 1 of the Boolean algebra. This ring has the property that<space/><italics>a</italics><space/><italics>a</italics><space/>=<space/><italics>a</italics><space/>for all<space/><italics>a</italics><space/>in<space/><italics>A</italics>; rings with this property are called<space/><link><target>Boolean ring</target><trail>s</trail></link>.</paragraph><paragraph>Conversely, if a Boolean ring<space/><italics>A</italics><space/>is given, we can turn it into a Boolean algebra by defining<space/><italics>x</italics><space/><italics>y</italics><space/>:=<space/><italics>x</italics><space/>+<space/><italics>y</italics><space/>+ (<italics>x</italics><space/><italics>y</italics>) and<space/><italics>x</italics><space/><italics>y</italics><space/>:=<space/><italics>x</italics><space/><italics>y</italics>.<extension extension_name='ref'>Stone, 1936</extension><extension extension_name='ref'>Hsiang, 1985, p.260</extension>Since these two constructions are inverses of each other, we can say that every Boolean ring arises from a Boolean algebra, and vice versa. Furthermore, a map<space/><italics>f</italics><space/>:<space/><italics>A</italics><space/><italics>B</italics><space/>is a homomorphism of Boolean algebras if and only if it is a homomorphism of Boolean rings. The<space/><link><target>category theory</target><part>categories</part></link><space/>of Boolean rings and Boolean algebras are equivalent.<extension extension_name='ref'><template><target>harvtxt</target><arg>Cohn</arg><arg>2003</arg></template>,<space/><link type='external' href='https://books.google.com/books?id=VESm0MJOiDQC&amp;amp;pg=PA81'>p.&amp;nbsp;81</link>.</extension></paragraph><paragraph>Hsiang (1985) gave a<space/><link><target>Abstract rewriting system</target><part>rule-based algorithm</part></link><space/>to<space/><link><target>Word problem (mathematics)</target><part>check</part></link><space/>whether two arbitrary expressions denote the same value in every Boolean ring.</paragraph><preblock><preline>More generally, Boudet,<space/><link><target>Jean-Pierre Jouannaud</target><part>Jouannaud</part></link>, and Schmidt-Schau (1989) gave an algorithm to<space/><link><target>Unification (computer science)#Particular background knowledge sets .24 E .24</target><part>solve equations</part></link><space/>between arbitrary Boolean-ring expressions.</preline></preblock><paragraph>Employing the similarity of Boolean rings and Boolean algebras, both algorithms have applications in<space/><link><target>automated theorem proving</target></link>.</paragraph><heading level='2'>Ideals and filters</heading><paragraph><template><target>Main</target><arg>Ideal (order theory)</arg><arg>Filter (mathematics)</arg></template>An<space/><italics>ideal</italics><space/>of the Boolean algebra<space/><italics>A</italics><space/>is a subset<space/><italics>I</italics><space/>such that for all<space/><italics>x</italics>,<space/><italics>y</italics><space/>in<space/><italics>I</italics><space/>we have x y in<space/><italics>I</italics><space/>and for all<space/><italics>a</italics><space/>in<space/><italics>A</italics><space/>we have<space/><italics>a</italics><space/><italics>x</italics><space/>in<space/><italics>I</italics>. This notion of ideal coincides with the notion of<space/><link><target>ring ideal</target></link><space/>in the Boolean ring<space/><italics>A</italics>. An ideal<space/><italics>I</italics><space/>of<space/><italics>A</italics><space/>is called<space/><italics>prime</italics><space/>if<space/><italics>I</italics><space/><italics>A</italics><space/>and if<space/><italics>a</italics><space/><italics>b</italics><space/>in<space/><italics>I</italics><space/>always implies<space/><italics>a</italics><space/>in<space/><italics>I</italics><space/>or<space/><italics>b</italics><space/>in<space/><italics>I</italics>. Furthermore, for every<space/><italics>a</italics><space/><italics>A</italics><space/>we have that<space/><italics>a</italics><space/><italics>-a</italics><space/>= 0<space/><italics>I</italics><space/>and then<space/><italics>a</italics><space/><italics>I</italics><space/>or<space/><italics>-a</italics><space/><italics>I</italics><space/>for every<space/><italics>a</italics><space/><italics>A</italics>, if<space/><italics>I</italics><space/>is prime. An ideal<space/><italics>I</italics><space/>of<space/><italics>A</italics><space/>is called<space/><italics>maximal</italics><space/>if<space/><italics>I</italics><space/><italics>A</italics><space/>and if the only ideal properly containing<space/><italics>I</italics><space/>is<space/><italics>A</italics><space/>itself. For an ideal<space/><italics>I</italics>, if<space/><italics>a</italics><space/><italics>I</italics><space/>and<space/><italics>-a</italics><space/><italics>I</italics>, then<space/><italics>I</italics><space/>{<italics>a</italics>} or<space/><italics>I</italics><space/>{<italics>-a</italics>} is properly contained in another ideal<space/><italics>J</italics>. Hence, that an<space/><italics>I</italics><space/>is not maximal and therefore the notions of prime ideal and maximal ideal are equivalent in Boolean algebras. Moreover, these notions coincide with ring theoretic ones of<space/><link><target>prime ideal</target></link><space/>and<space/><link><target>maximal ideal</target></link><space/>in the Boolean ring<space/><italics>A</italics>.</paragraph><paragraph>The dual of an<space/><italics>ideal</italics><space/>is a<space/><italics>filter</italics>. A<space/><italics>filter</italics><space/>of the Boolean algebra<space/><italics>A</italics><space/>is a subset<space/><italics>p</italics><space/>such that for all<space/><italics>x</italics>,<space/><italics>y</italics><space/>in<space/><italics>p</italics><space/>we have<space/><italics>x</italics><space/><italics>y</italics><space/>in<space/><italics>p</italics><space/>and for all<space/><italics>a</italics><space/>in<space/><italics>A</italics><space/>we have<space/><italics>a</italics><space/><italics>x</italics><space/>in<space/><italics>p</italics>. The dual of a<space/><italics>maximal</italics><space/>(or<space/><italics>prime</italics>)<space/><italics>ideal</italics><space/>in a Boolean algebra is<space/><italics><link><target>ultrafilter</target></link></italics>. Ultrafilters can alternatively be described as<space/><link><target>2-valued morphism</target><trail>s</trail></link><space/>from<space/><italics>A</italics><space/>to the two-element Boolean algebra. The statement<space/><italics>every filter in a Boolean algebra can be extended to an ultrafilter</italics><space/>is called the<space/><italics><link><target>Boolean prime ideal theorem#The ultrafilter lemma</target><part>Ultrafilter Theorem</part></link></italics><space/>and can not be proved in<space/><link><target>ZermeloFraenkel set theory</target><part>ZF</part></link>, if<space/><link><target>ZermeloFraenkel set theory</target><part>ZF</part></link><space/>is<space/><link><target>consistent</target></link>. Within ZF, it is strictly weaker than the<space/><link><target>axiom of choice</target></link>.The Ultrafilter Theorem has many equivalent formulations:<space/><italics>every Boolean algebra has an ultrafilter</italics>,<space/><italics>every ideal in a Boolean algebra can be extended to a prime ideal</italics>, etc.</paragraph><heading level='2'>Representations</heading><paragraph>It can be shown that every<space/><italics>finite</italics><space/>Boolean algebra is isomorphic to the Boolean algebra of all subsets of a finite set. Therefore, the number of elements of every finite Boolean algebra is a<space/><link><target>power of two</target></link>.</paragraph><paragraph><link><target>Marshall H. Stone</target><part>Stone's</part></link><space/>celebrated<space/><italics><link><target>Stone's representation theorem for Boolean algebras</target><part>representation theorem for Boolean algebras</part></link></italics><space/>states that<space/><italics>every</italics><space/>Boolean algebra<space/><italics>A</italics><space/>is isomorphic to the Boolean algebra of all<space/><link><target>clopen set</target><part>clopen</part></link><space/>sets in some (<link><target>compact space</target><part>compact</part></link><space/><link><target>totally disconnected</target></link><space/><link><target>Hausdorff space</target><part>Hausdorff</part></link>) topological space.</paragraph><heading level='2'>Axiomatics</heading><table align="right" class="wikitable collapsible collapsed" style="text-align:left"><tablerow><tablehead colspan="2"><bold>Proven properties</bold></tablehead></tablerow><tablerow valign="top"><tablecell><table align="left" class="collapsible collapsed" style="text-align:left"><tablerow><tablehead><bold>UId<xhtml:sub>1</xhtml:sub></bold></tablehead><tablehead></tablehead><tablehead colspan="2">If<space/><italics>x</italics><space/><italics>o</italics><space/>=<space/><italics>x</italics><space/>for all<space/><italics>x</italics>, then<space/><italics>o</italics><space/>= 0</tablehead></tablerow><tablerow><tablecell>Proof:</tablecell><tablecell></tablecell><tablecell colspan="2">If<space/><italics>x</italics><space/><italics>o</italics><space/>=<space/><italics>x</italics>, then</tablecell></tablerow><tablerow><tablecell></tablecell><tablecell></tablecell><tablecell>0</tablecell></tablerow><tablerow><tablecell></tablecell><tablecell>=</tablecell><tablecell>0<space/><italics>o</italics></tablecell><tablecell>by assumption</tablecell></tablerow><tablerow><tablecell></tablecell><tablecell>=</tablecell><tablecell><italics>o</italics><space/>0</tablecell><tablecell>by<space/><bold>Cmm<xhtml:sub>1</xhtml:sub></bold></tablecell></tablerow><tablerow><tablecell></tablecell><tablecell>=</tablecell><tablecell><italics>o</italics></tablecell><tablecell>by<space/><bold>Idn<xhtml:sub>1</xhtml:sub></bold></tablecell></tablerow></table></tablecell><tablecell><bold>UId<xhtml:sub>2</xhtml:sub></bold><space/>&amp;nbsp; [dual] &amp;nbsp; If<space/><italics>x</italics><space/><italics>i</italics><space/>=<space/><italics>x</italics><space/>for all<space/><italics>x</italics>, then<space/><italics>i</italics><space/>= 1</tablecell></tablerow><tablerow valign="top"><tablecell><table align="left" class="collapsible collapsed" style="text-align:left"><tablerow><tablehead><bold>Idm<xhtml:sub>1</xhtml:sub></bold></tablehead><tablehead></tablehead><tablehead><italics>x</italics><space/><italics>x</italics><space/>=<space/><italics>x</italics></tablehead></tablerow><tablerow><tablecell>Proof:</tablecell><tablecell></tablecell><tablecell><italics>x</italics><space/><italics>x</italics></tablecell></tablerow><tablerow><tablecell></tablecell><tablecell>=</tablecell><tablecell>(<italics>x</italics><space/><italics>x</italics>) 1</tablecell><tablecell>by<space/><bold>Idn<xhtml:sub>2</xhtml:sub></bold></tablecell></tablerow><tablerow><tablecell></tablecell><tablecell>=</tablecell><tablecell>(<italics>x</italics><space/><italics>x</italics>) (<italics>x</italics><space/><italics>x</italics>)</tablecell><tablecell>by<space/><bold>Cpl<xhtml:sub>1</xhtml:sub></bold></tablecell></tablerow><tablerow><tablecell></tablecell><tablecell>=</tablecell><tablecell><italics>x</italics><space/>(<italics>x</italics><space/><italics>x</italics>)</tablecell><tablecell>by<space/><bold>Dst<xhtml:sub>1</xhtml:sub></bold></tablecell></tablerow><tablerow><tablecell></tablecell><tablecell>=</tablecell><tablecell><italics>x</italics><space/>0</tablecell><tablecell>by<space/><bold>Cpl<xhtml:sub>2</xhtml:sub></bold></tablecell></tablerow><tablerow><tablecell></tablecell><tablecell>=</tablecell><tablecell><italics>x</italics></tablecell><tablecell>by<space/><bold>Idn<xhtml:sub>1</xhtml:sub></bold></tablecell></tablerow></table></tablecell><tablecell><bold>Idm<xhtml:sub>2</xhtml:sub></bold><space/>&amp;nbsp; [dual] &amp;nbsp;<space/><italics>x</italics><space/><italics>x</italics><space/>=<space/><italics>x</italics></tablecell></tablerow><tablerow valign="top"><tablecell><table align="left" class="collapsible collapsed" style="text-align:left"><tablerow><tablehead><bold>Bnd<xhtml:sub>1</xhtml:sub></bold></tablehead><tablehead></tablehead><tablehead><italics>x</italics><space/>1 = 1</tablehead></tablerow><tablerow><tablecell>Proof:</tablecell><tablecell></tablecell><tablecell><italics>x</italics><space/>1</tablecell></tablerow><tablerow><tablecell></tablecell><tablecell>=</tablecell><tablecell>(<italics>x</italics><space/>1) 1</tablecell><tablecell>by<space/><bold>Idn<xhtml:sub>2</xhtml:sub></bold></tablecell></tablerow><tablerow><tablecell></tablecell><tablecell>=</tablecell><tablecell>1 (<italics>x</italics><space/>1)</tablecell><tablecell>by<space/><bold>Cmm<xhtml:sub>2</xhtml:sub></bold></tablecell></tablerow><tablerow><tablecell></tablecell><tablecell>=</tablecell><tablecell>(<italics>x</italics><space/><italics>x</italics>) (<italics>x</italics><space/>1)</tablecell><tablecell>by<space/><bold>Cpl<xhtml:sub>1</xhtml:sub></bold></tablecell></tablerow><tablerow><tablecell></tablecell><tablecell>=</tablecell><tablecell><italics>x</italics><space/>(<italics>x</italics><space/>1)</tablecell><tablecell>by<space/><bold>Dst<xhtml:sub>1</xhtml:sub></bold></tablecell></tablerow><tablerow><tablecell></tablecell><tablecell>=</tablecell><tablecell><italics>x</italics><space/><italics>x</italics></tablecell><tablecell>by<space/><bold>Idn<xhtml:sub>2</xhtml:sub></bold></tablecell></tablerow><tablerow><tablecell></tablecell><tablecell>=</tablecell><tablecell>1</tablecell><tablecell>by<space/><bold>Cpl<xhtml:sub>1</xhtml:sub></bold></tablecell></tablerow></table></tablecell><tablecell><bold>Bnd<xhtml:sub>2</xhtml:sub></bold><space/>&amp;nbsp; [dual] &amp;nbsp;<space/><italics>x</italics><space/>0 = 0</tablecell></tablerow><tablerow valign="top"><tablecell><table align="left" class="collapsible collapsed" style="text-align:left"><tablerow><tablehead><bold>Abs<xhtml:sub>1</xhtml:sub></bold></tablehead><tablehead></tablehead><tablehead><italics>x</italics><space/>(<italics>x</italics><space/><italics>y</italics>) =<space/><italics>x</italics></tablehead></tablerow><tablerow><tablecell>Proof:</tablecell><tablecell></tablecell><tablecell><italics>x</italics><space/>(<italics>x</italics><space/><italics>y</italics>)</tablecell></tablerow><tablerow><tablecell></tablecell><tablecell>=</tablecell><tablecell>(<italics>x</italics><space/>1) (<italics>x</italics><space/><italics>y</italics>)</tablecell><tablecell>by<space/><bold>Idn<xhtml:sub>2</xhtml:sub></bold></tablecell></tablerow><tablerow><tablecell></tablecell><tablecell>=</tablecell><tablecell><italics>x</italics><space/>(1<space/><italics>y</italics>)</tablecell><tablecell>by<space/><bold>Dst<xhtml:sub>2</xhtml:sub></bold></tablecell></tablerow><tablerow><tablecell></tablecell><tablecell>=</tablecell><tablecell><italics>x</italics><space/>(<italics>y</italics><space/>1)</tablecell><tablecell>by<space/><bold>Cmm<xhtml:sub>1</xhtml:sub></bold></tablecell></tablerow><tablerow><tablecell></tablecell><tablecell>=</tablecell><tablecell><italics>x</italics><space/>1</tablecell><tablecell>by<space/><bold>Bnd<xhtml:sub>1</xhtml:sub></bold></tablecell></tablerow><tablerow><tablecell></tablecell><tablecell>=</tablecell><tablecell><italics>x</italics></tablecell><tablecell>by<space/><bold>Idn<xhtml:sub>2</xhtml:sub></bold></tablecell></tablerow></table></tablecell><tablecell><bold>Abs<xhtml:sub>2</xhtml:sub></bold><space/>&amp;nbsp; [dual] &amp;nbsp;<space/><italics>x</italics><space/>(<italics>x</italics><space/><italics>y</italics>) =<space/><italics>x</italics></tablecell></tablerow><tablerow valign="top"><tablecell colspan="2"><table align="left" class="collapsible collapsed" style="text-align:left"><tablerow><tablehead><bold>UNg</bold></tablehead><tablehead></tablehead><tablehead colspan="2">If<space/><italics>x</italics><space/><italics>x</italics><xhtml:sub>n</xhtml:sub><space/>= 1 and<space/><italics>x</italics><space/><italics>x</italics><xhtml:sub>n</xhtml:sub><space/>= 0, then<space/><italics>x</italics><xhtml:sub>n</xhtml:sub><space/>=<space/><italics>x</italics></tablehead></tablerow><tablerow><tablecell>Proof:</tablecell><tablecell></tablecell><tablecell colspan="2">If<space/><italics>x</italics><space/><italics>x</italics><xhtml:sub>n</xhtml:sub><space/>= 1 and<space/><italics>x</italics><space/><italics>x</italics><xhtml:sub>n</xhtml:sub><space/>= 0, then</tablecell></tablerow><tablerow><tablecell></tablecell><tablecell></tablecell><tablecell><italics>x</italics><xhtml:sub>n</xhtml:sub></tablecell></tablerow><tablerow><tablecell></tablecell><tablecell>=</tablecell><tablecell><italics>x</italics><xhtml:sub>n</xhtml:sub><space/>1</tablecell><tablecell>by<space/><bold>Idn<xhtml:sub>2</xhtml:sub></bold></tablecell></tablerow><tablerow><tablecell></tablecell><tablecell>=</tablecell><tablecell>1<space/><italics>x</italics><xhtml:sub>n</xhtml:sub></tablecell><tablecell>by<space/><bold>Cmm<xhtml:sub>2</xhtml:sub></bold></tablecell></tablerow><tablerow><tablecell></tablecell><tablecell>=</tablecell><tablecell>(<italics>x</italics><space/><italics>x</italics>)<space/><italics>x</italics><xhtml:sub>n</xhtml:sub></tablecell><tablecell>by<space/><bold>Cpl<xhtml:sub>1</xhtml:sub></bold></tablecell></tablerow><tablerow><tablecell></tablecell><tablecell>=</tablecell><tablecell><italics>x</italics><xhtml:sub>n</xhtml:sub><space/>(<italics>x</italics><space/><italics>x</italics>)</tablecell><tablecell>by<space/><bold>Cmm<xhtml:sub>2</xhtml:sub></bold></tablecell></tablerow><tablerow><tablecell></tablecell><tablecell>=</tablecell><tablecell>(<italics>x</italics><xhtml:sub>n</xhtml:sub><space/><italics>x</italics>) (<italics>x</italics><xhtml:sub>n</xhtml:sub><space/><italics>x</italics>)</tablecell><tablecell>by<space/><bold>Dst<xhtml:sub>2</xhtml:sub></bold></tablecell></tablerow><tablerow><tablecell></tablecell><tablecell>=</tablecell><tablecell>(<italics>x</italics><space/><italics>x</italics><xhtml:sub>n</xhtml:sub>) (<italics>x</italics><space/><italics>x</italics><xhtml:sub>n</xhtml:sub>)</tablecell><tablecell>by<space/><bold>Cmm<xhtml:sub>2</xhtml:sub></bold></tablecell></tablerow><tablerow><tablecell></tablecell><tablecell>=</tablecell><tablecell>0 (<italics>x</italics><space/><italics>x</italics><xhtml:sub>n</xhtml:sub>)</tablecell><tablecell>by assumption</tablecell></tablerow><tablerow><tablecell></tablecell><tablecell>=</tablecell><tablecell>(<italics>x</italics><space/><italics>x</italics>) (<italics>x</italics><space/><italics>x</italics><xhtml:sub>n</xhtml:sub>)</tablecell><tablecell>by<space/><bold>Cpl<xhtml:sub>2</xhtml:sub></bold></tablecell></tablerow><tablerow><tablecell></tablecell><tablecell>=</tablecell><tablecell>(<italics>x</italics><space/><italics>x</italics>) (<italics>x</italics><space/><italics>x</italics><xhtml:sub>n</xhtml:sub>)</tablecell><tablecell>by<space/><bold>Cmm<xhtml:sub>2</xhtml:sub></bold></tablecell></tablerow><tablerow><tablecell></tablecell><tablecell>=</tablecell><tablecell><italics>x</italics><space/>(<italics>x</italics><space/><italics>x</italics><xhtml:sub>n</xhtml:sub>)</tablecell><tablecell>by<space/><bold>Dst<xhtml:sub>2</xhtml:sub></bold></tablecell></tablerow><tablerow><tablecell></tablecell><tablecell>=</tablecell><tablecell><italics>x</italics><space/>1</tablecell><tablecell>by assumption</tablecell></tablerow><tablerow><tablecell></tablecell><tablecell>=</tablecell><tablecell><italics>x</italics></tablecell><tablecell>by<space/><bold>Idn<xhtml:sub>2</xhtml:sub></bold></tablecell></tablerow></table></tablecell></tablerow><tablerow valign="top"><tablecell colspan="2"><table align="left" class="collapsible collapsed" style="text-align:left"><tablerow><tablehead><bold>DNg</bold></tablehead><tablehead></tablehead><tablehead><italics>x</italics><space/>=<space/><italics>x</italics></tablehead></tablerow><tablerow><tablecell>Proof:</tablecell><tablecell></tablecell><tablecell><italics>x</italics><space/><italics>x</italics><space/>=<space/><italics>x</italics><space/><italics>x</italics><space/>= 1</tablecell><tablecell>by<space/><bold>Cmm<xhtml:sub>1</xhtml:sub></bold>,<space/><bold>Cpl<xhtml:sub>1</xhtml:sub></bold></tablecell></tablerow><tablerow><tablecell></tablecell><tablecell>and</tablecell><tablecell><italics>x</italics><space/><italics>x</italics><space/>=<space/><italics>x</italics><space/><italics>x</italics><space/>= 0</tablecell><tablecell>by<space/><bold>Cmm<xhtml:sub>2</xhtml:sub></bold>,<space/><bold>Cpl<xhtml:sub>2</xhtml:sub></bold></tablecell></tablerow><tablerow><tablecell></tablecell><tablecell>hence</tablecell><tablecell><italics>x</italics><space/>=<space/><italics>x</italics></tablecell><tablecell>by<space/><bold>UNg</bold></tablecell></tablerow></table></tablecell></tablerow><tablerow valign="top"><tablecell><table align="left" class="collapsible collapsed" style="text-align:left"><tablerow><tablehead><bold>A<xhtml:sub>1</xhtml:sub></bold></tablehead><tablehead></tablehead><tablehead><italics>x</italics><space/>(<italics>x</italics><space/><italics>y</italics>) = 1</tablehead></tablerow><tablerow><tablecell>Proof:</tablecell><tablecell></tablecell><tablecell><italics>x</italics><space/>(<italics>x</italics><space/><italics>y</italics>)</tablecell></tablerow><tablerow><tablecell></tablecell><tablecell>=</tablecell><tablecell>(<italics>x</italics><space/>(<italics>x</italics><space/><italics>y</italics>)) 1</tablecell><tablecell>by<space/><bold>Idn<xhtml:sub>2</xhtml:sub></bold></tablecell></tablerow><tablerow><tablecell></tablecell><tablecell>=</tablecell><tablecell>1 (<italics>x</italics><space/>(<italics>x</italics><space/><italics>y</italics>))</tablecell><tablecell>by<space/><bold>Cmm<xhtml:sub>2</xhtml:sub></bold></tablecell></tablerow><tablerow><tablecell></tablecell><tablecell>=</tablecell><tablecell>(<italics>x</italics><space/><italics>x</italics>) (<italics>x</italics><space/>(<italics>x</italics><space/><italics>y</italics>))</tablecell><tablecell>by<space/><bold>Cpl<xhtml:sub>1</xhtml:sub></bold></tablecell></tablerow><tablerow><tablecell></tablecell><tablecell>=</tablecell><tablecell><italics>x</italics><space/>(<italics>x</italics><space/>(<italics>x</italics><space/><italics>y</italics>))</tablecell><tablecell>by<space/><bold>Dst<xhtml:sub>1</xhtml:sub></bold></tablecell></tablerow><tablerow><tablecell></tablecell><tablecell>=</tablecell><tablecell><italics>x</italics><space/><italics>x</italics></tablecell><tablecell>by<space/><bold>Abs<xhtml:sub>2</xhtml:sub></bold></tablecell></tablerow><tablerow><tablecell></tablecell><tablecell>=</tablecell><tablecell>1</tablecell><tablecell>by<space/><bold>Cpl<xhtml:sub>1</xhtml:sub></bold></tablecell></tablerow></table></tablecell><tablecell><bold>A<xhtml:sub>2</xhtml:sub></bold><space/>&amp;nbsp; [dual] &amp;nbsp;<space/><italics>x</italics><space/>(<italics>x</italics><space/><italics>y</italics>) = 0</tablecell></tablerow><tablerow valign="top"><tablecell><table align="left" class="collapsible collapsed" style="text-align:left"><tablerow><tablehead><bold>B<xhtml:sub>1</xhtml:sub></bold></tablehead><tablehead></tablehead><tablehead>(<italics>x</italics><space/><italics>y</italics>) (<italics>x</italics><space/><italics>y</italics>) = 1</tablehead></tablerow><tablerow><tablecell>Proof:</tablecell><tablecell></tablecell><tablecell>(<italics>x</italics><space/><italics>y</italics>) (<italics>x</italics><space/><italics>y</italics>)</tablecell></tablerow><tablerow><tablecell></tablecell><tablecell>=</tablecell><tablecell>((<italics>x</italics><space/><italics>y</italics>)<space/><italics>x</italics>) ((<italics>x</italics><space/><italics>y</italics>)<space/><italics>y</italics>)</tablecell><tablecell>by<space/><bold>Dst<xhtml:sub>1</xhtml:sub></bold></tablecell></tablerow><tablerow><tablecell></tablecell><tablecell>=</tablecell><tablecell>(<italics>x</italics><space/>(<italics>x</italics><space/><italics>y</italics>)) (<italics>y</italics><space/>(<italics>y</italics><space/><italics>x</italics>))</tablecell><tablecell>by<space/><bold>Cmm<xhtml:sub>1</xhtml:sub></bold></tablecell></tablerow><tablerow><tablecell></tablecell><tablecell>=</tablecell><tablecell>(<italics>x</italics><space/>(<italics>x</italics><space/><italics>y</italics>)) (<italics>y</italics><space/>(<italics>y</italics><space/><italics>x</italics>))</tablecell><tablecell>by<space/><bold>DNg</bold></tablecell></tablerow><tablerow><tablecell></tablecell><tablecell>=</tablecell><tablecell>1 1</tablecell><tablecell>by<space/><bold>A<xhtml:sub>1</xhtml:sub></bold></tablecell></tablerow><tablerow><tablecell></tablecell><tablecell>=</tablecell><tablecell>1</tablecell><tablecell>by<space/><bold>Idn<xhtml:sub>2</xhtml:sub></bold></tablecell></tablerow></table></tablecell><tablecell><bold>B<xhtml:sub>1</xhtml:sub></bold><space/>&amp;nbsp; [dual] &amp;nbsp; (<italics>x</italics><space/><italics>y</italics>) (<italics>x</italics><space/><italics>y</italics>) = 0</tablecell></tablerow><tablerow valign="top"><tablecell><table align="left" class="collapsible collapsed" style="text-align:left"><tablerow><tablehead><bold>C<xhtml:sub>1</xhtml:sub></bold></tablehead><tablehead></tablehead><tablehead>(<italics>x</italics><space/><italics>y</italics>) (<italics>x</italics><space/><italics>y</italics>) = 0</tablehead></tablerow><tablerow><tablecell>Proof:</tablecell><tablecell></tablecell><tablecell>(<italics>x</italics><space/><italics>y</italics>) (<italics>x</italics><space/><italics>y</italics>)</tablecell></tablerow><tablerow><tablecell></tablecell><tablecell>=</tablecell><tablecell>(<italics>x</italics><space/><italics>y</italics>) (<italics>x</italics><space/><italics>y</italics>)</tablecell><tablecell>by<space/><bold>Cmm<xhtml:sub>2</xhtml:sub></bold></tablecell></tablerow><tablerow><tablecell></tablecell><tablecell>=</tablecell><tablecell>((<italics>x</italics><space/><italics>y</italics>)<space/><italics>x</italics>) ((<italics>x</italics><space/><italics>y</italics>)<space/><italics>y</italics>)</tablecell><tablecell>by<space/><bold>Dst<xhtml:sub>2</xhtml:sub></bold></tablecell></tablerow><tablerow><tablecell></tablecell><tablecell>=</tablecell><tablecell>(<italics>x</italics><space/>(<italics>x</italics><space/><italics>y</italics>)) (<italics>y</italics><space/>(<italics>y</italics><space/><italics>x</italics>))</tablecell><tablecell>by<space/><bold>Cmm<xhtml:sub>2</xhtml:sub></bold></tablecell></tablerow><tablerow><tablecell></tablecell><tablecell>=</tablecell><tablecell>0 0</tablecell><tablecell>by<space/><bold>A<xhtml:sub>2</xhtml:sub></bold></tablecell></tablerow><tablerow><tablecell></tablecell><tablecell>=</tablecell><tablecell>0</tablecell><tablecell>by<space/><bold>Idn<xhtml:sub>1</xhtml:sub></bold></tablecell></tablerow></table></tablecell><tablecell><bold>C<xhtml:sub>2</xhtml:sub></bold><space/>&amp;nbsp; [dual] &amp;nbsp; (<italics>x</italics><space/><italics>y</italics>) (<italics>x</italics><space/><italics>y</italics>) = 1</tablecell></tablerow><tablerow valign="top"><tablecell><table align="left" class="collapsible collapsed" style="text-align:left"><tablerow><tablehead><bold>DMg<xhtml:sub>1</xhtml:sub></bold></tablehead><tablehead></tablehead><tablehead>(<italics>x</italics><space/><italics>y</italics>) =<space/><italics>x</italics><space/><italics>y</italics></tablehead></tablerow><tablerow><tablecell>Proof:</tablecell><tablecell></tablecell><tablecell>by<space/><bold>B<xhtml:sub>1</xhtml:sub></bold>,<space/><bold>C<xhtml:sub>1</xhtml:sub></bold>, and<space/><bold>UNg</bold></tablecell></tablerow></table></tablecell><tablecell><bold>DMg<xhtml:sub>2</xhtml:sub></bold><space/>&amp;nbsp; [dual] &amp;nbsp; (<italics>x</italics><space/><italics>y</italics>) =<space/><italics>x</italics><space/><italics>y</italics></tablecell></tablerow><tablerow valign="top"><tablecell><table align="left" class="collapsible collapsed" style="text-align:left"><tablerow><tablehead><bold>D<xhtml:sub>1</xhtml:sub></bold></tablehead><tablehead></tablehead><tablehead>(<italics>x</italics>(<italics>y</italics><italics>z</italics>))<space/><italics>x</italics><space/>= 1</tablehead></tablerow><tablerow><tablecell>Proof:</tablecell><tablecell></tablecell><tablecell>(<italics>x</italics><space/>(<italics>y</italics><space/><italics>z</italics>))<space/><italics>x</italics></tablecell></tablerow><tablerow><tablecell></tablecell><tablecell>=</tablecell><tablecell><italics>x</italics><space/>(<italics>x</italics><space/>(<italics>y</italics><space/><italics>z</italics>))</tablecell><tablecell>by<space/><bold>Cmm<xhtml:sub>1</xhtml:sub></bold></tablecell></tablerow><tablerow><tablecell></tablecell><tablecell>=</tablecell><tablecell><italics>x</italics><space/>(<italics>x</italics><space/>(<italics>y</italics><space/><italics>z</italics>))</tablecell><tablecell>by<space/><bold>DNg</bold></tablecell></tablerow><tablerow><tablecell></tablecell><tablecell>=</tablecell><tablecell>1</tablecell><tablecell>by<space/><bold>A<xhtml:sub>1</xhtml:sub></bold></tablecell></tablerow></table></tablecell><tablecell><bold>D<xhtml:sub>2</xhtml:sub></bold><space/>&amp;nbsp; [dual] &amp;nbsp; (<italics>x</italics>(<italics>y</italics><italics>z</italics>))<space/><italics>x</italics><space/>= 0</tablecell></tablerow><tablerow valign="top"><tablecell><table align="left" class="collapsible collapsed" style="text-align:left"><tablerow><tablehead><bold>E<xhtml:sub>1</xhtml:sub></bold></tablehead><tablehead></tablehead><tablehead><italics>y</italics><space/>(<italics>x</italics>(<italics>y</italics><italics>z</italics>)) =<space/><italics>y</italics></tablehead></tablerow><tablerow><tablecell>Proof:</tablecell><tablecell></tablecell><tablecell><italics>y</italics><space/>(<italics>x</italics><space/>(<italics>y</italics><space/><italics>z</italics>))</tablecell></tablerow><tablerow><tablecell></tablecell><tablecell>=</tablecell><tablecell>(<italics>y</italics><space/><italics>x</italics>) (<italics>y</italics><space/>(<italics>y</italics><space/><italics>z</italics>))</tablecell><tablecell>by<space/><bold>Dst<xhtml:sub>2</xhtml:sub></bold></tablecell></tablerow><tablerow><tablecell></tablecell><tablecell>=</tablecell><tablecell>(<italics>y</italics><space/><italics>x</italics>)<space/><italics>y</italics></tablecell><tablecell>by<space/><bold>Abs<xhtml:sub>2</xhtml:sub></bold></tablecell></tablerow><tablerow><tablecell></tablecell><tablecell>=</tablecell><tablecell><italics>y</italics><space/>(<italics>y</italics><space/><italics>x</italics>)</tablecell><tablecell>by<space/><bold>Cmm<xhtml:sub>1</xhtml:sub></bold></tablecell></tablerow><tablerow><tablecell></tablecell><tablecell>=</tablecell><tablecell><italics>y</italics></tablecell><tablecell>by<space/><bold>Abs<xhtml:sub>1</xhtml:sub></bold></tablecell></tablerow></table></tablecell><tablecell><bold>E<xhtml:sub>2</xhtml:sub></bold><space/>&amp;nbsp; [dual] &amp;nbsp;<space/><italics>y</italics><space/>(<italics>x</italics>(<italics>y</italics><italics>z</italics>)) =<space/><italics>y</italics></tablecell></tablerow><tablerow valign="top"><tablecell><table align="left" class="collapsible collapsed" style="text-align:left"><tablerow><tablehead><bold>F<xhtml:sub>1</xhtml:sub></bold></tablehead><tablehead></tablehead><tablehead>(<italics>x</italics>(<italics>y</italics><italics>z</italics>))<space/><italics>y</italics><space/>= 1</tablehead></tablerow><tablerow><tablecell>Proof:</tablecell><tablecell></tablecell><tablecell>(<italics>x</italics><space/>(<italics>y</italics><space/><italics>z</italics>))<space/><italics>y</italics></tablecell></tablerow><tablerow><tablecell></tablecell><tablecell>=</tablecell><tablecell><italics>y</italics><space/>(<italics>x</italics><space/>(<italics>y</italics><space/><italics>z</italics>))</tablecell><tablecell>by<space/><bold>Cmm<xhtml:sub>1</xhtml:sub></bold></tablecell></tablerow><tablerow><tablecell></tablecell><tablecell>=</tablecell><tablecell>(<italics>y</italics><space/>(<italics>x</italics><space/>(<italics>y</italics><space/><italics>z</italics>))) 1</tablecell><tablecell>by<space/><bold>Idn<xhtml:sub>2</xhtml:sub></bold></tablecell></tablerow><tablerow><tablecell></tablecell><tablecell>=</tablecell><tablecell>1 (<italics>y</italics><space/>(<italics>x</italics><space/>(<italics>y</italics><space/><italics>z</italics>)))</tablecell><tablecell>by<space/><bold>Cmm<xhtml:sub>2</xhtml:sub></bold></tablecell></tablerow><tablerow><tablecell></tablecell><tablecell>=</tablecell><tablecell>(<italics>y</italics><space/><italics>y</italics>) (<italics>y</italics><space/>(<italics>x</italics><space/>(<italics>y</italics><space/><italics>z</italics>)))</tablecell><tablecell>by<space/><bold>Cpl<xhtml:sub>1</xhtml:sub></bold></tablecell></tablerow><tablerow><tablecell></tablecell><tablecell>=</tablecell><tablecell>(<italics>y</italics><space/><italics>y</italics>) (<italics>y</italics><space/>(<italics>x</italics><space/>(<italics>y</italics><space/><italics>z</italics>)))</tablecell><tablecell>by<space/><bold>Cmm<xhtml:sub>1</xhtml:sub></bold></tablecell></tablerow><tablerow><tablecell></tablecell><tablecell>=</tablecell><tablecell><italics>y</italics><space/>(<italics>y</italics><space/>(<italics>x</italics><space/>(<italics>y</italics><space/><italics>z</italics>)))</tablecell><tablecell>by<space/><bold>Dst<xhtml:sub>1</xhtml:sub></bold></tablecell></tablerow><tablerow><tablecell></tablecell><tablecell>=</tablecell><tablecell><italics>y</italics><space/><italics>y</italics></tablecell><tablecell>by<space/><bold>E<xhtml:sub>1</xhtml:sub></bold></tablecell></tablerow><tablerow><tablecell></tablecell><tablecell>=</tablecell><tablecell><italics>y</italics><space/><italics>y</italics></tablecell><tablecell>by<space/><bold>Cmm<xhtml:sub>1</xhtml:sub></bold></tablecell></tablerow><tablerow><tablecell></tablecell><tablecell>=</tablecell><tablecell>1</tablecell><tablecell>by<space/><bold>Cpl<xhtml:sub>1</xhtml:sub></bold></tablecell></tablerow></table></tablecell><tablecell><bold>F<xhtml:sub>2</xhtml:sub></bold><space/>&amp;nbsp; [dual] &amp;nbsp; (<italics>x</italics>(<italics>y</italics><italics>z</italics>))<space/><italics>y</italics><space/>= 0</tablecell></tablerow><tablerow valign="top"><tablecell><table align="left" class="collapsible collapsed" style="text-align:left"><tablerow><tablehead><bold>G<xhtml:sub>1</xhtml:sub></bold></tablehead><tablehead></tablehead><tablehead>(<italics>x</italics>(<italics>y</italics><italics>z</italics>))<space/><italics>z</italics><space/>= 1</tablehead></tablerow><tablerow><tablecell>Proof:</tablecell><tablecell></tablecell><tablecell>(<italics>x</italics><space/>(<italics>y</italics><space/><italics>z</italics>))<space/><italics>z</italics></tablecell></tablerow><tablerow><tablecell></tablecell><tablecell>=</tablecell><tablecell>(<italics>x</italics><space/>(<italics>z</italics><space/><italics>y</italics>))<space/><italics>z</italics></tablecell><tablecell>by<space/><bold>Cmm<xhtml:sub>1</xhtml:sub></bold></tablecell></tablerow><tablerow><tablecell></tablecell><tablecell>=</tablecell><tablecell>1</tablecell><tablecell>by<space/><bold>F<xhtml:sub>1</xhtml:sub></bold></tablecell></tablerow></table></tablecell><tablecell><bold>G<xhtml:sub>2</xhtml:sub></bold><space/>&amp;nbsp; [dual] &amp;nbsp; (<italics>x</italics>(<italics>y</italics><italics>z</italics>))<space/><italics>z</italics><space/>= 0</tablecell></tablerow><tablerow valign="top"><tablecell><table align="left" class="collapsible collapsed" style="text-align:left"><tablerow><tablehead><bold>H<xhtml:sub>1</xhtml:sub></bold></tablehead><tablehead></tablehead><tablehead>((<italics>x</italics><italics>y</italics>)<italics>z</italics>)<space/><italics>x</italics><space/>= 0</tablehead></tablerow><tablerow><tablecell>Proof:</tablecell><tablecell></tablecell><tablecell>((<italics>x</italics><space/><italics>y</italics>)<space/><italics>z</italics>)<space/><italics>x</italics></tablecell></tablerow><tablerow><tablecell></tablecell><tablecell>=</tablecell><tablecell>((<italics>x</italics><space/><italics>y</italics>)<space/><italics>z</italics>)<space/><italics>x</italics></tablecell><tablecell>by<space/><bold>DMg<xhtml:sub>1</xhtml:sub></bold></tablecell></tablerow><tablerow><tablecell></tablecell><tablecell>=</tablecell><tablecell>((<italics>x</italics><space/><italics>y</italics>)<space/><italics>z</italics>)<space/><italics>x</italics></tablecell><tablecell>by<space/><bold>DMg<xhtml:sub>1</xhtml:sub></bold></tablecell></tablerow><tablerow><tablecell></tablecell><tablecell>=</tablecell><tablecell><italics>x</italics><space/>((<italics>x</italics><space/><italics>y</italics>)<space/><italics>z</italics>)</tablecell><tablecell>by<space/><bold>Cmm<xhtml:sub>2</xhtml:sub></bold></tablecell></tablerow><tablerow><tablecell></tablecell><tablecell>=</tablecell><tablecell>(<italics>x</italics><space/>((<italics>x</italics><space/><italics>y</italics>)<space/><italics>z</italics>)) 0</tablecell><tablecell>by<space/><bold>Idn<xhtml:sub>1</xhtml:sub></bold></tablecell></tablerow><tablerow><tablecell></tablecell><tablecell>=</tablecell><tablecell>0 (<italics>x</italics><space/>((<italics>x</italics><space/><italics>y</italics>)<space/><italics>z</italics>))</tablecell><tablecell>by<space/><bold>Cmm<xhtml:sub>1</xhtml:sub></bold></tablecell></tablerow><tablerow><tablecell></tablecell><tablecell>=</tablecell><tablecell>(<italics>x</italics><space/><italics>x</italics>) (<italics>x</italics><space/>((<italics>x</italics><space/><italics>y</italics>)<space/><italics>z</italics>))</tablecell><tablecell>by<space/><bold>Cpl<xhtml:sub>1</xhtml:sub></bold></tablecell></tablerow><tablerow><tablecell></tablecell><tablecell>=</tablecell><tablecell><italics>x</italics><space/>(<italics>x</italics><space/>((<italics>x</italics><space/><italics>y</italics>)<space/><italics>z</italics>))</tablecell><tablecell>by<space/><bold>Dst<xhtml:sub>2</xhtml:sub></bold></tablecell></tablerow><tablerow><tablecell></tablecell><tablecell>=</tablecell><tablecell><italics>x</italics><space/>(<italics>x</italics><space/>(<italics>z</italics><space/>(<italics>x</italics><space/><italics>y</italics>)))</tablecell><tablecell>by<space/><bold>Cmm<xhtml:sub>2</xhtml:sub></bold></tablecell></tablerow><tablerow><tablecell></tablecell><tablecell>=</tablecell><tablecell><italics>x</italics><space/><italics>x</italics></tablecell><tablecell>by<space/><bold>E<xhtml:sub>2</xhtml:sub></bold></tablecell></tablerow><tablerow><tablecell></tablecell><tablecell>=</tablecell><tablecell>0</tablecell><tablecell>by<space/><bold>Cpl<xhtml:sub>2</xhtml:sub></bold></tablecell></tablerow></table></tablecell><tablecell><bold>H<xhtml:sub>2</xhtml:sub></bold><space/>&amp;nbsp; [dual] &amp;nbsp; ((<italics>x</italics><italics>y</italics>)<italics>z</italics>)<space/><italics>x</italics><space/>= 1</tablecell></tablerow><tablerow valign="top"><tablecell><table align="left" class="collapsible collapsed" style="text-align:left"><tablerow><tablehead><bold>I<xhtml:sub>1</xhtml:sub></bold></tablehead><tablehead></tablehead><tablehead>((<italics>x</italics><italics>y</italics>)<italics>z</italics>)<space/><italics>y</italics><space/>= 0</tablehead></tablerow><tablerow><tablecell>Proof:</tablecell><tablecell></tablecell><tablecell>((<italics>x</italics><space/><italics>y</italics>)<space/><italics>z</italics>)<space/><italics>y</italics></tablecell></tablerow><tablerow><tablecell></tablecell><tablecell>=</tablecell><tablecell>((<italics>y</italics><space/><italics>x</italics>)<space/><italics>z</italics>)<space/><italics>y</italics></tablecell><tablecell>by<space/><bold>Cmm<xhtml:sub>1</xhtml:sub></bold></tablecell></tablerow><tablerow><tablecell></tablecell><tablecell>=</tablecell><tablecell>0</tablecell><tablecell>by<space/><bold>H<xhtml:sub>1</xhtml:sub></bold></tablecell></tablerow></table></tablecell><tablecell><bold>I<xhtml:sub>2</xhtml:sub></bold><space/>&amp;nbsp; [dual] &amp;nbsp; ((<italics>x</italics><italics>y</italics>)<italics>z</italics>)<space/><italics>y</italics><space/>= 1</tablecell></tablerow><tablerow valign="top"><tablecell><table align="left" class="collapsible collapsed" style="text-align:left"><tablerow><tablehead><bold>J<xhtml:sub>1</xhtml:sub></bold></tablehead><tablehead></tablehead><tablehead>((<italics>x</italics><italics>y</italics>)<italics>z</italics>)<space/><italics>z</italics><space/>= 0</tablehead></tablerow><tablerow><tablecell>Proof:</tablecell><tablecell></tablecell><tablecell>((<italics>x</italics><space/><italics>y</italics>)<space/><italics>z</italics>)<space/><italics>z</italics></tablecell></tablerow><tablerow><tablecell></tablecell><tablecell>=</tablecell><tablecell>((<italics>x</italics><space/><italics>y</italics>)<space/><italics>z</italics>)<space/><italics>z</italics></tablecell><tablecell>by<space/><bold>DMg<xhtml:sub>1</xhtml:sub></bold></tablecell></tablerow><tablerow><tablecell></tablecell><tablecell>=</tablecell><tablecell><italics>z</italics><space/>((<italics>x</italics><space/><italics>y</italics>)<space/><italics>z</italics>)</tablecell><tablecell>by<space/><bold>Cmm<xhtml:sub>2</xhtml:sub></bold></tablecell></tablerow><tablerow><tablecell></tablecell><tablecell>=</tablecell><tablecell><italics>z</italics><space/>(<space/><italics>z</italics><space/>(<italics>x</italics><space/><italics>y</italics>))</tablecell><tablecell>by<space/><bold>Cmm<xhtml:sub>2</xhtml:sub></bold></tablecell></tablerow><tablerow><tablecell></tablecell><tablecell>=</tablecell><tablecell>0</tablecell><tablecell>by<space/><bold>A<xhtml:sub>2</xhtml:sub></bold></tablecell></tablerow></table></tablecell><tablecell><bold>J<xhtml:sub>2</xhtml:sub></bold><space/>&amp;nbsp; [dual] &amp;nbsp; ((<italics>x</italics><italics>y</italics>)<italics>z</italics>)<space/><italics>z</italics><space/>= 1</tablecell></tablerow><tablerow valign="top"><tablecell><table align="left" class="collapsible collapsed" style="text-align:left"><tablerow><tablehead><bold>K<xhtml:sub>1</xhtml:sub></bold></tablehead><tablehead></tablehead><tablehead>(<italics>x</italics><space/>(<italics>y</italics><space/><italics>z</italics>)) ((<italics>x</italics><space/><italics>y</italics>)<space/><italics>z</italics>) = 1</tablehead></tablerow><tablerow><tablecell>Proof:</tablecell><tablecell></tablecell><tablecell>(<italics>x</italics>(<italics>y</italics><italics>z</italics>)) ((<italics>x</italics><space/><italics>y</italics>)<space/><italics>z</italics>)</tablecell></tablerow><tablerow><tablecell></tablecell><tablecell>=</tablecell><tablecell>(<italics>x</italics>(<italics>y</italics><italics>z</italics>)) ((<italics>x</italics><space/><italics>y</italics>)<space/><italics>z</italics>)</tablecell><tablecell>by<space/><bold>DMg<xhtml:sub>1</xhtml:sub></bold></tablecell></tablerow><tablerow><tablecell></tablecell><tablecell>=</tablecell><tablecell>(<italics>x</italics>(<italics>y</italics><italics>z</italics>)) ((<italics>x</italics><space/><italics>y</italics>)<space/><italics>z</italics>)</tablecell><tablecell>by<space/><bold>DMg<xhtml:sub>1</xhtml:sub></bold></tablecell></tablerow><tablerow><tablecell></tablecell><tablecell>=</tablecell><tablecell>((<italics>x</italics>(<italics>y</italics><italics>z</italics>)) (<italics>x</italics><space/><italics>y</italics>)) ((<italics>x</italics>(<italics>y</italics><italics>z</italics>))<space/><italics>z</italics>)</tablecell><tablecell>by<space/><bold>Dst<xhtml:sub>1</xhtml:sub></bold></tablecell></tablerow><tablerow><tablecell></tablecell><tablecell>=</tablecell><tablecell>(((<italics>x</italics>(<italics>y</italics><italics>z</italics>))<space/><italics>x</italics>) ((<italics>x</italics>(<italics>y</italics><italics>z</italics>))<space/><italics>y</italics>)) ((<italics>x</italics>(<italics>y</italics><italics>z</italics>))<space/><italics>z</italics>)</tablecell><tablecell>by<space/><bold>Dst<xhtml:sub>1</xhtml:sub></bold></tablecell></tablerow><tablerow><tablecell></tablecell><tablecell>=</tablecell><tablecell>(1 1) 1</tablecell><tablecell>by<space/><bold>D<xhtml:sub>1</xhtml:sub></bold>,<bold>F<xhtml:sub>1</xhtml:sub></bold>,<bold>G<xhtml:sub>1</xhtml:sub></bold></tablecell></tablerow><tablerow><tablecell></tablecell><tablecell>=</tablecell><tablecell>1</tablecell><tablecell>by<space/><bold>Idn<xhtml:sub>2</xhtml:sub></bold></tablecell></tablerow></table></tablecell><tablecell><bold>K<xhtml:sub>2</xhtml:sub></bold><space/>&amp;nbsp; [dual] &amp;nbsp; (<italics>x</italics><space/>(<italics>y</italics><space/><italics>z</italics>)) ((<italics>x</italics><space/><italics>y</italics>)<space/><italics>z</italics>) = 0</tablecell></tablerow><tablerow valign="top"><tablecell><table align="left" class="collapsible collapsed" style="text-align:left"><tablerow><tablehead><bold>L<xhtml:sub>1</xhtml:sub></bold></tablehead><tablehead></tablehead><tablehead>(<italics>x</italics><space/>(<italics>y</italics><space/><italics>z</italics>)) ((<italics>x</italics><space/><italics>y</italics>)<space/><italics>z</italics>) = 0</tablehead></tablerow><tablerow><tablecell>Proof:</tablecell><tablecell></tablecell><tablecell>(<italics>x</italics><space/>(<italics>y</italics><space/><italics>z</italics>)) ((<italics>x</italics><space/><italics>y</italics>)<space/><italics>z</italics>)</tablecell></tablerow><tablerow><tablecell></tablecell><tablecell>=</tablecell><tablecell>((<italics>x</italics><italics>y</italics>)<italics>z</italics>) (<italics>x</italics><space/>(<italics>y</italics><space/><italics>z</italics>))</tablecell><tablecell>by<space/><bold>Cmm<xhtml:sub>2</xhtml:sub></bold></tablecell></tablerow><tablerow><tablecell></tablecell><tablecell>=</tablecell><tablecell>(((<italics>x</italics><italics>y</italics>)<italics>z</italics>)<space/><italics>x</italics>) (((<italics>x</italics><italics>y</italics>)<italics>z</italics>) (<italics>y</italics><space/><italics>z</italics>))</tablecell><tablecell>by<space/><bold>Dst<xhtml:sub>2</xhtml:sub></bold></tablecell></tablerow><tablerow><tablecell></tablecell><tablecell>=</tablecell><tablecell>(((<italics>x</italics><italics>y</italics>)<italics>z</italics>)<space/><italics>x</italics>) ((((<italics>x</italics><italics>y</italics>)<italics>z</italics>)<space/><italics>y</italics>) (((<italics>x</italics><italics>y</italics>)<italics>z</italics>)<space/><italics>z</italics>))</tablecell><tablecell>by<space/><bold>Dst<xhtml:sub>2</xhtml:sub></bold></tablecell></tablerow><tablerow><tablecell></tablecell><tablecell>=</tablecell><tablecell>(0 0) 0</tablecell><tablecell>by<space/><bold>H<xhtml:sub>1</xhtml:sub></bold>,<bold>I<xhtml:sub>1</xhtml:sub></bold>,<bold>J<xhtml:sub>1</xhtml:sub></bold></tablecell></tablerow><tablerow><tablecell></tablecell><tablecell>=</tablecell><tablecell>0</tablecell><tablecell>by<space/><bold>Idn<xhtml:sub>1</xhtml:sub></bold></tablecell></tablerow></table></tablecell><tablecell><bold>L<xhtml:sub>2</xhtml:sub></bold><space/>&amp;nbsp; [dual] &amp;nbsp; (<italics>x</italics><space/>(<italics>y</italics><space/><italics>z</italics>)) ((<italics>x</italics><space/><italics>y</italics>)<space/><italics>z</italics>) = 1</tablecell></tablerow><tablerow valign="top"><tablecell><table align="left" class="collapsible collapsed" style="text-align:left"><tablerow><tablehead><bold>Ass<xhtml:sub>1</xhtml:sub></bold></tablehead><tablehead></tablehead><tablehead><italics>x</italics><space/>(<italics>y</italics><space/><italics>z</italics>) = (<italics>x</italics><space/><italics>y</italics>)<space/><italics>z</italics></tablehead></tablerow><tablerow><tablecell>Proof:</tablecell><tablecell></tablecell><tablecell>by<space/><bold>K<xhtml:sub>1</xhtml:sub></bold>,<space/><bold>L<xhtml:sub>1</xhtml:sub></bold>,<space/><bold>UNg</bold>,<space/><bold>DNg</bold></tablecell></tablerow></table></tablecell><tablecell><bold>Ass<xhtml:sub>2</xhtml:sub></bold><space/>&amp;nbsp; [dual] &amp;nbsp;<space/><italics>x</italics><space/>(<italics>y</italics><space/><italics>z</italics>) = (<italics>x</italics><space/><italics>y</italics>)<space/><italics>z</italics></tablecell></tablerow><tablerow><tablecell colspan="2"><table align="left" class="collapsible" style="text-align:left"><tablerow><tablehead colspan="2">Abbreviations</tablehead></tablerow><tablerow><tablecell><bold>UId</bold></tablecell><tablecell>Unique Identity</tablecell></tablerow><tablerow><tablecell><bold>Idm</bold></tablecell><tablecell><link><target>Idempotence</target></link></tablecell></tablerow><tablerow><tablecell><bold>Bnd</bold></tablecell><tablecell><link><target>Bounded lattice</target><part>Boundaries</part></link></tablecell></tablerow><tablerow><tablecell><bold>Abs</bold></tablecell><tablecell><link><target>Absorption law</target></link></tablecell></tablerow><tablerow><tablecell><bold>UNg</bold></tablecell><tablecell>Unique Negation</tablecell></tablerow><tablerow><tablecell><bold>DNg</bold></tablecell><tablecell><link><target>Double negation</target></link></tablecell></tablerow><tablerow><tablecell><bold>DMg</bold></tablecell><tablecell><link><target>De Morgan's Law</target></link></tablecell></tablerow><tablerow><tablecell><bold>Ass</bold></tablecell><tablecell><link><target>Associativity</target></link></tablecell></tablerow></table></tablecell></tablerow></table><table align="right" class="wikitable collapsible collapsed" style="text-align:left"><tablerow><tablehead colspan="4"><bold>Huntington 1904 Boolean algebra axioms</bold></tablehead></tablerow><tablerow valign="top"><tablecell><bold>Idn<xhtml:sub>1</xhtml:sub></bold></tablecell><tablecell><italics>x</italics><space/>0 =<space/><italics>x</italics></tablecell><tablecell><bold>Idn<xhtml:sub>2</xhtml:sub></bold></tablecell><tablecell><italics>x</italics><space/>1 =<space/><italics>x</italics></tablecell></tablerow><tablerow valign="top"><tablecell><bold>Cmm<xhtml:sub>1</xhtml:sub></bold></tablecell><tablecell><italics>x</italics><space/><italics>y</italics><space/>=<space/><italics>y</italics><space/><italics>x</italics></tablecell><tablecell><bold>Cmm<xhtml:sub>2</xhtml:sub></bold></tablecell><tablecell><italics>x</italics><space/><italics>y</italics><space/>=<space/><italics>y</italics><space/><italics>x</italics></tablecell></tablerow><tablerow valign="top"><tablecell><bold>Dst<xhtml:sub>1</xhtml:sub></bold></tablecell><tablecell><italics>x</italics><space/>(<italics>y</italics><italics>z</italics>) = (<italics>x</italics><italics>y</italics>) (<italics>x</italics><italics>z</italics>)</tablecell><tablecell><bold>Dst<xhtml:sub>2</xhtml:sub></bold></tablecell><tablecell><italics>x</italics><space/>(<italics>y</italics><italics>z</italics>) = (<italics>x</italics><italics>y</italics>) (<italics>x</italics><italics>z</italics>)</tablecell></tablerow><tablerow valign="top"><tablecell><bold>Cpl<xhtml:sub>1</xhtml:sub></bold></tablecell><tablecell><italics>x</italics><space/><italics>x</italics><space/>= 1</tablecell><tablecell><bold>Cpl<xhtml:sub>2</xhtml:sub></bold></tablecell><tablecell><italics>x</italics><space/><italics>x</italics><space/>= 0</tablecell></tablerow><tablerow><tablecell colspan="4"><table align="left" class="collapsible" style="text-align:left"><tablerow><tablehead colspan="2">Abbreviations</tablehead></tablerow><tablerow><tablecell><bold>Idn</bold></tablecell><tablecell><link><target>Identity element</target><part>Identity</part></link></tablecell></tablerow><tablerow><tablecell><bold>Cmm</bold></tablecell><tablecell><link><target>Commutativity</target></link></tablecell></tablerow><tablerow><tablecell><bold>Dst</bold></tablecell><tablecell><link><target>Distributivity</target></link></tablecell></tablerow><tablerow><tablecell><bold>Cpl</bold></tablecell><tablecell><link><target>Complemented lattice</target><part>Complements</part></link></tablecell></tablerow></table></tablecell></tablerow></table><paragraph>The first axiomatization of Boolean lattices/algebras in general was given by<space/><link><target>Alfred North Whitehead</target></link><space/>in 1898.<extension extension_name='ref' name="PadmanabhanRudeanu2008">Padmanabhan,<space/><link type='external' href='http://books.google.com/books?id=JlXSlpmlSv4C&amp;amp;pg=PA73#v=onepage&amp;amp;q&amp;amp;f=false'>p. 73</link></extension><extension extension_name='ref'>Whitehead, 1898, p.37</extension>It included the<space/><link><target>#Definition</target><part>above axioms</part></link><space/>and additionally<space/><italics>x</italics>1=1 and<space/><italics>x</italics>0=0.In 1904, the American mathematician<space/><link><target>Edward V. Huntington</target></link><space/>(18741952) gave probably the most parsimonious axiomatization based on , , , even proving the associativity laws (see box).<extension extension_name='ref'>Huntington, 1904, p.292-293, (first of several axiomatizations by Huntington)</extension>He also proved that these axioms are<space/><link><target>Independence (mathematical logic)</target><part>independent</part></link><space/>of each other.<extension extension_name='ref'>Huntington, 1904, p.296</extension>In 1933, Huntington set out the following elegant axiomatization for Boolean algebra. It requires just one binary operation + and a<space/><link><target>unary functional symbol</target></link><space/><italics>n</italics>, to be read as 'complement', which satisfy the following laws:</paragraph><list type='numbered'><listitem><italics>Commutativity</italics>:<space/><italics>x</italics><space/>+<space/><italics>y</italics><space/>=<space/><italics>y</italics><space/>+<space/><italics>x</italics>.</listitem><listitem><italics>Associativity</italics>: (<italics>x</italics><space/>+<space/><italics>y</italics>) +<space/><italics>z</italics><space/>=<space/><italics>x</italics><space/>+ (<italics>y</italics><space/>+<space/><italics>z</italics>).</listitem><listitem><italics>Huntington equation</italics>:<space/><italics>n</italics>(<italics>n</italics>(<italics>x</italics>) +<space/><italics>y</italics>) +<space/><italics>n</italics>(<italics>n</italics>(<italics>x</italics>) +<space/><italics>n</italics>(<italics>y</italics>)) =<space/><italics>x</italics>.</listitem></list><paragraph><link><target>Herbert Robbins</target></link><space/>immediately asked: If the Huntington equation is replaced with its dual, to wit:</paragraph><list type='ident'><listitem>4.<space/><italics>Robbins Equation</italics>:<space/><italics>n</italics>(<italics>n</italics>(<italics>x</italics><space/>+<space/><italics>y</italics>) +<space/><italics>n</italics>(<italics>x</italics><space/>+<space/><italics>n</italics>(<italics>y</italics>))) =<space/><italics>x</italics>,</listitem></list><paragraph>do (1), (2), and (4) form a basis for Boolean algebra? Calling (1), (2), and (4) a<space/><italics>Robbins algebra</italics>, the question then becomes: Is every Robbins algebra a Boolean algebra? This question (which came to be known as the<space/><link><target>Robbins conjecture</target></link>) remained open for decades, and became a favorite question of<space/><link><target>Alfred Tarski</target></link><space/>and his students. In 1996,<space/><link><target>William McCune</target></link><space/>at<space/><link><target>Argonne National Laboratory</target></link>, building on earlier work by Larry Wos, Steve Winker, and Bob Veroff, answered Robbins's question in the affirmative: Every Robbins algebra is a Boolean algebra. Crucial to McCune's proof was the<space/><link><target>automated reasoning program</target></link><space/><link><target>EQP</target></link><space/>he designed. For a simplification of McCune's proof, see Dahn (1998).</paragraph><paragraph><template><target>clear</target></template></paragraph><heading level='2'>Generalizations</heading><table style="float:right"><tablerow><tablecell><template><target>Algebraic structures</target><arg>Lattice</arg></template></tablecell></tablerow></table><paragraph>Removing the requirement of existence of a unit from the axioms of Boolean algebra yields &quot;generalized Boolean algebras&quot;. Formally, a<space/><link><target>distributive lattice</target></link><space/><italics>B</italics><space/>is a generalized Boolean lattice, if it has a smallest element 0 and for any elements<space/><italics>a</italics><space/>and<space/><italics>b</italics><space/>in<space/><italics>B</italics><space/>such that<space/><italics>a</italics><space/><italics>b</italics>, there exists an element<space/><italics>x</italics><space/>such that a x = 0 and a x = b. Defining a b as the unique<space/><italics>x</italics><space/>such that (a b) x = a and (a b) x = 0, we say that the structure (B,,,,0) is a<space/><italics>generalized Boolean algebra</italics>, while (B,,0) is a<space/><italics>generalized Boolean<space/><link><target>semilattice</target></link></italics>. Generalized Boolean lattices are exactly the<space/><link><target>Ideal (order theory)</target><part>ideals</part></link><space/>of Boolean lattices.</paragraph><paragraph>A structure that satisfies all axioms for Boolean algebras except the two distributivity axioms is called an<space/><link><target>orthocomplemented lattice</target></link>. Orthocomplemented lattices arise naturally in<space/><link><target>quantum logic</target></link><space/>as lattices of closed subspaces for separable<space/><link><target>Hilbert space</target><trail>s</trail></link>.</paragraph><heading level='2'>See also</heading><paragraph><template><target>col-begin</target></template><template><target>col-break</target></template></paragraph><list type='bullet'><listitem><link><target>List of Boolean algebra topics</target></link></listitem><listitem><link><target>Boolean domain</target></link></listitem><listitem><link><target>Boolean function</target></link></listitem><listitem><link><target>Boolean logic</target></link></listitem><listitem><link><target>Boolean ring</target></link></listitem><listitem><link><target>Boolean-valued function</target></link></listitem><listitem><link><target>Canonical form (Boolean algebra)</target></link></listitem><listitem><link><target>Complete Boolean algebra</target></link></listitem></list><paragraph><template><target>col-break</target></template></paragraph><list type='bullet'><listitem><link><target>De Morgan's laws</target></link></listitem><listitem><link><target>Finitary boolean function</target></link></listitem><listitem><link><target>Forcing (mathematics)</target></link></listitem><listitem><link><target>Free Boolean algebra</target></link></listitem><listitem><link><target>Heyting algebra</target></link></listitem><listitem><link><target>Hypercube graph</target></link></listitem><listitem><link><target>Karnaugh map</target></link></listitem><listitem><link><target>Laws of Form</target></link></listitem></list><paragraph><template><target>col-break</target></template></paragraph><list type='bullet'><listitem><link><target>Logic gate</target></link></listitem><listitem><link><target>Logical graph</target></link></listitem><listitem><link><target>Logical matrix</target></link></listitem><listitem><link><target>Propositional logic</target></link></listitem><listitem><link><target>QuineMcCluskey algorithm</target></link></listitem><listitem><link><target>Two-element Boolean algebra</target></link></listitem><listitem><link><target>Venn diagram</target></link></listitem><listitem><link><target>Conditional event algebra</target></link></listitem></list><paragraph><template><target>col-end</target></template></paragraph><heading level='2'>Notes</heading><paragraph><template><target>reflist</target></template></paragraph><heading level='2'>References</heading><list type='bullet'><listitem><template><target>citation</target><arg name="last1"><space/>Brown
<space/></arg><arg name="first1"><space/>Stephen
<space/></arg><arg name="last2"><space/>Vranesic
<space/></arg><arg name="first2"><space/>Zvonko
<space/></arg><arg name="year"><space/>2002
<space/></arg><arg name="title"><space/>Fundamentals of Digital Logic with VHDL Design
<space/></arg><arg name="edition"><space/>2nd
<space/></arg><arg name="publisher"><space/>[[McGraw-Hill|McGraw–Hill]]
<space/></arg><arg name="isbn"><space/>978-0-07-249938-4</arg></template>. See Section 2.5.</listitem><listitem><template><target>cite journal</target><arg name="author">A. Boudet, J.P. Jouannaud, M. Schmidt-Schauß
<space/></arg><arg name="title">Unification in Boolean Rings and Abelian Groups
<space/></arg><arg name="journal">Journal of Symbolic Computation
<space/></arg><arg name="year">1989
<space/></arg><arg name="volume">8
<space/></arg><arg name="pages">449–477
<space/></arg><arg name="url">http://www.sciencedirect.com/science/article/pii/S0747717189800549/pdf?md5</arg><arg name="doi">10.1016/s0747-7171(89)80054-9</arg></template></listitem><listitem><template><target>citation</target><arg name="title">Basic Algebra: Groups, Rings, and Fields</arg><arg name="first">Paul M.</arg><arg name="last">Cohn</arg><arg name="publisher">	Springer</arg><arg name="year">2003</arg><arg name="isbn">9781852335878</arg><arg name="pages">51, 70–81</arg></template></listitem><listitem><template><target>citation</target><arg name="last1"><space/>Cori
<space/></arg><arg name="first1"><space/>Rene
<space/></arg><arg name="last2"><space/>Lascar
<space/></arg><arg name="first2"><space/>Daniel
<space/></arg><arg name="year"><space/>2000
<space/></arg><arg name="title"><space/>Mathematical Logic: A Course with Exercises
<space/></arg><arg name="publisher"><space/>[[Oxford University Press]]
<space/></arg><arg name="isbn"><space/>978-0-19-850048-3</arg></template>. See Chapter 2.</listitem><listitem><template><target>citation</target><arg name="last"><space/>Dahn
<space/></arg><arg name="first"><space/>B. I.
<space/></arg><arg name="year"><space/>1998
<space/></arg><arg name="title"><space/>Robbins Algebras are Boolean: A Revision of McCune's Computer-Generated Solution of the Robbins Problem
<space/></arg><arg name="journal"><space/>Journal of Algebra
<space/></arg><arg name="volume"><space/>208
<space/></arg><arg name="pages"><space/>526–532
<space/></arg><arg name="doi"><space/>10.1006/jabr.1998.7467
<space/></arg><arg name="issue"><space/>2</arg></template>.</listitem><listitem><template><target>cite book</target><arg name="author">B.A. Davey, H.A. Priestley
<space/></arg><arg name="title">Introduction to Lattices and Order
<space/></arg><arg name="year">1990
<space/></arg><arg name="publisher">Cambridge University Press
<space/></arg><arg name="series">Cambridge Mathematical Textbooks</arg></template></listitem><listitem><template><target>citation</target><arg name="last1"><space/>Givant
<space/></arg><arg name="first1"><space/>Steven
<space/></arg><arg name="first2"><space/>Paul
<space/></arg><arg name="last2"><space/>Halmos
<space/></arg><arg name="year"><space/>2009
<space/></arg><arg name="title"><space/>Introduction to Boolean Algebras
<space/></arg><arg name="series"><space/>[[Undergraduate Texts in Mathematics]]<space/></arg><arg name="publisher"><space/>[[Springer Science+Business Media|Springer]]
<space/></arg><arg name="isbn"><space/>978-0-387-40293-2</arg></template>.</listitem><listitem><template><target>citation</target><arg name="authorlink"><space/>Paul Halmos
<space/></arg><arg name="last"><space/>Halmos
<space/></arg><arg name="first"><space/>Paul
<space/></arg><arg name="year"><space/>1963
<space/></arg><arg name="title"><space/>Lectures on Boolean Algebras
<space/></arg><arg name="publisher"><space/>Van Nostrand
<space/></arg><arg name="isbn"><space/>978-0-387-90094-0</arg></template>.</listitem><listitem><template><target>citation</target><arg name="authorlink1"><space/>Paul Halmos
<space/></arg><arg name="last1"><space/>Halmos
<space/></arg><arg name="first1"><space/>Paul
<space/></arg><arg name="first2"><space/>Steven
<space/></arg><arg name="last2"><space/>Givant
<space/></arg><arg name="year"><space/>1998
<space/></arg><arg name="title"><space/>Logic as Algebra
<space/></arg><arg name="series"><space/>Dolciani Mathematical Expositions<space/></arg><arg name="volume"><space/>21<space/></arg><arg name="publisher"><space/>[[Mathematical Association of America]]
<space/></arg><arg name="isbn"><space/>978-0-88385-327-6</arg></template>.</listitem><listitem><template><target>cite journal</target><arg name="author">Hsiang, Jieh
<space/></arg><arg name="title">Refutational Theorem Proving Using Term Rewriting Systems
<space/></arg><arg name="journal">AI
<space/></arg><arg name="year">1985
<space/></arg><arg name="volume">25
<space/></arg><arg name="pages">255–300
<space/></arg><arg name="url">http://www.researchgate.net/publication/223327412_Refutational_theorem_proving_using_term-rewriting_systems/file/60b7d5193580e500f1.pdf
<space/></arg><arg name="doi">10.1016/0004-3702(85)90074-8</arg></template></listitem><listitem><template><target>cite journal</target><arg name="authorlink">Edward V. Huntington
<space/></arg><arg name="author">Edward V. Huntington
<space/></arg><arg name="title">Sets of Independent Postulates for the Algebra of Logic
<space/></arg><arg name="journal">These Transactions
<space/></arg><arg name="year">1904
<space/></arg><arg name="volume">5
<space/></arg><arg name="pages">288–309
<space/></arg><arg name="url">http://www.jstor.org/stable/pdfplus/1986459.pdf
<space/></arg><arg name="doi">10.1090/s0002-9947-1904-1500675-4</arg></template></listitem><listitem><template><target>citation</target><arg name="authorlink"><space/>Edward Vermilye Huntington
<space/></arg><arg name="last"><space/>Huntington
<space/></arg><arg name="first"><space/>E. V.
<space/></arg><arg name="year"><space/>1933
<space/></arg><arg name="title"><space/>New sets of independent postulates for the algebra of logic
<space/></arg><arg name="journal"><space/>[[Transactions of the American Mathematical Society]]
<space/></arg><arg name="volume"><space/>35
<space/></arg><arg name="pages"><space/>274–304
<space/></arg><arg name="doi"><space/>10.2307/1989325
<space/></arg><arg name="issue"><space/>1
<space/></arg><arg name="publisher"><space/>American Mathematical Society
<space/></arg><arg name="url"><space/>http://www.ams.org/journals/tran/1933-035-01/S0002-9947-1933-1501684-X/S0002-9947-1933-1501684-X.pdf
<space/></arg><arg name="jstor"><space/>1989325</arg></template>.</listitem><listitem><template><target>citation</target><arg name="authorlink"><space/>Edward Vermilye Huntington
<space/></arg><arg name="last"><space/>Huntington
<space/></arg><arg name="first"><space/>E. V.
<space/></arg><arg name="year"><space/>1933
<space/></arg><arg name="title"><space/>Boolean algebra: A correction
<space/></arg><arg name="journal"><space/>[[Transactions of the American Mathematical Society]]
<space/></arg><arg name="volume"><space/>35
<space/></arg><arg name="pages"><space/>557–558
<space/></arg><arg name="doi"><space/>10.2307/1989783
<space/></arg><arg name="issue"><space/>2
<space/></arg><arg name="publisher"><space/>American Mathematical Society
<space/></arg><arg name="jstor"><space/>1989783</arg></template>.</listitem><listitem><template><target>citation</target><arg name="last"><space/>Mendelson
<space/></arg><arg name="first"><space/>Elliott
<space/></arg><arg name="year"><space/>1970
<space/></arg><arg name="title"><space/>Boolean Algebra and Switching Circuits
<space/></arg><arg name="series"><space/>Schaum's Outline Series in Mathematics<space/></arg><arg name="publisher"><space/>[[McGraw-Hill|McGraw–Hill]]
<space/></arg><arg name="isbn"><space/>978-0-07-041460-0</arg></template>.</listitem><listitem><template><target>citation</target><arg name="editor1-last"><space/>Monk
<space/></arg><arg name="editor1-first"><space/>J. Donald
<space/></arg><arg name="editor2-first"><space/>R.
<space/></arg><arg name="editor2-last"><space/>Bonnet
<space/></arg><arg name="year"><space/>1989
<space/></arg><arg name="title"><space/>Handbook of Boolean Algebras
<space/></arg><arg name="publisher"><space/>[[Elsevier|North-Holland]]
<space/></arg><arg name="isbn"><space/>978-0-444-87291-3</arg></template>. In 3 volumes. (Vol.1:ISBN 978-0-444-70261-6, Vol.2:ISBN 978-0-444-87152-7, Vol.3:ISBN 978-0-444-87153-4)</listitem><listitem><template><target>citation</target><arg name="last1"><space/>Padmanabhan
<space/></arg><arg name="first1"><space/>Ranganathan
<space/></arg><arg name="last2"><space/>Rudeanu
<space/></arg><arg name="first2"><space/>Sergiu
<space/></arg><arg name="year"><space/>2008
<space/></arg><arg name="title"><space/>Axioms for lattices and boolean algebras
<space/></arg><arg name="publisher"><space/>World Scientific
<space/></arg><arg name="isbn"><space/>978-981-283-454-6</arg></template>.</listitem><listitem><template><target>citation</target><arg name="authorlink"><space/>Roman Sikorski
<space/></arg><arg name="last"><space/>Sikorski
<space/></arg><arg name="first"><space/>Roman
<space/></arg><arg name="year"><space/>1966
<space/></arg><arg name="title"><space/>Boolean Algebras
<space/></arg><arg name="series"><space/>Ergebnisse der Mathematik und ihrer Grenzgebiete
<space/></arg><arg name="publisher"><space/>[[Springer Verlag]]
<space/></arg><arg name="ref"><space/>Sikorski1966BooleanAlgebras
<space/></arg></template>.</listitem><listitem><template><target>citation</target><arg name="last"><space/>Stoll
<space/></arg><arg name="first"><space/>R. R.
<space/></arg><arg name="year"><space/>1963
<space/></arg><arg name="title"><space/>Set Theory and Logic
<space/></arg><arg name="publisher"><space/>W. H. Freeman
<space/></arg><arg name="isbn"><space/>978-0-486-63829-4</arg></template>. Reprinted by<space/><link><target>Dover Publications</target></link>, 1979.</listitem><listitem><template><target>cite journal</target><arg name="authorlink">Marshall H. Stone
<space/></arg><arg name="author">Marshall H. Stone
<space/></arg><arg name="title">The Theory of Representations for Boolean Algebra
<space/></arg><arg name="journal">Trans. AMS
<space/></arg><arg name="year">1936
<space/></arg><arg name="volume">40
<space/></arg><arg name="pages">37–111</arg></template></listitem><listitem><template><target>cite book</target><arg name="authorlink">A.N. Whitehead
<space/></arg><arg name="author">A.N. Whitehead
<space/></arg><arg name="title">A Treatise on Universal Algebra
<space/></arg><arg name="year">1898
<space/></arg><arg name="publisher">Cambridge University Press
<space/></arg><arg name="isbn">1-4297-0032-7
<space/></arg><arg name="url">http://projecteuclid.org/euclid.chmm/1263316509</arg></template></listitem></list><heading level='2'>External links</heading><list type='bullet'><listitem><template><target>springer</target><arg name="title">Boolean algebra</arg><arg name="id">p/b016920</arg></template></listitem><listitem><link type='external' href='http://www.allaboutcircuits.com/vol_4/chpt_7/1.html'>Boolean Algebra</link><space/>from AllAboutCircuits</listitem><listitem><link><target>Stanford Encyclopedia of Philosophy</target></link>: &quot;<link type='external' href='http://plato.stanford.edu/entries/boolalg-math/'>The Mathematics of Boolean Algebra,</link>&quot; by J. Donald Monk.</listitem><listitem>McCune W., 1997.<space/><italics><link type='external' href='http://www.cs.unm.edu/~mccune/papers/robbins/'>Robbins Algebras Are Boolean</link></italics><space/>JAR 19(3), 263276</listitem><listitem><link type='external' href='http://demonstrations.wolfram.com/BooleanAlgebra/'>&quot;Boolean Algebra&quot;</link><space/>by<space/><link><target>Eric W. Weisstein</target></link>,<space/><link><target>Wolfram Demonstrations Project</target></link>, 2007.</listitem></list><paragraph>A monograph available free online:</paragraph><list type='bullet'><listitem>Burris, Stanley N.; Sankappanavar, H. P., 1981.<space/><italics><link type='external' href='http://www.thoralf.uwaterloo.ca/htdocs/ualg.html'>A Course in Universal Algebra.</link></italics><space/>Springer-Verlag. ISBN 3-540-90578-2.</listitem><listitem><template><target>MathWorld</target><arg name="urlname">BooleanAlgebra<space/></arg><arg name="title">Boolean Algebra</arg></template></listitem></list><paragraph><template><target>DEFAULTSORT:Boolean Algebra (Structure)</target></template><link><target>Category:Boolean algebra</target><part></part></link><link><target>Category:Algebraic structures</target></link><link><target>Category:Ockham algebras</target></link></paragraph></article>