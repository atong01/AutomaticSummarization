<article title='Associative_property'><paragraph><template><target>About</target><arg>associativity in mathematics</arg><arg>associativity in the central processing unit memory cache</arg><arg>CPU cache</arg><arg>associativity in programming languages</arg><arg>operator associativity</arg></template><template><target>redirect2</target><arg>Associative</arg><arg>non-associative</arg><arg>associative and non-associative learning</arg><arg>Learning#Types</arg></template><template><target>Refimprove</target><arg name="date">June 2009</arg><arg name="bot">yes</arg></template><template><target>Transformation rules</target></template></paragraph><paragraph>In<space/><link><target>mathematics</target></link>, the<space/><bold>associative property</bold><extension extension_name='ref'><template><target>cite book</target><arg name="author">Thomas W. Hungerford
</arg><arg name="year">1974<space/></arg><arg name="edition">1st
</arg><arg name="title">Algebra
</arg><arg name="page">24
</arg><arg name="publisher">[[Springer Science+Business Media|Springer]]
</arg><arg name="isbn">0387905189
</arg><arg name="quote">Definition 1.1 (i) a(bc)<space/></arg></template></extension><space/>is a property of some<space/><link><target>binary operation</target><trail>s</trail></link>. In<space/><link><target>propositional logic</target></link>,<space/><bold>associativity</bold><space/>is a<space/><link><target>validity</target><part>valid</part></link><space/><link><target>rule of replacement</target></link><space/>for<space/><link><target>well-formed formula</target><part>expressions</part></link><space/>in<space/><link><target>Formal proof</target><part>logical proofs</part></link>.</paragraph><paragraph>Within an expression containing two or more occurrences in a row of the same associative operator, the order in which the<space/><link><target>Operation (mathematics)</target><part>operations</part></link><space/>are performed does not matter as long as the sequence of the<space/><link><target>operand</target><trail>s</trail></link><space/>is not changed. That is, rearranging the<space/><link><target>Bracket#Parentheses ( )</target><part>parentheses</part></link><space/>in such an expression will not change its value. Consider the following equations:</paragraph><list type='ident'><listitem><extension extension_name='math'>(2 + 3) + 4 = 2 + (3 + 4) = 9 \,</extension></listitem></list><list type='ident'><listitem><extension extension_name='math'>2 \times (3 \times 4) = (2 \times 3) \times 4 = 24 .</extension></listitem></list><paragraph>Even though the parentheses were rearranged, the values of the expressions were not altered. Since this holds true when performing addition and multiplication on any<space/><link><target>real number</target><trail>s</trail></link>, it can be said that &quot;addition and multiplication of real numbers are associative operations&quot;.</paragraph><paragraph>Associativity is not to be confused with<space/><link><target>commutativity</target></link>, which addresses whether<space/><template><target>nowrap</target><arg name="1">''a'' Ã— ''b''<space/></arg></template>.</paragraph><paragraph>Associative operations are abundant in mathematics; in fact, many<space/><link><target>algebraic structure</target><trail>s</trail></link><space/>(such as<space/><link><target>semigroup (mathematics)</target><part>semigroups</part></link><space/>and<space/><link><target>category (mathematics)</target><part>categories</part></link>) explicitly require their binary operations to be associative.</paragraph><paragraph>However, many important and interesting operations are non-associative; some examples include<space/><link><target>subtraction</target></link>,<space/><link><target>exponentiation</target></link><space/>and the<space/><link><target>vector cross product</target></link>. In contrast to the theoretical counterpart, the addition of<space/><link><target>floating point numbers</target></link><space/>in computer science is not associative, and is an important source of rounding error.</paragraph><heading level='2'>Definition</heading><paragraph><link><target>File:Semigroup_associative.svg</target><part>thumbnail</part><part>A binary operation on the set ''S'' is associative when<space/><link><target>Commutative diagram</target><part>this diagram commutes</part></link>. That is, when the two paths from ''S''''S''''S'' to ''S''<space/><link><target>Function composition</target><part>compose</part></link><space/>to the same function from ''S''''S''''S'' to ''S''.</part></link>Formally, a<space/><link><target>binary operation</target></link><space/>on a<space/><link><target>Set (mathematics)</target><part>set</part></link><space/><italics>S</italics><space/>is called<space/><bold>associative</bold><space/>if it satisfies the<space/><bold>associative law</bold>:</paragraph><list type='ident'><listitem>(<italics>x</italics><space/><italics>y</italics>)<space/><italics>z</italics><space/>=<space/><italics>x</italics><space/>(<italics>y</italics><space/><italics>z</italics>) for all<space/><italics>x</italics>,<space/><italics>y</italics>,<space/><italics>z</italics><space/>in<space/><italics>S</italics>.</listitem></list><paragraph>Here, is used to replace the symbol of the operation, which may be any symbol, and even the absence of symbol like for the<space/><link><target>multiplication</target></link>.</paragraph><list type='ident'><listitem>(<italics>xy</italics>)<italics>z</italics><space/>=<space/><italics>x</italics>(<italics>yz</italics>) =<space/><italics>xyz</italics><space/>for all<space/><italics>x</italics>,<space/><italics>y</italics>,<space/><italics>z</italics><space/>in<space/><italics>S</italics>.</listitem></list><paragraph>The associative law can also be expressed in functional notation thus:<space/><template><target>nowrap</target><arg name="1">''f''(''f''(''x'', ''y''), ''z'')<space/></arg></template>.</paragraph><heading level='2'>Generalized associative law</heading><paragraph><link><target>Image:Tamari lattice.svg</target><part>thumb</part><part>250px</part><part>In the absence of the associative property, five factors ''a, b, c, d, e'' result in a<space/><link><target>Tamari lattice</target></link><space/>of order four, possibly different products.</part></link>If a binary operation is associative, repeated application of the operation produces the same result regardless how valid pairs of parenthesis are inserted in the expression.<extension extension_name='ref'><template><target>cite book</target><arg name="last">Durbin<space/></arg><arg name="first">John R.<space/></arg><arg name="title">Modern Algebra: an Introduction<space/></arg><arg name="year">1992<space/></arg><arg name="publisher">Wiley<space/></arg><arg name="location">New York<space/></arg><arg name="isbn">0-471-51001-7<space/></arg><arg name="page">78<space/></arg><arg name="url">http://www.wiley.com/WileyCDA/WileyTitle/productCd-EHEP000258.html<space/></arg><arg name="edition">3rd<space/></arg><arg name="quote">If<space/><math>a_1, a_2, \dots, a_n \,\, (n \ge 2)</math><space/>are elements of a set with an associative operation, then the product<space/><math>a_1 a_2 \dots a_n</math><space/>is unambiguous; this is, the same element will be obtained regardless of how parentheses are inserted in the product</arg></template></extension><space/>This is called the<space/><bold>generalized associative law</bold>. For instance, a product of four elements may be written in five possible ways:</paragraph><list type='numbered'><listitem>((ab)c)d</listitem><listitem>(ab)(cd)</listitem><listitem>(a(bc))d</listitem><listitem>a((bc)d)</listitem><listitem>a(b(cd))</listitem></list><paragraph>If the product operation is associative, the generalized associative law says that all these formulas will yield the same result, making the parenthesis unnecessary. Thus &quot;the&quot; product can be written unambiguously as</paragraph><list type='ident'><listitem>abcd.</listitem></list><paragraph>As the number of elements increases, the<space/><link><target>Catalan number#Applications in combinatorics</target><part>number of possible ways to insert parentheses</part></link><space/>grows quickly, but they remain unnecessary for disambiguation.</paragraph><heading level='2'>Examples</heading><paragraph><link><target>File:Associativity of real number addition.svg</target><part>thumb</part><part>The addition of real numbers is associative.</part></link>Some examples of associative operations include the following.</paragraph><list type='bullet'><listitem>The<space/><link><target>string concatenation</target><part>concatenation</part></link><space/>of the three strings<space/><xhtml:code>&quot;hello&quot;</xhtml:code>,<space/><xhtml:code>&quot; &quot;</xhtml:code>,<space/><xhtml:code>&quot;world&quot;</xhtml:code><space/>can be computed by concatenating the first two strings (giving<space/><xhtml:code>&quot;hello &quot;</xhtml:code>) and appending the third string (<xhtml:code>&quot;world&quot;</xhtml:code>), or by joining the second and third string (giving<space/><xhtml:code>&quot; world&quot;</xhtml:code>) and concatenating the first string (<xhtml:code>&quot;hello&quot;</xhtml:code>) with the result. The two methods produce the same result; string concatenation is associative (but not commutative).</listitem></list><list type='bullet'><listitem>In<space/><link><target>arithmetic</target></link>,<space/><link><target>addition</target></link><space/>and<space/><link><target>multiplication</target></link><space/>of<space/><link><target>real number</target><trail>s</trail></link><space/>are associative; i.e.,</listitem></list><list type='ident'><listitem><list type='ident'><listitem><extension extension_name='math'>
\left.
\begin{matrix}
(x+y)+z=x+(y+z)=x+y+z\quad
\\
(x\,y)z=x(y\,z)=x\,y\,z\qquad\qquad\qquad\quad\ \ \,
\end{matrix}
\right\}
\mbox{for all }x,y,z\in\mathbb{R}.
</extension></listitem></list></listitem><listitem>Because of associativity, the grouping parentheses can be omitted without ambiguity.</listitem></list><list type='bullet'><listitem>Addition and multiplication of<space/><link><target>complex number</target><trail>s</trail></link><space/>and<space/><link><target>quaternion</target><trail>s</trail></link><space/>are associative. Addition of<space/><link><target>octonion</target><trail>s</trail></link><space/>is also associative, but multiplication of octonions is non-associative.</listitem></list><list type='bullet'><listitem>The<space/><link><target>greatest common divisor</target></link><space/>and<space/><link><target>least common multiple</target></link><space/>functions act associatively.</listitem></list><list type='ident'><listitem><list type='ident'><listitem><extension extension_name='math'>

\left.
\begin{matrix}
\operatorname{gcd}(\operatorname{gcd}(x,y),z)=
\operatorname{gcd}(x,\operatorname{gcd}(y,z))=
\operatorname{gcd}(x,y,z)\ \quad
\\
\operatorname{lcm}(\operatorname{lcm}(x,y),z)=
\operatorname{lcm}(x,\operatorname{lcm}(y,z))=
\operatorname{lcm}(x,y,z)\quad
\end{matrix}
\right\}\mbox{ for all }x,y,z\in\mathbb{Z}.
</extension></listitem></list></listitem></list><list type='bullet'><listitem>Taking the<space/><link><target>intersection (set theory)</target><part>intersection</part></link><space/>or the<space/><link><target>union (set theory)</target><part>union</part></link><space/>of<space/><link><target>Set (mathematics)</target><part>sets</part></link>:</listitem></list><list type='ident'><listitem><list type='ident'><listitem><extension extension_name='math'>

\left.
\begin{matrix}
(A\cap B)\cap C=A\cap(B\cap C)=A\cap B\cap C\quad
\\
(A\cup B)\cup C=A\cup(B\cup C)=A\cup B\cup C\quad
\end{matrix}
\right\}\mbox{for all sets }A,B,C.
</extension></listitem></list></listitem></list><list type='bullet'><listitem>If<space/><italics>M</italics><space/>is some set and<space/><italics>S</italics><space/>denotes the set of all functions from<space/><italics>M</italics><space/>to<space/><italics>M</italics>, then the operation of<space/><link><target>functional composition</target></link><space/>on<space/><italics>S</italics><space/>is associative:</listitem></list><list type='ident'><listitem><list type='ident'><listitem><extension extension_name='math'>(f\circ g)\circ h=f\circ(g\circ h)=f\circ g\circ h\qquad\mbox{for all }f,g,h\in S.</extension></listitem></list></listitem></list><list type='bullet'><listitem>Slightly more generally, given four sets<space/><italics>M</italics>,<space/><italics>N</italics>,<space/><italics>P</italics><space/>and<space/><italics>Q</italics>, with<space/><italics>h</italics>:<space/><italics>M</italics><space/>to<space/><italics>N</italics>,<space/><italics>g</italics>:<space/><italics>N</italics><space/>to<space/><italics>P</italics>, and<space/><italics>f</italics>:<space/><italics>P</italics><space/>to<space/><italics>Q</italics>, then</listitem></list><list type='ident'><listitem><list type='ident'><listitem><extension extension_name='math'>(f\circ g)\circ h=f\circ(g\circ h)=f\circ g\circ h</extension></listitem></list></listitem></list><list type='ident'><listitem>as before. In short, composition of maps is always associative.</listitem></list><list type='bullet'><listitem>Consider a set with three elements, A, B, and C. The following operation:</listitem></list><list type='ident'><listitem><table class="wikitable" style="text-align:center"><tablerow><tablehead></tablehead><tablehead>A</tablehead><tablehead>B</tablehead><tablehead>C</tablehead></tablerow><tablerow><tablehead>A</tablehead><tablecell>A</tablecell><tablecell>A</tablecell><tablecell>A</tablecell></tablerow><tablerow><tablehead>B</tablehead><tablecell>A</tablecell><tablecell>B</tablecell><tablecell>C</tablecell></tablerow><tablerow><tablehead>C</tablehead><tablecell>A</tablecell><tablecell>A</tablecell><tablecell>A</tablecell></tablerow></table>:is associative. Thus, for example, A(BC)=(AB)C = A. This operation is not commutative.</listitem></list><list type='bullet'><listitem>Because<space/><link><target>Matrix (mathematics)</target><part>matrices</part></link><space/>represent<space/><link><target>Linear map</target><part>linear transformation</part></link><space/>functions, with<space/><link><target>matrix multiplication</target></link><space/>representing functional composition, one can immediately conclude that matrix multiplication is associative.</listitem></list><heading level='2'>Propositional logic</heading><heading level='3'>Rule of replacement</heading><paragraph>In standard truth-functional propositional logic,<space/><italics>association</italics>,<extension extension_name='ref'>Moore and Parker</extension><extension extension_name='ref'>Copi and Cohen</extension><space/>or<space/><italics>associativity</italics><extension extension_name='ref'>Hurley</extension><space/>are two<space/><link><target>validity</target><part>valid</part></link><space/><link><target>rule of replacement</target><part>rules of replacement</part></link>. The rules allow one to move parentheses in<space/><link><target>well-formed formula</target><part>logical expressions</part></link><space/>in<space/><link><target>formal proof</target><part>logical proofs</part></link>. The rules are:</paragraph><list type='ident'><listitem><extension extension_name='math'>(P \or (Q \or R)) \Leftrightarrow ((P \or Q) \or R)</extension></listitem></list><paragraph>and</paragraph><list type='ident'><listitem><extension extension_name='math'>(P \and (Q \and R)) \Leftrightarrow ((P \and Q) \and R),</extension></listitem></list><paragraph>where &quot;<extension extension_name='math'>\Leftrightarrow</extension>&quot; is a<space/><link><target>metalogic</target><trail>al</trail></link><space/><link><target>Symbol (formal)</target><part>symbol</part></link><space/>representing &quot;can be replaced in a<space/><link><target>Formal proof</target><part>proof</part></link><space/>with.&quot;</paragraph><heading level='3'>Truth functional connectives</heading><paragraph><italics>Associativity</italics><space/>is a property of some<space/><link><target>logical connective</target><trail>s</trail></link><space/>of truth-functional<space/><link><target>propositional logic</target></link>. The following<space/><link><target>logical equivalence</target><trail>s</trail></link><space/>demonstrate that associativity is a property of particular connectives. The following are truth-functional<space/><link><target>tautology (logic)</target><part>tautologies</part></link>.</paragraph><paragraph><bold>Associativity of disjunction</bold>:</paragraph><list type='ident'><listitem><extension extension_name='math'>((P \or Q) \or R) \leftrightarrow (P \or (Q \or R))</extension></listitem><listitem><extension extension_name='math'>(P \or (Q \or R)) \leftrightarrow ((P \or Q) \or R)</extension></listitem></list><paragraph><bold>Associativity of conjunction</bold>:</paragraph><list type='ident'><listitem><extension extension_name='math'>((P \and Q) \and R) \leftrightarrow (P \and (Q \and R))</extension></listitem><listitem><extension extension_name='math'>(P \and (Q \and R)) \leftrightarrow ((P \and Q) \and R)</extension></listitem></list><paragraph><bold>Associativity of equivalence</bold>:</paragraph><list type='ident'><listitem><extension extension_name='math'>((P \leftrightarrow Q) \leftrightarrow R) \leftrightarrow (P \leftrightarrow (Q \leftrightarrow R))</extension></listitem><listitem><extension extension_name='math'>(P \leftrightarrow (Q \leftrightarrow R)) \leftrightarrow ((P \leftrightarrow Q) \leftrightarrow R)</extension></listitem></list><heading level='2'>Non-associativity</heading><paragraph>A binary operation<space/><extension extension_name='math'>*</extension><space/>on a set<space/><italics>S</italics><space/>that does not satisfy the associative law is called<space/><bold>non-associative</bold>. Symbolically,</paragraph><list type='ident'><listitem><extension extension_name='math'>(x*y)*z\ne x*(y*z)\qquad\mbox{for some }x,y,z\in S.</extension></listitem></list><paragraph>For such an operation the order of evaluation<space/><italics>does</italics><space/>matter. For example:</paragraph><list type='bullet'><listitem><link><target>Subtraction</target></link></listitem></list><list type='ident'><listitem><extension extension_name='math'>
(5-3)-2 \, \ne \, 5-(3-2)
</extension></listitem></list><list type='bullet'><listitem><link><target>Division (mathematics)</target><part>Division</part></link></listitem></list><list type='ident'><listitem><extension extension_name='math'>
(4/2)/2 \, \ne \, 4/(2/2)
</extension></listitem></list><list type='bullet'><listitem><link><target>Exponentiation</target></link></listitem></list><list type='ident'><listitem><extension extension_name='math'>
2^{(1^2)} \, \ne \, (2^1)^2
</extension></listitem></list><paragraph>Also note that infinite sums are not generally associative, for example:</paragraph><list type='ident'><listitem><extension extension_name='math'>
(1-1)+(1-1)+(1-1)+(1-1)+(1-1)+(1-1)+\dots \, = \, 0
</extension></listitem></list><paragraph>whereas</paragraph><list type='ident'><listitem><extension extension_name='math'>
1+(-1+1)+(-1+1)+(-1+1)+(-1+1)+(-1+1)+(-1+\dots \, = \, 1
</extension></listitem></list><paragraph>The study of non-associative structures arises from reasons somewhat different from the mainstream of classical algebra. One area within<space/><link><target>non-associative algebra</target></link><space/>that has grown very large is that of<space/><link><target>Lie algebra</target><trail>s</trail></link>. There the associative law is replaced by the<space/><link><target>Jacobi identity</target></link>. Lie algebras abstract the essential nature of<space/><link><target>infinitesimal transformation</target><trail>s</trail></link>, and have become ubiquitous in mathematics.</paragraph><paragraph>There are other specific types of non-associative structures that have been studied in depth; these tend to come from some specific applications or areas such as<space/><link><target>combinatorial mathematics</target></link>. Other examples are<space/><link><target>Quasigroup</target></link>,<space/><link><target>Quasifield</target></link>,<space/><link><target>Non-associative ring</target></link>,<space/><link><target>Non-associative algebra</target></link><space/>and<space/><link><target>Commutative non-associative magmas</target></link>.</paragraph><heading level='3'>Nonassociativity of floating point calculation</heading><paragraph>In mathematics, addition and multiplication of real numbers is associative. By contrast, in computer science, the addition and multiplication of<space/><link><target>floating point</target></link><space/>numbers is<space/><italics>not</italics><space/>associative, as rounding errors are introduced when dissimilar-sized values are joined together.<extension extension_name='ref'>Knuth, Donald,<space/><link><target>The Art of Computer Programming</target></link>, Volume 3, section 4.2.2</extension></paragraph><paragraph>To illustrate this, consider a floating point representation with a 4-bit mantissa:<xhtml:br></xhtml:br>(1.000<xhtml:sub>2</xhtml:sub>2<xhtml:sup>0</xhtml:sup><space/>+1.000<xhtml:sub>2</xhtml:sub>2<xhtml:sup>0</xhtml:sup>) +1.000<xhtml:sub>2</xhtml:sub>2<xhtml:sup>4</xhtml:sup><space/>=1.000<xhtml:sub>2</xhtml:sub>2<xhtml:sup>1</xhtml:sup><space/>+1.000<xhtml:sub>2</xhtml:sub>2<xhtml:sup>4</xhtml:sup><space/>=1.00<template><target>fontcolor</target><arg>red</arg><arg>1</arg></template><xhtml:sub>2</xhtml:sub>2<xhtml:sup>4</xhtml:sup><xhtml:br></xhtml:br>1.000<xhtml:sub>2</xhtml:sub>2<xhtml:sup>0</xhtml:sup><space/>+(1.000<xhtml:sub>2</xhtml:sub>2<xhtml:sup>0</xhtml:sup><space/>+1.000<xhtml:sub>2</xhtml:sub>2<xhtml:sup>4</xhtml:sup>) =1.000<xhtml:sub>2</xhtml:sub>2<xhtml:sup>0</xhtml:sup><space/>+1.00<template><target>fontcolor</target><arg>red</arg><arg>0</arg></template><xhtml:sub>2</xhtml:sub>2<xhtml:sup>4</xhtml:sup><space/>=1.00<template><target>fontcolor</target><arg>red</arg><arg>0</arg></template><xhtml:sub>2</xhtml:sub>2<xhtml:sup>4</xhtml:sup></paragraph><paragraph>Even though most computers compute with a 24 or 53 bits of mantissa,<extension extension_name='ref'><template><target>Cite document</target><arg name="title">IEEE Standard for Floating-Point Arithmetic<space/></arg><arg name="author">IEEE Computer Society<space/></arg><arg name="date">August 29, 2008<space/></arg><arg name="publisher">IEEE<space/></arg><arg name="id">IEEE Std 754-2008<space/></arg><arg name="url">http://ieeexplore.ieee.org/servlet/opac?punumber</arg><arg name="doi">10.1109/IEEESTD.2008.4610935<space/></arg><arg name="ref">CITEREFIEEE_7542008<space/></arg><arg name="isbn">978-0-7381-5753-5</arg></template></extension><space/>this is an important source of rounding error, and approaches such as the<space/><link><target>Kahan Summation Algorithm</target></link><space/>are ways to minimise the errors. It can be especially problematic in parallel computing.<extension extension_name='ref'><template><target>Citation</target><arg name="last"><space/>Villa
</arg><arg name="first"><space/>Oreste
</arg><arg name="last2"><space/>ChavarrÃ­a-mir
</arg><arg name="first2"><space/>Daniel
</arg><arg name="last3"><space/>Gurumoorthi
</arg><arg name="first3"><space/>Vidhya
</arg><arg name="last4"><space/>MÃ¡rquez
</arg><arg name="first4"><space/>AndrÃ©s
</arg><arg name="last5"><space/>Krishnamoorthy
</arg><arg name="first5"><space/>Sriram
</arg><arg name="publication-date">
</arg><arg name="title"><space/>Effects of Floating-Point non-Associativity on Numerical Computations on Massively Multithreaded Systems
</arg><arg name="url">http://cass-mt.pnnl.gov/docs/pubs/pnnleffects_of_floating-pointpaper.pdf
</arg><arg name="accessdate"><space/>2014-04-08
</arg></template></extension><extension extension_name='ref'><template><target>Citation</target><arg name="last"><space/>Goldberg
</arg><arg name="first"><space/>David
</arg><arg name="publication-date">
</arg><arg name="title"><space/>What Every Computer Scientist Should Know About Floating Point Arithmetic
</arg><arg name="url">http://cass-mt.pnnl.gov/docs/pubs/pnnleffects_of_floating-pointpaper.pdf
</arg><arg name="accessdate"><space/>2014-04-08
</arg><arg name="journal"><space/>ACM Computing Surveys
</arg><arg name="volume"><space/>23
</arg><arg name="number"><space/>1
</arg><arg name="pages"><space/>5â€“48
</arg><arg name="doi">10.1145/103162.103163
</arg></template></extension></paragraph><heading level='3'>Notation for non-associative operations</heading><paragraph><template><target>main</target><arg>Operator associativity</arg></template></paragraph><paragraph>In general, parentheses must be used to indicate the<space/><link><target>order of operations</target><part>order of evaluation</part></link><space/>if a non-associative operation appears more than once in an expression. However,<space/><link><target>mathematician</target><trail>s</trail></link><space/>agree on a particular order of evaluation for several common non-associative operations. This is simply a notational convention to avoid parentheses.</paragraph><paragraph>A<space/><bold>left-associative</bold><space/>operation is a non-associative operation that is conventionally evaluated from left to right, i.e.,</paragraph><list type='ident'><listitem><extension extension_name='math'>
\left.
\begin{matrix}
x*y*z=(x*y)*z\qquad\qquad\quad\,
\\
w*x*y*z=((w*x)*y)*z\quad
\\
\mbox{etc.}\qquad\qquad\qquad\qquad\qquad\qquad\ \ \,
\end{matrix}
\right\}
\mbox{for all }w,x,y,z\in S
</extension></listitem></list><paragraph>while a<space/><bold>right-associative</bold><space/>operation is conventionally evaluated from right to left:</paragraph><list type='ident'><listitem><extension extension_name='math'>
\left.
\begin{matrix}
x*y*z=x*(y*z)\qquad\qquad\quad\,
\\
w*x*y*z=w*(x*(y*z))\quad
\\
\mbox{etc.}\qquad\qquad\qquad\qquad\qquad\qquad\ \ \,
\end{matrix}
\right\}
\mbox{for all }w,x,y,z\in S
</extension></listitem></list><paragraph>Both left-associative and right-associative operations occur. Left-associative operations include the following:</paragraph><list type='bullet'><listitem>Subtraction and division of real numbers:</listitem></list><list type='ident'><listitem><list type='ident'><listitem><extension extension_name='math'>x-y-z=(x-y)-z\qquad\mbox{for all }x,y,z\in\mathbb{R};</extension></listitem><listitem><extension extension_name='math'>x/y/z=(x/y)/z\qquad\qquad\quad\mbox{for all }x,y,z\in\mathbb{R}\mbox{ with }y\ne0,z\ne0.</extension></listitem></list></listitem></list><list type='bullet'><listitem>Function application:</listitem></list><list type='ident'><listitem><list type='ident'><listitem><extension extension_name='math'>(f \, x \, y) = ((f \, x) \, y)</extension></listitem></list></listitem><listitem>This notation can be motivated by the<space/><link><target>currying</target></link><space/>isomorphism.</listitem></list><paragraph>Right-associative operations include the following:</paragraph><list type='bullet'><listitem><link><target>Exponentiation</target></link><space/>of real numbers:</listitem></list><list type='ident'><listitem><list type='ident'><listitem><extension extension_name='math'>x^{y^z}=x^{(y^z)}.\,</extension></listitem></list></listitem></list><list type='ident'><listitem>The reason exponentiation is right-associative is that a repeated left-associative exponentiation operation would be less useful. Multiple appearances could (and would) be rewritten with multiplication:</listitem></list><list type='ident'><listitem><list type='ident'><listitem><extension extension_name='math'>(x^y)^z=x^{(yz)}.\,</extension></listitem></list></listitem></list><list type='bullet'><listitem><link><target>Function (mathematics)</target><part>Function definition</part></link></listitem></list><list type='ident'><listitem><list type='ident'><listitem><extension extension_name='math'>\mathbb{Z} \rarr \mathbb{Z} \rarr \mathbb{Z} = \mathbb{Z} \rarr (\mathbb{Z} \rarr \mathbb{Z})</extension></listitem><listitem><extension extension_name='math'>x \mapsto y \mapsto x - y = x \mapsto (y \mapsto x - y)</extension></listitem></list></listitem></list><list type='ident'><listitem>Using right-associative notation for these operations can be motivated by the<space/><link><target>Curry-Howard correspondence</target></link><space/>and by the<space/><link><target>currying</target></link><space/>isomorphism.</listitem></list><paragraph>Non-associative operations for which no conventional evaluation order is defined include the following.</paragraph><list type='bullet'><listitem>Taking the<space/><link><target>Cross product</target></link><space/>of three vectors:</listitem></list><list type='ident'><listitem><list type='ident'><listitem><extension extension_name='math'>\vec a \times (\vec b \times \vec c) \neq (\vec a \times \vec b ) \times \vec c \qquad \mbox{ for some } \vec a,\vec b,\vec c \in \mathbb{R}^3</extension></listitem></list></listitem></list><list type='bullet'><listitem>Taking the pairwise<space/><link><target>average</target></link><space/>of real numbers:</listitem></list><list type='ident'><listitem><list type='ident'><listitem><extension extension_name='math'>{(x+y)/2+z\over2}\ne{x+(y+z)/2\over2} \qquad \mbox{for all }x,y,z\in\mathbb{R} \mbox{ with }x\ne z.</extension></listitem></list></listitem></list><list type='bullet'><listitem>Taking the<space/><link><target>complement (set theory)</target><part>relative complement</part></link><space/>of sets<space/><extension extension_name='math'>(A\backslash B)\backslash C</extension><space/>is not the same as<space/><extension extension_name='math'>A\backslash (B\backslash C)</extension>. (Compare<space/><link><target>material nonimplication</target></link><space/>in logic.)</listitem></list><heading level='2'>See also</heading><paragraph><template><target>Wiktionary</target></template></paragraph><list type='bullet'><listitem><link><target>Light's associativity test</target></link></listitem><listitem>A<space/><link><target>semigroup</target></link><space/>is a set with a closed associative binary operation.</listitem><listitem><link><target>Commutativity</target></link><space/>and<space/><link><target>distributivity</target></link><space/>are two other frequently discussed properties of binary operations.</listitem><listitem><link><target>Power associativity</target></link>,<space/><link><target>alternativity</target></link><space/>and<space/><link><target>N-ary associativity</target></link><space/>are weak forms of associativity.</listitem></list><heading level='2'>References</heading><paragraph><template><target>reflist</target></template></paragraph><paragraph><link><target>Category:Abstract algebra</target></link><link><target>Category:Binary operations</target><part>*Associativity</part></link><link><target>Category:Elementary algebra</target></link><link><target>Category:Functional analysis</target></link><link><target>Category:Rules of inference</target></link></paragraph></article>