<article title='BQP'><paragraph><template><target>unsolved</target><arg>computer science</arg><arg>What is the relationship between '''BQP''' and '''NP'''?</arg></template><link><target>Image:BQP complexity class diagram.svg</target><part>thumb</part><part>The suspected relationship of '''BQP''' to other problem spaces<extension extension_name='ref'>Michael Nielsen and Isaac Chuang (2000).<space/><italics>Quantum Computation and Quantum Information</italics>. Cambridge: Cambridge University Press. ISBN 0-521-63503-9.</extension></part></link>In<space/><link><target>computational complexity theory</target></link>,<space/><bold>BQP</bold><space/>(bounded error quantum polynomial time) is the class of<space/><link><target>decision problems</target></link><space/>solvable by a<space/><link><target>quantum computer</target></link><space/>in<space/><link><target>polynomial time</target></link>, with an error probability of at most 1/3 for all instances. It is the quantum analogue of the complexity class<space/><bold><link><target>Bounded-error probabilistic polynomial</target><part>BPP</part></link></bold>.</paragraph><paragraph>In other words, there is an<space/><link><target>algorithm</target></link><space/>for a quantum computer (a<space/><link><target>quantum algorithm</target></link>) that solves the decision problem with<space/><italics>high</italics><space/>probability and is guaranteed to run in polynomial time. On any given run of the algorithm, it has a probability of at most 1/3 that it will give the wrong answer.</paragraph><paragraph>Similarly to other &quot;bounded error&quot; probabilistic classes the choice of 1/3 in the definition is arbitrary. We can run the algorithm a constant number of times and take a majority vote to achieve any desired probability of correctness less than 1, using the<space/><link><target>Chernoff bound</target></link>. Detailed analysis shows that the complexity class is unchanged by allowing error as high as 1/2<space/><italics>n</italics><xhtml:sup><italics>c</italics></xhtml:sup><space/>on the one hand, or requiring error as small as 2<xhtml:sup><italics>n<xhtml:sup>c</xhtml:sup></italics></xhtml:sup><space/>on the other hand, where<space/><italics>c</italics><space/>is any positive constant, and<space/><italics>n</italics><space/>is the length of input.</paragraph><heading level='2'>Definition</heading><paragraph><bold>BQP</bold><space/>can also be viewed as a bounded-error uniform family of<space/><link><target>quantum circuit</target><trail>s</trail></link>. A language<space/><italics>L</italics><space/>is in<space/><bold>BQP</bold><space/>if and only if there exists a<space/><link><target>Circuit_complexity#Polynomial-time_uniform</target><part>polynomial-time uniform</part></link><space/>family of quantum circuits<space/><extension extension_name='math'>\{Q_n:n \in \mathbb{N}\}</extension>, such that</paragraph><list type='bullet'><listitem>For all<space/><extension extension_name='math'>n \in \mathbb{N}</extension>,<space/><italics>Q<xhtml:sub>n</xhtml:sub></italics><space/>takes<space/><italics>n</italics><space/>qubits as input and outputs 1 bit</listitem><listitem>For all<space/><italics>x</italics><space/>in<space/><italics>L</italics>,<space/><extension extension_name='math'>\mathrm{Pr}(Q_{|x|}(x)=1)\geq \tfrac{2}{3}</extension></listitem><listitem>For all<space/><italics>x</italics><space/>not in<space/><italics>L</italics>,<space/><extension extension_name='math'>\mathrm{Pr}(Q_{|x|}(x)=0)\geq \tfrac{2}{3}</extension></listitem></list><heading level='2'>Quantum computation</heading><paragraph>The number of<space/><link><target>qubit</target><trail>s</trail></link><space/>in the computer is allowed to be a<space/><link><target>polynomial function</target></link><space/>of the instance size. For example, algorithms are known for factoring an<space/><italics>n</italics>-bit integer using just over 2<italics>n</italics><space/>qubits (<link><target>Shor's algorithm</target></link>).</paragraph><paragraph>Usually, computation on a quantum computer ends with a<space/><link><target>Measurement in quantum mechanics</target><part>measurement</part></link>. This leads to a<space/><link><target>Wavefunction collapse</target><part>collapse</part></link><space/>of quantum state to one of the<space/><link><target>Quantum state</target><part>basis states</part></link>. It can be said that the quantum state is measured to be in the correct state with high probability.</paragraph><paragraph>Quantum computers have gained widespread interest because some problems of practical interest are known to be in<space/><bold>BQP</bold>, but suspected to be outside<space/><bold>P</bold>. Some prominent examples are:</paragraph><list type='bullet'><listitem><link><target>Integer factorization</target></link><space/>(see<space/><link><target>Shor's algorithm</target></link>)<extension extension_name='ref' name="Shor"><link type='external' href='http://www.arxiv.org/abs/quant-ph/9508027'>arXiv:quant-ph/9508027v2 ''Polynomial-Time Algorithms for Prime Factorization and Discrete Logarithms on a Quantum Computer'', Peter W. Shor</link></extension></listitem><listitem><link><target>Discrete logarithm</target></link><extension extension_name='ref' name="Shor"></extension></listitem><listitem>Simulation of quantum systems (see<space/><link><target>universal quantum simulator</target></link>)</listitem><listitem>Computing the<space/><link><target>Jones polynomial</target></link><space/>at certain roots of unity</listitem></list><heading level='2'>Relationship to other complexity classes</heading><paragraph>This class is defined for a quantum computer and its natural corresponding class for an ordinary computer (or a<space/><link><target>Turing machine</target></link><space/>plus a source of randomness) is<space/><bold><link><target>Bounded-error probabilistic polynomial</target><part>BPP</part></link></bold>. Just like<space/><bold>P</bold><space/>and<space/><bold>BPP</bold>,<space/><bold>BQP</bold><space/>is<space/><link><target>low (complexity)</target><part>low</part></link><space/>for itself, which means<space/><bold>BQP</bold><xhtml:sup><bold>BQP</bold></xhtml:sup><space/>=<space/><bold>BQP</bold>. Informally, this is true because polynomial time algorithms are closed under composition. If a polynomial time algorithm calls as a subroutine polynomially many polynomial time algorithms, the resulting algorithm is still polynomial time.</paragraph><paragraph><bold>BQP</bold><space/>contains<space/><bold><link><target>P (complexity)</target><part>P</part></link></bold><space/>and<space/><bold><link><target>Bounded-error probabilistic polynomial</target><part>BPP</part></link></bold><space/>and is contained in<space/><bold><link><target>Almost Wide Probabilistic Polynomial-Time</target><part>AWPP</part></link></bold>,<extension extension_name='ref'><template><target>Cite journal</target><arg name="last1">Fortnow<space/></arg><arg name="first1">Lance<space/></arg><arg name="last2">Rogers<space/></arg><arg name="first2">John<space/></arg><arg name="title">Complexity limitations on Quantum computation<space/></arg><arg name="url">http://people.cs.uchicago.edu/~fortnow/papers/quantum.pdf<space/></arg><arg name="publisher">[[Academic Press]]<space/></arg><arg name="location">Boston, MA<space/></arg><arg name="year">1999<space/></arg><arg name="journal">J. Comput. Syst. Sci.<space/></arg><arg name="issn">0022-0000<space/></arg><arg name="volume">59<space/></arg><arg name="issue">2<space/></arg><arg name="pages">240â€“252<space/></arg><arg name="doi">10.1006/jcss.1999.1651<space/></arg><arg name="postscript"></arg></template></extension><space/><bold><link><target>PP (complexity)</target><part>PP</part></link></bold><extension extension_name='ref'>L. Adleman, J. DeMarrais, and M.-D. Huang. Quantum computability. SIAM J. Comput.,26(5):15241540, 1997.</extension><space/>and<space/><bold><link><target>PSPACE</target></link></bold>.<extension extension_name='ref' name="BernVazi">Bernstein and Vazirani, Quantum complexity theory,<space/><link><target>SIAM Journal on Computing</target></link>, 26(5):1411-1473, 1997.<space/><link type='external' href='http://www.cs.berkeley.edu/~vazirani/bv.ps'></link></extension>In fact,<space/><bold>BQP</bold><space/>is<space/><link><target>low (complexity)</target><part>low</part></link><space/>for<space/><bold>PP</bold>, meaning that a<space/><bold>PP</bold><space/>machine achieves no benefit from being able to solve<space/><bold>BQP</bold><space/>problems instantly, an indication of the possible difference in power between these similar classes.</paragraph><list type='ident'><listitem><extension extension_name='math'>\mathbf{P} \subseteq \mathbf{BPP} \subseteq \mathbf{BQP}\subseteq \mathbf{AWPP} \subseteq \mathbf{PP} \subseteq \mathbf{PSPACE}</extension></listitem></list><paragraph>As the problem of<space/><bold>P</bold><space/><bold>PSPACE</bold><space/>has not yet been solved, the proof of inequality between<space/><bold>BQP</bold><space/>and classes mentioned above is supposed to be difficult.<extension extension_name='ref' name="BernVazi"></extension><space/>The relation between<space/><bold>BQP</bold><space/>and<space/><bold><link><target>NP (complexity)</target><part>NP</part></link></bold><space/>is not known.</paragraph><paragraph>Adding<space/><link><target>postselection</target></link><space/>to<space/><bold>BQP</bold><space/>results in the complexity class<space/><bold><link><target>PostBQP</target></link></bold><space/>which is equal to<space/><bold><link><target>PP (complexity)</target><part>PP</part></link></bold>.<extension extension_name='ref' name="PostBQP=PP"><template><target>cite journal</target><arg name="last">Aaronson</arg><arg name="first">Scott</arg><arg name="year">2005</arg><arg name="title">Quantum computing, postselection, and probabilistic polynomial-time</arg><arg name="journal">Proceedings of the Royal Society A</arg><arg name="volume">461</arg><arg name="issue">2063</arg><arg name="pages">3473â€“3482</arg><arg name="doi">10.1098/rspa.2005.1546</arg></template>. Preprint available at<space/><link type='external' href='http://arxiv.org/abs/quant-ph/0412187'></link></extension><extension extension_name='ref'><template><target>cite web</target><arg name="url">http://weblog.fortnow.com/2004/01/complexity-class-of-week-pp-by-guest.html</arg><arg name="title">Complexity Class of the Week: PP</arg><arg name="last">Aaronson</arg><arg name="first">Scott</arg><arg name="date">2004-01-11</arg><arg name="work">Computational Complexity Weblog</arg><arg name="accessdate">2008-05-02</arg></template></extension></paragraph><heading level='2'>References</heading><paragraph><extension extension_name='references'></extension></paragraph><paragraph><template><target>quantum_computing</target></template><template><target>ComplexityClasses</target></template></paragraph><paragraph><template><target>DEFAULTSORT:Bqp</target></template><link><target>Category:Probabilistic complexity classes</target></link><link><target>Category:Quantum complexity theory</target></link><link><target>Category:Quantum computing</target></link></paragraph></article>