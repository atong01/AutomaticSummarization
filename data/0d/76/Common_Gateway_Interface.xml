<article title='Common_Gateway_Interface'><paragraph><template><target>About</target><arg>software interface between the Web server and programs</arg><arg>other uses</arg><arg>CGI (disambiguation)</arg><arg></arg></template></paragraph><paragraph><bold>Common Gateway Interface</bold><space/>(<bold>CGI</bold>) is a standard<space/><link><target>Environment variable</target><part>environment</part></link><space/>for<space/><link><target>web server</target><trail>s</trail></link><space/>to interface with executable<space/><link><target>program (programming)</target><part>program</part><trail>s</trail></link><space/>installed on a server that<space/><link><target>Dynamic web page</target><part>generate web pages dynamically</part></link>.Such programs are known as<space/><italics>CGI scripts</italics><space/>or simply<space/><italics>CGIs</italics>; they are usually written in a<space/><link><target>scripting language</target></link>, but can be written in any<space/><link><target>programming language</target></link>.</paragraph><heading level='2'>History</heading><paragraph><link><target>File:CGIlogo.gif</target><part>thumbnail</part><part>The official CGI logo from the spec announcement</part></link>In 1993 the<space/><link><target>National Center for Supercomputing Applications</target></link><space/>(NCSA) team wrote the specification for calling command line executables on the www-talk mailing list;<extension extension_name='ref'><link type='external' href='http://1997.webhistory.org/www.lists/www-talk.1993q4/0485.html'>''Server Scripts'', by Rob McCool, ''www-talk'' mailing list, Sun, 14 Nov 1993 19:24:47 -0600</link></extension><space/>however, NCSA no longer hosts the specification.<extension extension_name='ref'><template><target>Citation</target><arg name="title">The Common Gateway Interface<space/></arg><arg name="url">http://hoohoo.ncsa.uiuc.edu/cgi/<space/></arg><arg name="archiveurl">http://web.archive.org/web/20100127161358/http://hoohoo.ncsa.illinois.edu/cgi/<space/></arg><arg name="archivedate">2010-01-27</arg></template></extension><extension extension_name='ref'><link type='external' href='http://www.w3.org/CGI/'>CGI: Common Gateway Interface</link><space/>at w3.org</extension><space/>The other Web server developers adopted it, and it has been a standard for Web servers ever since. A work group chaired by<space/><link><target>Ken Coar</target></link><space/>started in November 1997 to get the NCSA definition of CGI more formally defined.<extension extension_name='ref'><link type='external' href='http://ken.coar.org/cgi/'>Common Gateway Interface RFC Project Page</link></extension><space/>This work resulted in RFC 3875, which specified CGI Version 1.1. Specifically mentioned in the RFC are the following contributors:<extension extension_name='ref'><link type='external' href='http://tools.ietf.org/html/rfc3875'>RFC3875: The Common Gateway Interface (CGI) Version 1.1</link></extension></paragraph><list type='bullet'><listitem><link><target>Rob McCool</target></link><space/>(author of the<space/><link><target>NCSA HTTPd</target></link><space/><link><target>HTTP Server</target><part>Web Server</part></link>)</listitem><listitem>John Franks (author of the GN Web Server)</listitem><listitem><link><target>Ari Luotonen</target></link><space/>(the developer of the<space/><link><target>CERN httpd</target></link><space/>Web Server)</listitem><listitem>Tony Sanders (author of the Plexus Web Server)</listitem><listitem>George Phillips (Web server maintainer at the<space/><link><target>University of British Columbia</target></link>)</listitem></list><heading level='2'>Overview</heading><paragraph>Each<space/><link><target>Web server</target></link><space/>runs<space/><link><target>HTTP</target></link><space/>server software, which responds to requests from Web browsers. Generally, the HTTP server has a directory (folder), which is designated as a document collection files that can be sent to Web browsers connected to this server.<extension extension_name='ref'><link type='external' href='http://httpd.apache.org/docs/2.2/urlmapping.html'>Mapping URLs to Filesystem Locations Apache HTTP Server Version 2.2</link></extension><space/>For example, if the Web server has the domain name<space/><xhtml:code>example.com</xhtml:code>, and its document collection is stored at<space/><xhtml:code>/usr/local/apache/htdocs</xhtml:code><space/>in the local file system, then the Web server will respond to a request for<space/><xhtml:code><extension extension_name='nowiki'>http://example.com/index.html</extension></xhtml:code><space/>by sending out the (pre-written) file at<space/><xhtml:code>/usr/local/apache/htdocs/index.html</xhtml:code>.</paragraph><paragraph>CGI extends this system by allowing the owner of the Web server to designate a directory within the document collection as containing executable scripts (or binary files) instead of pre-written pages; this is known as a CGI directory. For example,<space/><xhtml:code>/usr/local/apache/htdocs/cgi-bin</xhtml:code><space/>could be designated as a CGI directory on the Web server. If a Web browser requests a URL that points to a file within the CGI directory (e.g.,<space/><xhtml:code><extension extension_name='nowiki'>http://example.com/cgi-bin/printenv.pl</extension></xhtml:code>), then, instead of simply sending that file (<xhtml:code>/usr/local/apache/htdocs/cgi-bin/printenv.pl</xhtml:code>) to the Web browser, the HTTP server runs the specified script and passes the output of the script to the Web browser. That is, anything that the script sends to<space/><link><target>standard output</target></link><space/>is passed to the Web client instead of being shown on-screen in a terminal window.</paragraph><paragraph>The CGI system also allows the Web browser to send information to the script via the URL or an HTTP POST request. If a slash and additional directory name(s) are appended to the URL immediately after the name of the script, then that path is stored in the<space/><xhtml:code>PATH_INFO</xhtml:code><space/><link><target>environment variable</target></link><space/>before the script is called. If parameters are sent to the script via an<space/><link><target>HTTP GET</target></link><space/>request (a question mark appended to the URL, followed by param=value pairs), then those parameters are stored in the<space/><xhtml:code>QUERY_STRING</xhtml:code><space/>environment variable before the script is called. If parameters are sent to the script via an<space/><link><target>HTTP POST</target></link><space/>request, they are passed to the script's<space/><link><target>standard input</target></link>. The script can then read these environment variables and adapt to the Web browser's request.</paragraph><heading level='2'>Syntax</heading><paragraph>The following<space/><link><target>Perl</target></link><space/>program shows all the environment variables passed by the Web server:</paragraph><paragraph><extension extension_name='source' lang="perl"><list type='numbered'><listitem>!/usr/bin/perl</listitem></list><paragraph>=head1 DESCRIPTION</paragraph><paragraph>printenv a CGI program that just prints its environment</paragraph><paragraph>=cutprint &quot;Content-type: text/plain\r\n\r\n&quot;;</paragraph><paragraph>for my $var ( sort keys %ENV ) {</paragraph><preblock><preline>printf &quot;%s = \&quot;%s\&quot;\r\n&quot;, $var, $ENV{$var};</preline></preblock><paragraph>}</paragraph></extension></paragraph><paragraph>If a Web browser issues a request for the environment variables at<space/><xhtml:code><extension extension_name='nowiki'>http://example.com/cgi-bin/printenv.pl/foo/bar?var1=value1&amp;var2=with%20percent%20encoding</extension></xhtml:code>, a 64-bit<space/><link><target>Microsoft Windows</target></link><space/>web server running<space/><link><target>cygwin</target></link><space/>returns the following information:</paragraph><paragraph><extension extension_name='source' lang="ini"><preblock><preline>COMSPEC=&quot;C:\Windows\system32\cmd.exe&quot;</preline><preline>DOCUMENT_ROOT=&quot;C:/Program Files (x86)/Apache Software Foundation/Apache2.2/htdocs&quot;</preline><preline>GATEWAY_INTERFACE=&quot;CGI/1.1&quot;</preline><preline>HOME=&quot;/home/SYSTEM&quot;</preline><preline>HTTP_ACCEPT=&quot;text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8&quot;</preline><preline>HTTP_ACCEPT_CHARSET=&quot;ISO-8859-1,utf-8;q=0.7,*;q=0.7&quot;</preline><preline>HTTP_ACCEPT_ENCODING=&quot;gzip, deflate&quot;</preline><preline>HTTP_ACCEPT_LANGUAGE=&quot;en-us,en;q=0.5&quot;</preline><preline>HTTP_CONNECTION=&quot;keep-alive&quot;</preline><preline>HTTP_HOST=&quot;example.com&quot;</preline><preline>HTTP_USER_AGENT=&quot;Mozilla/5.0 (Windows NT 6.1; WOW64; rv:5.0) Gecko/20100101 Firefox/5.0&quot;</preline><preline>PATH=&quot;/home/SYSTEM/bin:/bin:/cygdrive/c/progra~2/php:/cygdrive/c/windows/system32:...&quot;</preline><preline>PATHEXT=&quot;.COM;.EXE;.BAT;.CMD;.VBS;.VBE;.JS;.JSE;.WSF;.WSH;.MSC&quot;</preline><preline>PATH_INFO=&quot;/foo/bar&quot;</preline><preline>PATH_TRANSLATED=&quot;C:\Program Files (x86)\Apache Software Foundation\Apache2.2\htdocs\foo\bar&quot;</preline><preline>QUERY_STRING=&quot;var1=value1&amp;var2=with%20percent%20encoding&quot;</preline><preline>REMOTE_ADDR=&quot;127.0.0.1&quot;</preline><preline>REMOTE_PORT=&quot;63555&quot;</preline><preline>REQUEST_METHOD=&quot;GET&quot;</preline><preline>REQUEST_URI=&quot;/cgi-bin/printenv.pl/foo/bar?var1=value1&amp;var2=with%20percent%20encoding&quot;</preline><preline>SCRIPT_FILENAME=&quot;C:/Program Files (x86)/Apache Software Foundation/Apache2.2/cgi-bin/printenv.pl&quot;</preline><preline>SCRIPT_NAME=&quot;/cgi-bin/printenv.pl&quot;</preline><preline>SERVER_ADDR=&quot;127.0.0.1&quot;</preline><preline>SERVER_ADMIN=&quot;(server admin's email address)&quot;</preline><preline>SERVER_NAME=&quot;127.0.0.1&quot;</preline><preline>SERVER_PORT=&quot;80&quot;</preline><preline>SERVER_PROTOCOL=&quot;HTTP/1.1&quot;</preline><preline>SERVER_SIGNATURE=&quot;&quot;</preline><preline>SERVER_SOFTWARE=&quot;Apache/2.2.19 (Win32) PHP/5.2.17&quot;</preline><preline>SYSTEMROOT=&quot;C:\Windows&quot;</preline><preline>TERM=&quot;cygwin&quot;</preline><preline>WINDIR=&quot;C:\Windows&quot;</preline></preblock></extension></paragraph><paragraph>From the environment, it can be seen that the Web browser is<space/><link><target>Firefox</target></link><space/>running on a<space/><link><target>Windows 7</target></link><space/>PC, the Web server is<space/><link><target>Apache HTTP server</target><part>Apache</part></link><space/>running on a system that emulates<space/><link><target>Unix</target></link>, and the CGI script is named<space/><xhtml:code>cgi-bin/printenv.pl</xhtml:code>.</paragraph><paragraph>The program could then generate any content, write that to<space/><link><target>Standard streams#Standard output .28stdout.29</target><part>standard output</part></link>, and the Web server will transmit it to the browser.</paragraph><paragraph>The following are<space/><link><target>environment variable</target><trail>s</trail></link><space/>passed to CGI programs:</paragraph><list type='bullet'><listitem><bold>Server specific variables:</bold><list type='bullet'><listitem><xhtml:code>SERVER_SOFTWARE</xhtml:code>:<space/><extension extension_name='var'>name</extension>/<extension extension_name='var'>version</extension><space/>of<space/><link><target>HTTP server</target></link>.</listitem><listitem><xhtml:code>SERVER_NAME</xhtml:code>:<space/><link><target>host name</target></link><space/>of the server, may be<space/><link><target>dot-decimal notation</target><part>dot-decimal</part></link><space/>IP address.</listitem><listitem><xhtml:code>GATEWAY_INTERFACE</xhtml:code>: CGI/<extension extension_name='var'>version</extension>.</listitem></list></listitem><listitem><bold>Request specific variables:</bold><list type='bullet'><listitem><xhtml:code>SERVER_PROTOCOL</xhtml:code>: HTTP/<extension extension_name='var'>version</extension>.</listitem><listitem><xhtml:code>SERVER_PORT</xhtml:code>:<space/><link><target>TCP port</target></link><space/>(decimal).</listitem><listitem><xhtml:code>REQUEST_METHOD</xhtml:code>: name of HTTP method (see above).</listitem><listitem><xhtml:code>PATH_INFO</xhtml:code>: path suffix, if appended to URL after program name and a slash.</listitem><listitem><xhtml:code>PATH_TRANSLATED</xhtml:code>: corresponding<space/><link><target>full path</target></link><space/>as supposed by server, if<space/><xhtml:code>PATH_INFO</xhtml:code><space/>is present.</listitem><listitem><xhtml:code>SCRIPT_NAME</xhtml:code>: relative path to the program, like<space/><xhtml:code>/cgi-bin/script.cgi</xhtml:code>.</listitem><listitem><xhtml:code>QUERY_STRING</xhtml:code>: the part of URL after<space/><link><target>question mark</target><part><xhtml:span style="background-color:#FFFFCC; padding: 2px">?</xhtml:span></part></link><space/>character. The<space/><link><target>query string</target></link><space/>may be composed of *<extension extension_name='var'>name</extension>=<extension extension_name='var'>value</extension><space/>pairs separated with<space/><link><target>ampersand</target><trail>s</trail></link><space/>(such as<space/><extension extension_name='var'>var1</extension>=<extension extension_name='var'>val1</extension><bold>&amp;amp;</bold><extension extension_name='var'>var2</extension>=<extension extension_name='var'>val2</extension>...) when used to submit<space/><link><target>form (web)</target><part>form</part></link><space/>data transferred via GET method as defined by HTML<space/><link><target>application/x-www-form-urlencoded</target></link>.</listitem><listitem><xhtml:code>REMOTE_HOST</xhtml:code>: host name of the client, unset if server did not perform such lookup.</listitem><listitem><xhtml:code>REMOTE_ADDR</xhtml:code>:<space/><link><target>IP address</target></link><space/>of the client (dot-decimal).</listitem><listitem><xhtml:code>AUTH_TYPE</xhtml:code>: identification type, if applicable.</listitem><listitem><xhtml:code>REMOTE_USER</xhtml:code><space/>used for certain<space/><xhtml:code>AUTH_TYPE</xhtml:code>s.</listitem><listitem><xhtml:code>REMOTE_IDENT</xhtml:code>: see<space/><link><target>ident protocol</target><part>ident</part></link>, only if server performed such lookup.</listitem><listitem><xhtml:code>CONTENT_TYPE</xhtml:code>:<space/><link><target>Internet media type</target></link><space/>of input data if PUT or POST method are used, as provided via HTTP header.</listitem><listitem><xhtml:code>CONTENT_LENGTH</xhtml:code>: similarly, size of input data (decimal, in<space/><link><target>octet (computing)</target><part>octets</part></link>) if provided via HTTP header.</listitem><listitem>Variables passed by user agent (<xhtml:code>HTTP_ACCEPT</xhtml:code>,<space/><xhtml:code>HTTP_ACCEPT_LANGUAGE</xhtml:code>,<space/><xhtml:code>HTTP_USER_AGENT</xhtml:code>,<space/><xhtml:code>HTTP_COOKIE</xhtml:code><space/>and possibly others) contain values of corresponding<space/><link><target>HTTP headers</target></link><space/>and therefore have the same sense.</listitem></list></listitem></list><paragraph>The program returns the result to the Web server in the form of standard output, beginning with a header and a<space/><link><target>Line (text file)</target><part>blank line</part></link>.</paragraph><paragraph>The header is encoded in the same way as an<space/><link><target>List of HTTP headers</target><part>HTTP header</part></link><space/>and must include the<space/><link><target>MIME type</target></link><space/>of the document returned.<extension extension_name='ref'><link type='external' href='http://www.citycat.ru/doc/CGI/overview/primer.html'>CGI Primer (Mirror at citycat.ru)</link></extension><space/>The headers, supplemented by the Web server, are generally forwarded with the response back to the user.</paragraph><heading level='2'>Deployment</heading><paragraph>A Web server that supports CGI can be configured to interpret a<space/><link><target>Uniform Resource Locator</target><part>URL</part></link><space/>that it serves as a reference to a CGI script. A common convention is to have a<space/><xhtml:code>cgi-bin/</xhtml:code><space/><link><target>Directory (computing)</target><part>directory</part></link><space/>at the base of the directory tree and treat all executable files within this directory (and no other, for security) as CGI scripts. Another popular convention is to use<space/><link><target>filename extension</target><trail>s</trail></link>; for instance, if CGI scripts are consistently given the extension<space/><xhtml:code>.cgi</xhtml:code>, the web server can be configured to interpret all such files as CGI scripts. While convenient, and required by many prepackaged scripts, it opens the server to attack if a remote user can upload executable code with the proper extension.<template><target>Citation needed</target><arg name="date">April 2014</arg></template></paragraph><paragraph>In the case of<space/><link><target>HTTP#Request methods</target><part>HTTP PUT or POSTs</part></link>, the user-submitted data are provided to the program via the<space/><link><target>standard input</target></link>. The Web server creates a subset of the<space/><link><target>environment variable</target><trail>s</trail></link><space/>passed to it and adds details pertinent to the HTTP environment.</paragraph><heading level='2'>Uses</heading><paragraph>An example of a CGI program is one implementing a<space/><link><target>Wiki</target></link>. The user agent requests the name of an entry; the Web server executes the CGI; the CGI program retrieves the source of that entry's page (if one exists), transforms it into<space/><link><target>HTML</target></link>, and prints the result. The web server receives the input from the CGI and transmits it to the user agent. If the &quot;Edit this page&quot; link is clicked, the CGI populates an HTML<space/><xhtml:code>textarea</xhtml:code><space/>or other editing control with the page's contents, and saves it back to the server when the user submits the form in it.</paragraph><heading level='2'>Alternatives</heading><paragraph>Calling a command generally means the invocation of a newly created<space/><link><target>Process (computing)</target><part>process</part></link><space/>on the server. Starting the process can consume much more time and memory than the actual work of generating the output, especially when the program still needs to be<space/><link><target>interpret</target><trail>ed</trail></link><space/>or<space/><link><target>compiler</target><part>compiled</part></link>.If the command is called often, the resulting workload can quickly overwhelm the server.</paragraph><paragraph>The<space/><link><target>computational overhead</target><part>overhead</part></link><space/>involved in interpretation may be reduced by using compiled CGI programs, such as those in<space/><link><target>C (programming language)</target><part>C</part></link>/<link><target>C++</target></link>, rather than using<space/><link><target>Perl</target></link><space/>or other interpreted languages. The overhead involved in process creation can be reduced by techniques such as<space/><link><target>FastCGI</target></link><space/>that &quot;prefork&quot; interpreter processes, or by running the application code entirely within the web server, using extension modules such as mod_php.</paragraph><paragraph>Several approaches can be adopted for remedying this:</paragraph><list type='bullet'><listitem>The popular Web servers developed their own extension mechanisms that allows third-party software to run inside the web server itself, such as<space/><link><target>Apache modules</target></link>,<space/><link><target>Netscape Server Application Programming Interface</target><part>NSAPI</part></link><space/>plugins and<space/><link><target>ISAPI</target></link><space/>plugins.</listitem><listitem><link><target>Simple Common Gateway Interface</target></link><space/>or SCGI</listitem><listitem><link><target>FastCGI</target></link><space/>allows a single, long-running process to handle more than one user request while keeping close to the CGI programming model, retaining the simplicity while eliminating the overhead of creating a new process for each request. Unlike converting an application to a web server plug-in, FastCGI applications remain independent of the web server.</listitem><listitem>Replacement of the architecture for dynamic websites can also be used. This is the approach taken by<space/><link><target>Java EE</target></link>, which runs Java code in a Java servlet container in order to serve dynamic content and optionally static content. This approach replaces the overhead of generating and destroying processes with the much lower overhead of generating and destroying<space/><link><target>Thread (computer science)</target><part>threads</part></link>, and also exposes the programmer to the library that comes with<space/><link><target>Java Platform, Standard Edition</target></link><space/>on which the version of Java EE in use is based.</listitem></list><paragraph>The optimal configuration for any Web application depends on application-specific details, amount of traffic, and complexity of the transaction; these tradeoffs need to be analyzed to determine the best implementation for a given task and time budget.</paragraph><heading level='2'>See also</heading><list type='bullet'><listitem><link><target>CGI.pm</target></link></listitem><listitem><link><target>FastCGI</target></link></listitem><listitem><link><target>Perl Web Server Gateway Interface</target></link></listitem><listitem><link><target>Rack (web server interface)</target></link></listitem><listitem><link><target>Web Server Gateway Interface</target></link></listitem></list><heading level='2'>References</heading><paragraph><template><target>Reflist</target></template></paragraph><heading level='2'>External links</heading><list type='bullet'><listitem><link type='external' href='http://www.gnu.org/software/cgicc/'>GNU cgicc</link>, a C++ class library for writing CGI applications</listitem><listitem><link type='external' href='https://metacpan.org/pod/CGI'>CGI</link>, a standard Perl module for CGI request parsing and HTML response generation</listitem><listitem><link type='external' href='http://www.cgi101.com/learn/'>CGI Programming 101: Learn CGI Today!</link>, a CGI tutorial</listitem></list><paragraph><template><target>Web interfaces</target></template></paragraph><paragraph><template><target>Use dmy dates</target><arg name="date">July 2012</arg></template></paragraph><paragraph><link><target>Category:Servers (computing)</target></link><link><target>Category:Web technology</target></link><link><target>Category:World Wide Web</target></link></paragraph></article>