<article title='Bi-directional_text'><paragraph><template><target>Refimprove</target><arg name="date">July 2015</arg></template><bold>Bi-directional text</bold><space/>is text containing text in both<space/><link><target>Writing system#Directionality</target><part>text directionalities</part></link>, both<space/><link><target>right-to-left</target></link><space/>(RTL or dextrosinistral) and<space/><link><target>left-to-right</target></link><space/>(LTR or sinistrodextral). It generally involves text containing different types of<space/><link><target>alphabet</target><trail>s</trail></link>, but may also refer to<space/><link><target>boustrophedon</target></link>, which is changing text directionality in each row.</paragraph><paragraph>Some<space/><link><target>writing system</target><trail>s</trail></link><space/>of the world, notably the<space/><link><target>Persian alphabet</target><part>Persian</part></link><space/>and<space/><link><target>Hebrew alphabet</target><part>Hebrew</part></link><space/>scripts, and derived systems such as the<space/><link><target>Arabic script</target><part>Arabic</part></link>,<space/><link><target>Urdu alphabet</target><part>Urdu</part></link>, and<space/><link><target>Yiddish orthography</target><part>Yiddish</part></link><space/>scripts, are written in a form known as right-to-left (RTL), in which writing begins at the right-hand side of a page and concludes at the left-hand side. This is different from the left-to-right (LTR) direction used by most languages in the world. When LTR text is mixed with RTL in the same paragraph, each type of text is written in its own direction, which is known as<space/><italics>bi-directional text</italics>. This can get rather complex when multiple levels of quotation are used.</paragraph><paragraph>Many computer programs fail to display bi-directional text correctly.For example, the Hebrew name Sarah () is spelled: sin () (which appears rightmost), then resh (), and finally heh () (which should appear leftmost). ()</paragraph><paragraph><italics>Note: Some<space/><link><target>web browser</target><trail>s</trail></link><space/>may display the Hebrew text in this article in the opposite direction.</italics></paragraph><heading level='2'>Bidirectional script support</heading><paragraph>Bidirectional script support is the capability of a<space/><link><target>computer</target></link><space/>system to correctly display bi-directional text. The term is often shortened to &quot;BiDi&quot; or &quot;bidi&quot;.</paragraph><paragraph>Early computer installations were designed only to support a single<space/><link><target>writing system</target></link>, typically for left-to-right scripts based on the<space/><link><target>Latin alphabet</target></link><space/>only. Adding new<space/><link><target>character set</target><trail>s</trail></link><space/>and<space/><link><target>character encoding</target><trail>s</trail></link><space/>enabled a number of other left-to-right scripts to be supported, but did not easily support right-to-left scripts such as<space/><link><target>Arabic script</target><part>Arabic</part></link><space/>or<space/><link><target>Hebrew alphabet</target><part>Hebrew</part></link>, and mixing the two was not practical. Right-to-left scripts were introduced through encodings like<space/><link><target>ISO/IEC 8859-6</target></link><space/>and<space/><link><target>ISO/IEC 8859-8</target></link>, storing the letters (usually) in writing and reading order. It is possible to simply flip the left-to-right display order to a right-to-left display order, but doing this sacrifices the ability to correctly display left-to-right scripts. With bidirectional script support, it is possible to mix scripts from different scripts on the same page, regardless of writing direction.</paragraph><paragraph>In particular, the<space/><link><target>Unicode</target></link><space/>standard provides foundations for complete BiDi support, with detailed rules as to how mixtures of left-to-right and right-to-left scripts are to be encoded and displayed.</paragraph><heading level='2'>Unicode bidi support</heading><paragraph><template><target>ref label</target><arg>Bidi_UAX9</arg><arg>1</arg></template>The Unicode standard calls for characters to be ordered 'logically', i.e. in the sequence they are intended to be interpreted, as opposed to 'visually', the sequence they appear. This distinction is relevant for bidi support because at any bidi transition, the visual presentation ceases to be the 'logical' one. Thus, in order to offer bidi support, Unicode prescribes an algorithm for how to convert the logical sequence of characters into the correct visual presentation. For this purpose, the Unicode encoding standard divides all its characters into one of four types: 'strong', 'weak', 'neutral', and 'explicit formatting'.</paragraph><heading level='3'>strong characters</heading><paragraph>Strong characters are those with definite directionality. Examples of this type of character include most alphabetic characters, syllabic characters, Han ideographs, non-European or non-Arabic digits, and punctuation characters<space/><italics>that are specific to only those scripts</italics>.</paragraph><heading level='3'>weak characters</heading><paragraph>Weak characters are those with vague directionality. Examples of this type of character include European digits, Eastern Arabic-Indic digits, arithmetic symbols, and currency symbols. Punctuation symbols that are common to many scripts, such as the colon, comma, full-stop, and the no-break-space also fall within this category.</paragraph><heading level='4'>numbers</heading><paragraph><extension extension_name='ref'>http://www.unicode.org/reports/tr9/#Resolving_Weak_Types</extension><space/>Unless a directional override is present numbers are always encoded (and entered) big-endian, and the numerals rendered LTR. The weak directionality only applies to the placement of the number in its entirety.</paragraph><heading level='3'>neutral characters</heading><paragraph>Neutral characters have directionality indeterminable without context. Examples include paragraph separators, tabs, and most other whitespace characters.</paragraph><heading level='3'>explicit formatting</heading><paragraph>Explicit formatting characters, also referred to as &quot;directional formatting characters&quot;, are special Unicode sequences that direct the unicode algorithm to modify its default behavior. These characters are subdivided into &quot;marks&quot;, &quot;embeddings&quot;, &quot;isolates&quot;, and &quot;overrides&quot;. Their effects continue until the occurrence of either a paragraph separator, or a &quot;pop&quot; character.</paragraph><heading level='4'>marks</heading><paragraph>If a &quot;weak&quot; character is followed by another &quot;weak&quot; character, the algorithm will look at the first neighbouring &quot;strong&quot; character. Sometimes this leads to unintentional display errors. These errors are corrected or prevented with &quot;pseudo-strong&quot; characters. Such<space/><link><target>Unicode control characters</target></link><space/>are called<space/><italics>marks</italics>. The mark (<template><target>unichar</target><arg>200E</arg><arg>Left-to-right mark</arg><arg name="link"></arg><arg name="html"></arg><arg name="note">LRM</arg></template><space/>or<space/><template><target>unichar</target><arg>200F</arg><arg>Right-to-left mark</arg><arg name="link"></arg><arg name="html"></arg><arg name="note">RLM</arg></template>) is to be inserted into a location to make an enclosed weak character inherit its writing direction.</paragraph><paragraph>For example, to correctly display the<space/><template><target>unichar</target><arg>2122</arg><arg>trade mark sign</arg></template><space/>for an English name brand (LTR) in an Arabic (RTL) passage, an LRM mark is inserted after the trademark symbol if the symbol is not followed by LTR text. If the LRM mark is not added, the weak character<space/><template><target>unicode</target><arg>&#x2122;</arg></template><space/>will be neighbored by a strong LTR character and a strong RTL character. Hence, in an RTL context, it will be considered to be RTL, and displayed in an incorrect order.</paragraph><heading level='4'>embeddings</heading><paragraph>The &quot;embedding&quot; directional formatting characters are the classical Unicode method of explicit formatting, and as of Unicode 6.3, are being discouraged in favor of &quot;isolates&quot;. An &quot;embedding&quot; signals that a piece of text is to be treated as directionally distinct. The text within the scope of the embedding formatting characters is not independent of the surrounding text. Also, Characters within an embedding can affect the ordering of characters outside. Unicode 6.3 recognized that directional embeddings usually have too strong an effect on their surroundings and are thus unnecessarily difficult to use.</paragraph><heading level='4'>isolates</heading><paragraph>The &quot;isolate&quot; directional formatting characters signal that a piece of text is to be treated as directionally isolated from its surroundings. As of Unicode 6.3, these are the formatting characters that are being encouraged in new documents once target platforms are known to support them. These formatting characters were introduced after it became apparent that directional embeddings usually have too strong an effect on their surroundings and are thus unnecessarily difficult to use. Unlike the legacy 'embedding' directional formatting characters, 'isolate' characters have no effect on the ordering of the text outside their scope. Isolates can be nested, and may be placed within embeddings and overrides.</paragraph><heading level='4'>overrides</heading><paragraph>The &quot;override&quot; directional formatting characters allow for special cases, such as for part numbers (e.g. to force a part number made of mixed English, digits and Hebrew letters to be written from right to left), and are recommended avoided wherever possible. As is true of the other directional formatting characters, &quot;overrides&quot; can be nested one inside another, and in embeddings and isolates.</paragraph><heading level='4'>pops</heading><paragraph>The &quot;pop&quot; directional formatting characters terminate the scope of the most recent &quot;embedding&quot;, &quot;override&quot;, or &quot;isolate&quot;.</paragraph><heading level='3'>runs</heading><paragraph>In the algorithm, each sequence of concatenated strong characters is called a &quot;run&quot;. A &quot;weak&quot; character that is located between two &quot;strong&quot; characters with the same orientation will inherit their orientation. A &quot;weak&quot; character that is located between two &quot;strong&quot; characters with a different writing direction, will inherit the main context's writing direction (in an LTR document the character will become LTR, in an RTL document, it will become RTL).</paragraph><heading level='3'>Table of possible BiDi-types</heading><paragraph><template><target>Bidi Class (Unicode)</target><arg name="state">expanded</arg></template></paragraph><heading level='2'>Scripts using bi-directional text</heading><heading level='3'>Egyptian hieroglyphs</heading><paragraph><link><target>Egyptian language</target><part>Egyptian</part></link><space/><link><target>Egyptian hieroglyph</target><part>hieroglyphs</part></link><space/>can be written bi-directionally, where the signs had a distinct &quot;head&quot; that faced the beginning of a line and &quot;tail&quot; that faced the end.</paragraph><heading level='3'>Chinese characters</heading><paragraph><link><target>Chinese characters</target></link><space/>can be written in either direction as well as vertically (top to bottom then right to left), especially in signs (such as plaques), but the orientation of the individual characters is never changed. This can often be seen on tour buses in China, where the company name customarily runs from the front of the vehicle to its rear that is, from right to left on the right side of the bus, and from left to right on the left side of the bus. English texts on the right side of the vehicle are also quite commonly written in reverse order. (See pictures of tour bus and post vehicle below.)<table style='border-collapse: collapse; border: 1px solid grey;'><tablerow><tablecell valign="top" align="left"><link><target>Image:Yangzhou-tour-bus--right-side-3182.jpg</target><part>thumb</part><part>center</part><part></part></link><xhtml:br></xhtml:br>The right side (text runs from right to left)</tablecell><tablecell valign="top" align="left"><link><target>Image:Yangzhou-tour-bus--leftt-side-3184.jpg</target><part>thumb</part><part>center</part><part></part></link><xhtml:br></xhtml:br>The left side (text runs from left to right)</tablecell><tablecell valign="top" align="left"><link><target>Image:Hainan Airlines - Boeing 737-86N.jpg</target><part>thumb</part><part>center</part><part></part></link><xhtml:br></xhtml:br><space/>On the right side of this<space/><link><target>Hainan Airlines</target></link><space/>aircraft, the text runs from right to left (&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;).</tablecell><tablecell valign="top" align="left"><link><target>Image:Hainan Airlines.JPG</target><part>thumb</part><part>center</part><part></part></link><xhtml:br></xhtml:br>The left side, however, shows the text running from left to right (&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;).</tablecell></tablerow><tablerow><tablecell valign="top" align="left"><link><target>File:VM 5485 China Post Office car at Zhengzhou Train Station.jpg</target><part>thumb</part><part>center</part><part></part></link><xhtml:br></xhtml:br>A photo that shows text on both sides of a China Post vehicle</tablecell></tablerow></table></paragraph><heading level='3'>Boustrophedon</heading><paragraph><link><target>Boustrophedon</target></link><space/>is a writing style found in ancient<space/><link><target>Greek language</target><part>Greek</part></link><space/>inscriptions and in<space/><link><target>Hungarian runes</target></link>. This method of writing alternates direction, and usually reverses the individual characters, on each successive line.</paragraph><heading level='2'>See also</heading><list type='bullet'><listitem><link><target>Internationalization and localization</target></link></listitem><listitem><link><target>Horizontal and vertical writing in East Asian scripts</target></link></listitem><listitem><link><target>Writing system#Directionality</target></link><space/>(section on directionality)</listitem><listitem><link><target>Combining Cyrillic Millions</target></link></listitem><listitem><link><target>Transformation of text</target></link></listitem><listitem><link><target>Boustrophedon</target></link></listitem></list><heading level='2'>References</heading><paragraph><template><target>refimprove</target><arg name="date">July 2015</arg></template><template><target>reflist</target></template></paragraph><heading level='2'>External links</heading><list type='bullet'><listitem><link type='external' href='http://www.unicode.org/reports/tr9/'>Unicode Standards Annex #9</link><space/>The Bidirectional Algorithm</listitem><listitem><link type='external' href='http://www.w3.org/TR/i18n-html-tech-bidi/'>W3C guidelines on authoring techniques for bi-directional text</link><space/>- includes examples and good explanations</listitem><listitem><link type='external' href='http://fribidi.org/'>GNU FriBidi</link><space/>A free implementation of the Unicode bidirectional algorithm</listitem><listitem><link type='external' href='http://www.icu-project.org/'>ICU</link><space/><link><target>International Components for Unicode</target></link><space/>contains an implementation of the bidirectional algorithm along with other internationalization services</listitem><listitem><link type='external' href='http://crl.nmsu.edu/~mleisher/ucdata.html'>UCData: &quot;Pretty Good Bidi Algorithm Library&quot;</link><space/>A small and fast bidirectional reordering algorithm that works pretty good, but not necessarily compliant to the Unicode algorithm</listitem><listitem><link type='external' href='http://freedesktop.org/wiki/Specifications/bidi-spec?action=show&amp;amp;redirect=Standards%2Fbidi-spec'>Bidirectional Scripts in Desktop Software</link><space/>Working group for supporting BiDi in<space/><link><target>Free Software</target></link>. Contains several links to readings and implementation regarding BiDi in<space/><link><target>computer</target></link><space/>systems.</listitem><listitem><link type='external' href='http://mac.plonter.co.il/plonwiki/BidiWiki'>Another Wiki about BiDi</link></listitem><listitem><link type='external' href='http://www.user.uni-hannover.de/nhtcapri/bidirectional-text.html'>Bidirectional text - Examples and practical advice</link></listitem><listitem><link type='external' href='http://nbidi.sf.net'>.Net BiDi Implementation</link></listitem><listitem><link type='external' href='http://imagic.weizmann.ac.il/~dov/Hebrew/logicUI24.htm'>A freely available rather final version of Israeli standard 5194 - bidirectional text editing</link></listitem><listitem><link type='external' href='http://www.VeyselicNumbers.com'>Consequences of BiDi in Quran pages</link><space/>~~</listitem><listitem><link type='external' href='http://bidiedit.lingnu.com'>Work in progress on new version of Bidi editing standard + reference implementation</link></listitem><listitem><link type='external' href='http://www.lingnu.com/en/programming.html'>Series of articles about pitfalls of BiDi programming</link></listitem></list><paragraph><template><target>Unicode navigation</target></template></paragraph><paragraph><template><target>DEFAULTSORT:Bi-Directional Text</target></template><link><target>Category:Character encoding</target></link><link><target>Category:Unicode algorithms</target></link><link><target>Category:Internationalization and localization</target></link><link><target>Category:Writing direction</target></link></paragraph></article>