<article title='Elliptic_curve_cryptography'><paragraph><bold>Elliptic curve cryptography</bold><space/>(<bold>ECC</bold>) is an approach to<space/><link><target>public-key cryptography</target></link><space/>based on the algebraic structure of<space/><link><target>elliptic curve</target><trail>s</trail></link><space/>over<space/><link><target>finite field</target><trail>s</trail></link>. One of the main benefits in comparison with non-ECC cryptography (with plain<space/><link><target>Galois field</target><trail>s</trail></link><space/>as a basis) is the same level of security provided by keys of smaller size.</paragraph><paragraph>Elliptic curves are applicable for<space/><link><target>encryption</target></link>,<space/><link><target>digital signature</target><trail>s</trail></link>,<space/><link><target>CPRNG</target><part>pseudo-random generators</part></link><space/>and other tasks. They are also used in several<space/><link><target>integer factorization</target></link><space/><link><target>algorithm</target><trail>s</trail></link><space/>that have applications in cryptography, such as<space/><link><target>Lenstra elliptic curve factorization</target></link>.</paragraph><heading level='2'>Rationale</heading><paragraph>Public-key cryptography is based on the<space/><link><target>Intractability (complexity)#Intractability</target><part>intractability</part></link><space/>of certain mathematical<space/><link><target>Computational hardness assumption</target><part>problems</part></link>. Early public-key systems are secure assuming that it is difficult to<space/><link><target>Integer factorization</target><part>factor</part></link><space/>a large integer composed of two or more large prime factors. For elliptic-curve-based protocols, it is assumed that finding the<space/><link><target>discrete logarithm</target></link><space/>of a random elliptic curve element with respect to a publicly known base point is infeasible: this is the &quot;elliptic curve discrete logarithm problem&quot; or ECDLP. The entire security of ECC depends on the ability to compute a<space/><link><target>elliptic curve point multiplication</target><part>point multiplication</part></link><space/>and the inability to compute the multiplicand given the original and product points. The size of the elliptic curve determines the difficulty of the problem.</paragraph><paragraph>The primary benefit promised by ECC is a smaller key size, reducing storage and transmission requirements, i.e. that an elliptic curve group could provide the same level of security afforded by an RSA-based system with a large modulus and correspondingly larger key: for example, a 256-bit ECC public key should provide comparable security to a 3072-bit RSA public key.</paragraph><paragraph>The U.S.<space/><link><target>NIST</target><part>National Institute of Standards and Technology (NIST)</part></link><space/>has endorsed ECC in its<space/><link><target>NSA Suite B</target><part>Suite B</part></link><space/>set of recommended algorithms, specifically Elliptic Curve DiffieHellman (ECDH) for key exchange and Elliptic Curve Digital Signature Algorithm (ECDSA) for digital signature. The U.S.<space/><link><target>National Security Agency</target></link><space/>(NSA) allows their use for protecting information classified up to<space/><link><target>Classified information in the United States</target><part>top secret</part></link><space/>with 384-bit keys.<extension extension_name='ref'><template><target>cite web</target><arg name="url">http://www.nsa.gov/ia/programs/suiteb_cryptography/index.shtml<space/></arg><arg name="title">Fact Sheet NSA Suite B Cryptography<space/></arg><arg name="work">U.S. National Security Agency<space/></arg></template></extension><space/>However in August 2015, the NSA announced it plans to replace Suite B with a new cipher suite due to concerns about<space/><link><target>quantum computing</target></link><space/>attacks on ECC.<extension extension_name='ref' name="nsaquantum"></extension></paragraph><paragraph>While the RSA patent expired in 2000, there may be<space/><link><target>ECC patents</target><part>patents in force covering certain aspects of ECC technology</part></link>, though some (including<space/><link><target>RSA (security firm)</target><part>RSA Laboratories</part></link><extension extension_name='ref'><template><target>cite web</target><arg name="author"><space/>RSA Laboratories<space/></arg><arg name="url"><space/>http://www.emc.com/emc-plus/rsa-labs/standards-initiatives/are-elliptic-curve-cryptosystems-patented.htm<space/></arg><arg name="title"><space/>6.3.4 Are elliptic curve cryptosystems patented?<space/></arg><arg name="accessdate"><space/>15 December 2014</arg></template></extension><space/>and<space/><link><target>Daniel J. Bernstein</target></link><extension extension_name='ref'><template><target>cite web</target><arg name="first">D. J.<space/></arg><arg name="last">Bernstein<space/></arg><arg name="url">http://cr.yp.to/ecdh/patents.html<space/></arg><arg name="title">Irrelevant patents on elliptic-curve cryptography<space/></arg></template></extension>) argue that the Federal elliptic curve digital signature standard (ECDSA; NIST FIPS 186-3) and certain practical ECC-based key exchange schemes (including ECDH) can be implemented without infringing them.</paragraph><heading level='2'>History</heading><paragraph>The use of elliptic curves in cryptography was suggested independently by<space/><link><target>Neal Koblitz</target></link><extension extension_name='ref'><template><target>cite journal</target><arg name="first">N.<space/></arg><arg name="last">Koblitz<space/></arg><arg name="title">Elliptic curve cryptosystems<space/></arg><arg name="journal">Mathematics of Computation<space/></arg><arg name="volume">48<space/></arg><arg name="issue">177<space/></arg><arg name="year">1987<space/></arg><arg name="pages">203–209<space/></arg><arg name="doi"><space/>10.2307/2007884</arg><arg name="jstor">2007884<space/></arg></template></extension><space/>and<space/><link><target>Victor S. Miller</target></link><extension extension_name='ref'><template><target>cite journal</target><arg name="first">V.<space/></arg><arg name="last">Miller<space/></arg><arg name="title">Use of elliptic curves in cryptography<space/></arg><arg name="journal">CRYPTO<space/></arg><arg name="volume">85<space/></arg><arg name="year">1985<space/></arg><arg name="issue"><space/></arg><arg name="pages">417–426<space/></arg><arg name="doi">10.1007/3-540-39799-X_31<space/></arg><arg name="series">Lecture Notes in Computer Science<space/></arg><arg name="isbn">978-3-540-16463-0<space/></arg></template></extension><space/>in 1985. Elliptic curve cryptography algorithms entered wide use in 2004 to 2005.</paragraph><heading level='2'>Theory</heading><paragraph>For current cryptographic purposes, an<space/><italics>elliptic curve</italics><space/>is a<space/><link><target>plane curve</target></link><space/>over a finite field (rather than the real numbers) which consists of the points satisfying the equation</paragraph><list type='ident'><listitem><extension extension_name='math'>y^2 = x^3 + ax + b, \,<space/></extension></listitem></list><paragraph>along with a distinguished<space/><link><target>point at infinity</target></link>, denoted . (The coordinates here are to be chosen from a fixed<space/><link><target>finite field</target></link><space/>of<space/><link><target>Characteristic (algebra)#Case of fields</target><part>characteristic</part></link><space/>not equal to 2 or 3, or the curve equation will be somewhat more complicated.)</paragraph><paragraph>This set together with the<space/><link><target>Elliptic curve#The group law</target><part>group operation of elliptic curves</part></link><space/>is an<space/><link><target>Abelian group</target></link>, with the point at infinity as identity element. The structure of the group is inherited from the<space/><link><target>Divisor (algebraic geometry)</target><part>divisor group</part></link><space/>of the underlying<space/><link><target>algebraic variety</target></link>. As is the case for other popular public key cryptosystems, no mathematical proof of security has been published for ECC<space/><template><target>As of</target><arg>2009</arg><arg name="lc">on</arg></template>.</paragraph><heading level='2'>Cryptographic schemes</heading><paragraph>Several<space/><link><target>discrete logarithm</target></link>-based protocols have been adapted to elliptic curves, replacing the group<space/><extension extension_name='math'>(\mathbb{Z}_{p})^\times</extension><space/>with an elliptic curve:</paragraph><list type='bullet'><listitem>The<space/><link><target>elliptic curve DiffieHellman</target></link><space/>(ECDH) key agreement scheme is based on the<space/><link><target>DiffieHellman</target></link><space/>scheme,</listitem><listitem>The Elliptic Curve<space/><link><target>Integrated Encryption Scheme</target></link><space/>(ECIES), also known as Elliptic Curve Augmented Encryption Scheme or simply the Elliptic Curve Encryption Scheme,</listitem><listitem>The<space/><link><target>Elliptic Curve DSA</target><part>Elliptic Curve Digital Signature Algorithm</part></link><space/>(ECDSA) is based on the<space/><link><target>Digital Signature Algorithm</target></link>,</listitem><listitem>The<space/><link><target>EdDSA</target><part>Edwards-curve Digital Signature Algorithm</part></link><space/>(EdDSA) is based on<space/><link><target>Schnorr signature</target></link><space/>and uses<space/><link><target>twisted Edwards curve</target><trail>s</trail></link>,</listitem><listitem>The<space/><link><target>ECMQV</target></link><space/>key agreement scheme is based on the<space/><link><target>MenezesQuVanstone</target><part>MQV</part></link><space/>key agreement scheme,</listitem><listitem>The<space/><link><target>Implicit certificate</target><part>ECQV</part></link><space/>implicit certificate scheme.</listitem></list><paragraph>At the RSA Conference 2005, the<space/><link><target>National Security Agency</target></link><space/>(NSA) announced<space/><link><target>NSA Suite B</target><part>Suite B</part></link><space/>which exclusively uses ECC for digital signature generation and key exchange. The suite is intended to protect both classified and unclassified national security systems and information.<extension extension_name='ref'><template><target>cite web</target><arg name="url">http://www.nsa.gov/business/programs/elliptic_curve.shtml<space/></arg><arg name="title">The Case for Elliptic Curve Cryptography<space/></arg><arg name="work">NSA<space/></arg></template></extension></paragraph><paragraph>Recently, a large number of cryptographic primitives based on bilinear mappings on various elliptic curve groups, such as the<space/><link><target>Weil pairing</target><part>Weil</part></link><space/>and<space/><link><target>Tate pairing</target><trail>s</trail></link>, have been introduced. Schemes based on these primitives provide efficient<space/><link><target>identity-based encryption</target></link><space/>as well as pairing-based signatures,<space/><link><target>signcryption</target></link>,<space/><link><target>key agreement</target></link>, and<space/><link><target>proxy re-encryption</target></link>.</paragraph><heading level='2'>Implementation</heading><paragraph>Some common implementation considerations include:</paragraph><heading level='3'>Domain parameters</heading><paragraph>To use ECC all parties must agree on all the elements defining the elliptic curve, that is, the<space/><italics>domain parameters</italics><space/>of the scheme. The field is defined by<space/><italics>p</italics><space/>in the prime case and the pair of<space/><italics>m</italics><space/>and<space/><italics>f</italics><space/>in the binary case. The elliptic curve is defined by the constants<space/><italics>a</italics><space/>and<space/><italics>b</italics><space/>used in its defining equation. Finally, the cyclic subgroup is defined by its<space/><italics>generator</italics><space/>(a.k.a.<space/><italics>base point</italics>)<space/><italics>G</italics>. For cryptographic application the<space/><link><target>order (group theory)</target><part>order</part></link><space/>of<space/><italics>G</italics>, that is the smallest positive number<space/><italics>n</italics><space/>such that<space/><extension extension_name='math'>n G = \infty</extension>, is normally prime. Since<space/><italics>n</italics><space/>is the size of a subgroup of<space/><extension extension_name='math'>E(\mathbb{F}_p)</extension><space/>it follows from<space/><link><target>Lagrange's theorem (group theory)</target><part>Lagrange's theorem</part></link><space/>that the number<space/><extension extension_name='math'>h = \frac{1}{n}|E(\mathbb{F}_p)|</extension><space/>is an integer. In cryptographic applications this number<space/><italics>h</italics>, called the<space/><italics>cofactor</italics>, must be small (<extension extension_name='math'>h \le 4</extension>) and, preferably,<space/><extension extension_name='math'>h = 1</extension>. Let us summarize: in the prime case the domain parameters are<space/><extension extension_name='math'>(p,a,b,G,n,h)</extension><space/>and in the binary case they are<space/><extension extension_name='math'>(m,f,a,b,G,n,h)</extension>.</paragraph><paragraph>Unless there is an assurance that domain parameters were generated by a party trusted with respect to their use, the domain parameters<space/><italics>must</italics><space/>be validated before use.</paragraph><paragraph>The generation of domain parameters is not usually done by each participant since this involves computing<space/><link><target>counting points on elliptic curves</target><part>the number of points on a curve</part></link><space/>which is time-consuming and troublesome to implement. As a result several standard bodies published domain parameters of elliptic curves for several common field sizes. Such domain parameters are commonly known as &quot;standard curves&quot; or &quot;named curves&quot;; a named curve can be referenced either by name or by the unique<space/><link><target>object identifier</target></link><space/>defined in the standard documents:</paragraph><list type='bullet'><listitem>NIST,<space/><link type='external' href='http://csrc.nist.gov/groups/ST/toolkit/documents/dss/NISTReCur.pdf'>Recommended Elliptic Curves for Government Use</link></listitem><listitem>SECG,<space/><link type='external' href='http://www.secg.org/sec2-v2.pdf'>SEC 2: Recommended Elliptic Curve Domain Parameters</link></listitem><listitem>ECC Brainpool,<space/><link type='external' href='http://www.ecc-brainpool.org/download/Domain-parameters.pdf'>ECC Brainpool Standard Curves and Curve Generation</link></listitem></list><paragraph>SECG test vectors are also available.<extension extension_name='ref'>http://www.secg.org/download/aid-390/gec2.pdf</extension><space/>NIST has approved many SECG curves, so there is a significant overlap between the specifications published by NIST and SECG. EC domain parameters may be either specified by value or by name.</paragraph><paragraph>If one (despite the above) wants to construct one's own domain parameters, one should select the underlying field and then use one of the following strategies to find a curve with appropriate (i.e., near prime) number of points using one of the following methods:</paragraph><list type='bullet'><listitem>Select a random curve and use a general point-counting algorithm, for example,<space/><link><target>Schoof's algorithm</target></link><space/>or<space/><link><target>SchoofElkiesAtkin algorithm</target></link>,</listitem><listitem>Select a random curve from a family which allows easy calculation of the number of points (e.g., Koblitz curves), or</listitem><listitem>Select the number of points and generate a curve with this number of points using<space/><italics>complex multiplication</italics><space/>technique.<extension extension_name='ref'><template><target>cite journal</target><arg name="first">G.<space/></arg><arg name="last">Lay<space/></arg><arg name="first2">H.<space/></arg><arg name="last2">Zimmer<space/></arg><arg name="title">Constructing elliptic curves with given group order over large finite fields<space/></arg><arg name="work">Algorithmic Number Theory Symposium<space/></arg><arg name="year">1994<space/></arg><arg name="series">Lecture Notes in Computer Science<space/></arg><arg name="volume">877<space/></arg><arg name="issue"><space/></arg><arg name="pages">250–263<space/></arg><arg name="doi">10.1007/3-540-58691-1_64<space/></arg></template></extension></listitem></list><paragraph>Several classes of curves are weak and should be avoided:</paragraph><list type='bullet'><listitem>Curves over<space/><extension extension_name='math'>\mathbb{F}_{2^m}</extension><space/>with non-prime<space/><italics>m</italics><space/>are vulnerable to<space/><link><target>Weil descent</target></link><space/>attacks.<extension extension_name='ref'><template><target>cite journal</target><arg name="first">S. D.<space/></arg><arg name="last">Galbraith<space/></arg><arg name="first2">N. P.<space/></arg><arg name="last2">Smart<space/></arg><arg name="title">A cryptographic application of the Weil descent<space/></arg><arg name="work">Cryptography and Coding<space/></arg><arg name="year">1999<space/></arg><arg name="series">Lecture Notes in Computer Science<space/></arg><arg name="volume">1746<space/></arg><arg name="pages">799<space/></arg><arg name="doi">10.1007/3-540-46665-7_23<space/></arg></template></extension><extension extension_name='ref'><template><target>cite web</target><arg name="first">P.<space/></arg><arg name="last">Gaudry<space/></arg><arg name="first2">F.<space/></arg><arg name="last2">Hess<space/></arg><arg name="first3">N. P.<space/></arg><arg name="last3">Smart<space/></arg><arg name="url">http://www.hpl.hp.com/techreports/2000/HPL-2000-10.pdf<space/></arg><arg name="title">Constructive and destructive facets of Weil descent on elliptic curves<space/></arg><arg name="work">Hewlett Packard Laboratories Technical Report<space/></arg><arg name="year">2000<space/></arg></template></extension></listitem><listitem>Curves such that<space/><italics>n</italics><space/>divides<space/><extension extension_name='math'>p^B-1</extension><space/>(where<space/><italics>p</italics><space/>is the characteristic of the field&amp;nbsp;<space/><italics>q</italics><space/>for a prime field, or<space/><extension extension_name='math'>2</extension><space/>for a binary field) for sufficiently small<space/><italics>B</italics><space/>are vulnerable to MenezesOkamotoVanstone (MOV) attack<extension extension_name='ref'><template><target>cite journal</target><arg name="first">A.<space/></arg><arg name="last">Menezes<space/></arg><arg name="first2">T.<space/></arg><arg name="last2">Okamoto<space/></arg><arg name="first3">S. A.<space/></arg><arg name="last3">Vanstone<space/></arg><arg name="title">Reducing elliptic curve logarithms to logarithms in a finite field<space/></arg><arg name="work">IEEE Transactions on Information Theory<space/></arg><arg name="volume">39<space/></arg><arg name="year">1993<space/></arg><arg name="doi"><space/>10.1109/18.259647<space/></arg></template></extension><extension extension_name='ref'><template><target>cite journal</target><arg name="first">L.<space/></arg><arg name="last">Hitt<space/></arg><arg name="url">http://eprint.iacr.org/2006/415<space/></arg><arg name="title">On an Improved Definition of Embedding Degree<space/></arg><arg name="work">IACR ePrint report<space/></arg><arg name="year">2006<space/></arg><arg name="volume">415<space/></arg></template></extension><space/>which applies usual Discrete Logarithm Problem (DLP) in a small degree extension field of<space/><extension extension_name='math'>\mathbb{F}_p</extension><space/>to solve ECDLP. The bound<space/><italics>B</italics><space/>should be chosen so that discrete logarithms in the field<space/><extension extension_name='math'>\mathbb{F}_{p^B}</extension><space/>are at least as difficult to compute as discrete logs on the elliptic curve<space/><extension extension_name='math'>E(\mathbb{F}_q)</extension>.<extension extension_name='ref'>IEEE<space/><link type='external' href='http://grouper.ieee.org/groups/1363/P1363/index.html'>P1363</link>, section A.12.1</extension></listitem><listitem>Curves such that<space/><extension extension_name='math'>|E(\mathbb{F}_q)| = q</extension><space/>are vulnerable to the attack that maps the points on the curve to the additive group of<space/><extension extension_name='math'>\mathbb{F}_q</extension><extension extension_name='ref'><template><target>cite journal</target><arg name="first">I.<space/></arg><arg name="last">Semaev<space/></arg><arg name="title">Evaluation of discrete logarithm in a group of ''p''-torsion points of an elliptic curve in characteristic ''p''<space/></arg><arg name="journal">Mathematics of Computation<space/></arg><arg name="volume">67<space/></arg><arg name="issue">221<space/></arg><arg name="year">1998<space/></arg><arg name="pages">353–356<space/></arg><arg name="doi">10.1090/S0025-5718-98-00887-4<space/></arg></template></extension><extension extension_name='ref'><template><target>cite journal</target><arg name="first">N.<space/></arg><arg name="last">Smart<space/></arg><arg name="title">The discrete logarithm problem on elliptic curves of trace one<space/></arg><arg name="journal">Journal of Cryptology<space/></arg><arg name="volume">12<space/></arg><arg name="year">1999<space/></arg><arg name="issue">3<space/></arg><arg name="pages">193–196<space/></arg><arg name="doi">10.1007/s001459900052<space/></arg></template></extension><extension extension_name='ref'><template><target>cite journal</target><arg name="first">T.<space/></arg><arg name="last">Satoh<space/></arg><arg name="first2">K.<space/></arg><arg name="last2">Araki<space/></arg><arg name="title">Fermat quotients and the polynomial time discrete log algorithm for anomalous elliptic curves<space/></arg><arg name="journal">Commentarii Mathematici Universitatis Sancti Pauli<space/></arg><arg name="volume">47<space/></arg><arg name="year">1998<space/></arg></template></extension></listitem></list><heading level='3'>Key sizes</heading><paragraph><template><target>See also</target><arg>Discrete logarithm records#Elliptic curves</arg></template></paragraph><paragraph>Since all the fastest known algorithms that allow one to solve the ECDLP (<link><target>baby-step giant-step</target></link>,<space/><link><target>Pollard's rho algorithm for logarithms</target><part>Pollard's rho</part></link>, etc.), need<space/><extension extension_name='math'>O(\sqrt{n})</extension><space/>steps, it follows that the size of the underlying field should be roughly twice the security parameter. For example, for 128-bit security one needs a curve over<space/><extension extension_name='math'>\mathbb{F}_q</extension>, where<space/><extension extension_name='math'>q \approx 2^{256}</extension>. This can be contrasted with finite-field cryptography (e.g.,<space/><link><target>Digital Signature Algorithm</target><part>DSA</part></link>) which requires<extension extension_name='ref'>NIST,<space/><link type='external' href='http://csrc.nist.gov/publications/nistpubs/800-57/sp800-57_part1_rev3_general.pdf'>Recommendation for Key ManagementPart 1: general</link>, Special Publication 800-57, August 2005.</extension><space/>3072-bit public keys and 256-bit private keys, and integer factorization cryptography (e.g.,<space/><link><target>RSA (algorithm)</target><part>RSA</part></link>) which requires a 3072-bit value of<space/><italics>n</italics>, where the private key should be just as large. However the public key may be smaller to accommodate efficient encryption, especially when processing power is limited.</paragraph><paragraph>The hardest ECC scheme (publicly) broken to date had a 112-bit key for the prime field case and a 109-bit key for the binary field case. For the prime field case this was broken in July 2009 using a cluster of over 200<space/><link><target>PlayStation 3</target></link><space/>game consoles and could have been finished in 3.5 months using this cluster when running continuously.<extension extension_name='ref'>http://lacal.epfl.ch/page81774.html</extension><space/>The binary field case was broken in April 2004 using 2600 computers over 17 months.<extension extension_name='ref'><template><target>cite web</target><arg name="url">http://www.certicom.com/index.php/2004-press-releases/36-2004-press-releases/300-solution-required-team-of-mathematicians-2600-computers-and-17-months-<space/></arg><arg name="title">Certicom Announces Elliptic Curve Cryptography Challenge Winner<space/></arg><arg name="work">Certicom<space/></arg><arg name="date">April 27, 2004<space/></arg></template></extension></paragraph><paragraph>A current project is aiming at breaking the ECC2K-130 challenge by Certicom, by using a wide range of different hardware: CPUs, GPUs, FPGA.<extension extension_name='ref'>http://www.ecc-challenge.info/</extension></paragraph><heading level='3'>Projective coordinates</heading><paragraph>A close examination of the addition rules shows that in order to add two points one needs not only several additions and multiplications in<space/><extension extension_name='math'>\mathbb{F}_q</extension><space/>but also an inversion operation. The inversion (for given<space/><extension extension_name='math'>x \in \mathbb{F}_q</extension><space/>find<space/><extension extension_name='math'>y \in \mathbb{F}_q</extension><space/>such that<space/><extension extension_name='math'>x y = 1</extension>) is one to two orders of magnitude slower<extension extension_name='ref'><template><target>cite journal</target><arg name="first">Y.<space/></arg><arg name="last">Hitchcock<space/></arg><arg name="first2">E.<space/></arg><arg name="last2">Dawson<space/></arg><arg name="first3">A.<space/></arg><arg name="last3">Clark<space/></arg><arg name="first4">P.<space/></arg><arg name="last4">Montague<space/></arg><arg name="url">http://anziamj.austms.org.au/V44/CTAC2001/Hitc/Hitc.pdf<space/></arg><arg name="title">Implementing an efficient elliptic curve cryptosystem over GF(p) on a smart card<space/></arg><arg name="year">2002<space/></arg><arg name="journal">ANZIAM Journal<space/></arg><arg name="volume">44<space/></arg></template></extension><space/>than multiplication. Fortunately, points on a curve can be represented in different coordinate systems which do not require an inversion operation to add two points. Several such systems were proposed: in the<space/><italics>projective</italics><space/>system each point is represented by three coordinates<space/><extension extension_name='math'>(X,Y,Z)</extension><space/>using the following relation:<space/><extension extension_name='math'>x = \frac{X}{Z}</extension>,<space/><extension extension_name='math'>y = \frac{Y}{Z}</extension>; in the<space/><italics>Jacobian system</italics><space/>a point is also represented with three coordinates<space/><extension extension_name='math'>(X,Y,Z)</extension>, but a different relation is used:<space/><extension extension_name='math'>x = \frac{X}{Z^2}</extension>,<space/><extension extension_name='math'>y = \frac{Y}{Z^3}</extension>; in the<space/><italics>LpezDahab system</italics><space/>the relation is<space/><extension extension_name='math'>x = \frac{X}{Z}</extension>,<space/><extension extension_name='math'>y = \frac{Y}{Z^2}</extension>; in the<space/><italics>modified Jacobian</italics><space/>system the same relations are used but four coordinates are stored and used for calculations<space/><extension extension_name='math'>(X,Y,Z,aZ^4)</extension>; and in the<space/><italics>Chudnovsky Jacobian</italics><space/>system five coordinates are used<space/><extension extension_name='math'>(X,Y,Z,Z^2,Z^3)</extension>. Note that there may be different naming conventions, for example,<space/><link><target>IEEE P1363</target></link>-2000 standard uses &quot;projective coordinates&quot; to refer to what is commonly called Jacobian coordinates. An additional speed-up is possible if mixed coordinates are used.<extension extension_name='ref'><template><target>cite journal</target><arg name="first">H.<space/></arg><arg name="last">Cohen<space/></arg><arg name="first2">A.<space/></arg><arg name="last2">Miyaji<space/></arg><arg name="first3">T.<space/></arg><arg name="last3">Ono<space/></arg><arg name="title">Efficient Elliptic Curve Exponentiation Using Mixed Coordinates<space/></arg><arg name="journal">Advances in Cryptology&nbsp;– AsiaCrypt '98<space/></arg><arg name="year">1998<space/></arg><arg name="series">Lecture Notes in Computer Science<space/></arg><arg name="volume">1514<space/></arg><arg name="pages">51–65<space/></arg><arg name="doi">10.1007/3-540-49649-1_6<space/></arg><arg name="isbn">978-3-540-65109-3<space/></arg></template></extension></paragraph><heading level='3'>Fast reduction (NIST curves)</heading><paragraph>Reduction modulo<space/><italics>p</italics><space/>(which is needed for addition and multiplication) can be executed much faster if the prime<space/><italics>p</italics><space/>is a pseudo-<link><target>Mersenne prime</target></link>, that is<space/><extension extension_name='math'>p \approx 2^d</extension>; for example,<space/><extension extension_name='math'>p = 2^{521} - 1</extension><space/>or<space/><extension extension_name='math'>p = 2^{256} - 2^{32} - 2^9 - 2^8 - 2^7 - 2^6 - 2^4 - 1.</extension><space/>Compared to<space/><link><target>Barrett reduction</target></link><space/>there can be an order of magnitude speed up.<extension extension_name='ref'><template><target>cite journal</target><arg name="first">M.<space/></arg><arg name="last">Brown<space/></arg><arg name="first2">D.<space/></arg><arg name="last2">Hankerson<space/></arg><arg name="first3">J.<space/></arg><arg name="last3">Lopez<space/></arg><arg name="first4">A.<space/></arg><arg name="last4">Menezes<space/></arg><arg name="title">Software Implementation of the NIST Elliptic Curves Over Prime Fields<space/></arg><arg name="journal">Topics in Cryptology&nbsp;– CT-RSA 2001<space/></arg><arg name="series">Lecture Notes in Computer Science<space/></arg><arg name="year">2001<space/></arg><arg name="volume">2020<space/></arg><arg name="pages">250–265<space/></arg><arg name="doi">10.1007/3-540-45353-9_19<space/></arg><arg name="isbn">978-3-540-41898-6<space/></arg></template></extension><space/>The speed up here is a practical rather than theoretical one, and derives from the fact that the moduli of numbers against numbers near powers of two can be performed efficiently by computers operating on binary numbers with<space/><link><target>bitwise operation</target><trail>s</trail></link>.</paragraph><paragraph>The curves over<space/><extension extension_name='math'>\mathbb{F}_p</extension><space/>with pseudo-Mersenne<space/><italics>p</italics><space/>are recommended by NIST. Yet another advantage of the NIST curves is the fact that they use<space/><italics>a</italics>&amp;nbsp;=&amp;nbsp;3, which improves addition in Jacobian coordinates.</paragraph><paragraph>Many of the efficiency-related decisions in NIST FIPS 186-2 are sub-optimal. Other curves are more secure and run just as fast.<extension extension_name='ref'><template><target>cite web</target><arg name="authors"><space/>Daniel J. Bernstein and Tanja Lange<space/></arg><arg name="title"><space/>SafeCurves: choosing safe curves for elliptic-curve cryptography<space/></arg><arg name="url"><space/>http://safecurves.cr.yp.to/<space/></arg><arg name="accessdate"><space/>1 December 2013<space/></arg></template></extension></paragraph><heading level='2'>Applications</heading><paragraph>Elliptic curves are applicable for<space/><link><target>encryption</target></link>,<space/><link><target>digital signature</target><trail>s</trail></link>,<space/><link><target>CPRNG</target><part>pseudo-random generators</part></link><space/>and other tasks. They are also used in several<space/><link><target>integer factorization</target></link><space/><link><target>algorithm</target><trail>s</trail></link><space/>that have applications in cryptography, such as<space/><link><target>Lenstra elliptic curve factorization</target></link>.</paragraph><paragraph>NIST recommended<template><target>year needed</target><arg name="date">September 2013</arg></template><space/>fifteen elliptic curves. Specifically, FIPS 186-3 has ten recommended finite fields:</paragraph><list type='bullet'><listitem>Five prime fields<space/><extension extension_name='math'>\mathbb{F}_p</extension><space/>for certain primes<space/><italics>p</italics><space/>of sizes 192, 224, 256, 384, and 521<extension extension_name='ref'>The sequence may seem suggestive of a typographic error. Nevertheless, the last value is 521 and not 512 bits.</extension><space/>bits. For each of the prime fields, one elliptic curve is recommended.</listitem><listitem>Five binary fields<space/><extension extension_name='math'>\mathbb{F}_{2^m}</extension><space/>for<space/><italics>m</italics><space/>equal 163, 233, 283, 409, and 571. For each of the binary fields, one elliptic curve and one<space/><link><target>Neal Koblitz</target><part>Koblitz</part></link><space/>curve was selected.</listitem></list><paragraph>The NIST recommendation thus contains a total of five prime curves and ten binary curves. The curves were ostensibly chosen for optimal security and implementation efficiency.<extension extension_name='ref'>FIPS PUB 186-3,<space/><link type='external' href='http://csrc.nist.gov/publications/fips/fips186-3/fips_186-3.pdf'>Digital Signature Standard (DSS)</link>.</extension></paragraph><paragraph>In 2013, the<space/><italics><link><target>New York Times</target></link></italics><space/>stated that<space/><link><target>Dual_EC_DRBG</target><part>Dual Elliptic Curve Deterministic Random Bit Generation</part></link><space/>(or Dual_EC_DRBG) had been included as a NIST national standard due to the influence of<space/><link><target>NSA</target></link>, which had included a deliberate weakness in the algorithm and the recommended elliptic curve.<space/><link><target>RSA Security</target></link><space/>in September 2013 issued an advisory recommending that its customers discontinue using any software based on Dual_EC_DRBG.<extension extension_name='ref'>Kim Zetter,<space/><link type='external' href='http://www.wired.com/threatlevel/2013/09/rsa-advisory-nsa-algorithm/'>RSA Tells Its Developer Customers: Stop Using NSA-Linked Algorithm</link><space/><italics><link><target>Wired (magazine)</target><part>Wired</part></link></italics>, 19 September 2013. &quot;Recommending against the use of SP 800-90A Dual Elliptic Curve Deterministic Random Bit Generation: NIST strongly recommends that, pending the resolution of the security concerns and the re-issuance of SP 800-90A, the Dual_EC_DRBG, as specified in the January 2012 version of SP 800-90A, no longer be used.&quot;</extension><extension extension_name='ref'><link type='external' href='http://csrc.nist.gov/publications/PubsDrafts.html#SP-800-90-A%20Rev%201%20B%20and%20C'>&quot;Due to the debate around the Dual EC DRBG standard highlighted recently by the National Institute of Standards and Technology (NIST), NIST re-opened for public comment its SP 800-90 standard which covers Pseudo-random Number Generators (PRNG).&quot; csrc.nist.gov</link></extension><space/>In the wake of the exposure of Dual_EC_DRBG as &quot;an NSA undercover operation&quot;, cryptography experts have also expressed concern over the security of the NIST recommended elliptic curves,<extension extension_name='ref'><link><target>Bruce Schneier</target></link><space/>(5 September) &quot;I no longer trust the constants. I believe the NSA has manipulated them through their relationships with industry.&quot; See<space/><link type='external' href='http://it.slashdot.org/firehose.pl?op=view&amp;amp;type=story&amp;amp;sid=13/09/11/1224252'>Are the NIST Standard Elliptic Curves Back-doored?</link>,<space/><italics><link><target>Slashdot</target></link></italics>, 11 September 2013.</extension><space/>suggesting a return to encryption based on non-elliptic-curve groups.</paragraph><heading level='2'>Security</heading><heading level='3'>Side-channel attacks</heading><paragraph>Unlike most other<space/><link><target>Discrete Logarithm</target><part>DLP</part></link><space/>systems (where it is possible to use the same procedure for squaring and multiplication) the EC addition is significantly different for doubling (<extension extension_name='math'>P = Q</extension>) and general addition (<extension extension_name='math'>P \ne Q</extension>) depending on the coordinate system used. Consequently, it is important to counteract<space/><link><target>side channel attack</target><trail>s</trail></link><space/>(e.g., timing or<space/><link><target>Power analysis</target><part>simple/differential power analysis attacks</part></link>) using, for example, fixed pattern window (a.k.a. comb) methods<template><target>clarify</target><arg name="date">December 2011</arg></template><extension extension_name='ref'><template><target>cite journal</target><arg name="first">M.<space/></arg><arg name="last">Hedabou<space/></arg><arg name="first2">P.<space/></arg><arg name="last2">Pinel<space/></arg><arg name="first3">L.<space/></arg><arg name="last3">Beneteau<space/></arg><arg name="url">http://eprint.iacr.org/2004/342.pdf<space/></arg><arg name="title">A comb method to render ECC resistant against Side Channel Attacks<space/></arg><arg name="year">2004<space/></arg></template></extension><space/>(note that this does not increase the computation time). Another concern for ECC-systems is the danger of<space/><link><target>Differential fault analysis</target><part>fault attacks</part></link>, especially when running on<space/><link><target>smart card</target><trail>s</trail></link>.<extension extension_name='ref'>See, for example,<space/><template><target>cite journal</target><arg name="title">Differential Fault Attacks on Elliptic Curve Cryptosystems<space/></arg><arg name="first">Ingrid<space/></arg><arg name="last">Biehl<space/></arg><arg name="first2">Bernd<space/></arg><arg name="last2">Meyer<space/></arg><arg name="first3">Volker<space/></arg><arg name="last3">Müller<space/></arg><arg name="journal">Advances in Cryptology&nbsp;– CRYPTO 2000<space/></arg><arg name="series">[[Lecture Notes in Computer Science]]<space/></arg><arg name="volume">1880<space/></arg><arg name="year">2000<space/></arg><arg name="pages">131–146<space/></arg><arg name="doi">10.1007/3-540-44598-6_8<space/></arg><arg name="isbn">978-3-540-67907-3<space/></arg></template></extension></paragraph><paragraph>Cryptographic experts have also expressed concerns that the National Security Agency has inserted a backdoor into at least one elliptic curve-based pseudo random generator.<extension extension_name='ref'>https://www.schneier.com/essay-198.html</extension><space/>One analysis of the possible backdoor concluded that an adversary in possession of the algorithm's secret key could obtain encryption keys given only 32 bytes of ciphertext.<extension extension_name='ref'>http://rump2007.cr.yp.to/15-shumow.pdf</extension></paragraph><heading level='3'>Quantum computing attacks</heading><paragraph>Elliptic curve cryptography is vulnerable to a modified<space/><link><target>Shor's algorithm</target></link><space/>for solving the discrete logarithm problem on elliptic curves.<extension extension_name='ref' name="NielsenChuang2010"><template><target>cite book</target><arg name="author1">Michael A. Nielsen</arg><arg name="author2">Isaac L. Chuang</arg><arg name="title">Quantum Computation and Quantum Information: 10th Anniversary Edition</arg><arg name="url">http://books.google.com/books?id</arg><arg name="date">9 December 2010</arg><arg name="publisher">Cambridge University Press</arg><arg name="isbn">978-1-139-49548-6</arg><arg name="pages">202–</arg></template></extension><space/>A quantum computer to attack elliptic curve cryptography can be less than half the size of a<space/><link><target>quantum computer</target></link><space/>to break an equivalently classically secure version of<space/><link><target>Rivest Shamir Adleman</target><part>RSA</part></link>. This is due to the fact that smaller key sizes of elliptic curves are needed to match the classical security of RSA. The work of Proos and Zalka show how a quantum computer for breaking 2048-bit RSA requires roughly 4096 qubits while a quantum computer to break the equivalently secure 224-bit Elliptic Curve Cryptography requires between 1300 and 1600 qubits. Depending on the growth rate of quantum computers in the future, elliptic curve cryptosystems may become attackable by a quantum computer many years before an equivalently secure RSA scheme.<extension extension_name='ref'><template><target>Cite journal</target><arg name="last">Proos</arg><arg name="first">John</arg><arg name="title">Shor's discrete logarithm quantum algorithm for elliptic curves</arg><arg name="url">http://arxiv.org/abs/quantph/0301141</arg><arg name="publisher">QIC</arg><arg name="accessdate">3 May 2014</arg><arg name="author2">Zalka</arg><arg name="archiveurl">http://arxiv.org/</arg><arg name="archivedate">2004</arg><arg name="arxiv">quantph/0301141</arg></template></extension></paragraph><paragraph>To avoid quantum computing concerns, an elliptic curve based alternative to Elliptic Curve Diffie Hellman which is not susceptible to Shor's attack is the<space/><link><target>Supersingular Isogeny Key Exchange</target><part>Supersingular Isogeny DiffieHellman Key Exchange</part></link><space/>of De Feo, Jao and Plut. They use elliptic curve<space/><link><target>isogenies</target></link><space/>to create a drop in replacement for the quantum attackable<space/><link><target>DiffieHellman</target></link><space/>and<space/><link><target>Elliptic curve DiffieHellman</target></link><space/>key exchanges. This key exchange utilizes the same elliptic curve computational primitives of existing elliptic curve cryptography and requires computational and transmission overhead similar to many currently used public key systems.<extension extension_name='ref'><template><target>cite web</target><arg name="last">De Feo</arg><arg name="first">Luca</arg><arg name="title">Towards quantum-resistant cryptosystems from supersingular elliptic curve isogenies</arg><arg name="url">http://eprint.iacr.org/eprint-bin/cite.pl?entry</arg><arg name="work">Cryptology ePrint Archive, Report 2011/506</arg><arg name="publisher">IACR</arg><arg name="accessdate">3 May 2014</arg><arg name="author2">Jao, Plut</arg><arg name="archiveurl">http://eprint.iacr.org</arg><arg name="archivedate">2011</arg></template></extension></paragraph><paragraph>In August, 2015, NSA announced that it is planning to transition &quot;in the not distant future&quot; to a new cipher suite that is resistant to<space/><link><target>quantum computing</target><part>quantum</part></link><space/>attacks. &quot;Unfortunately, the growth of elliptic curve use has bumped up against the fact of continued progress in the research on quantum computing, necessitating a re-evaluation of our cryptographic strategy.&quot;<extension extension_name='ref' name="nsaquantum">https://www.nsa.gov/ia/programs/suiteb_cryptography/index.shtml</extension></paragraph><heading level='2'>Patents</heading><paragraph><template><target>Main</target><arg>ECC patents</arg></template></paragraph><paragraph>At least one ECC scheme (<link><target>ECMQV</target></link>) and some implementation techniques are covered by patents.</paragraph><heading level='2'>Alternative representations</heading><paragraph>Alternative representations of elliptic curves include:</paragraph><list type='bullet'><listitem><link><target>Hessian curves</target></link></listitem><listitem><link><target>Edwards curves</target></link></listitem><listitem><link><target>Twisted curves</target></link></listitem><listitem><link><target>Twisted Hessian curves</target></link></listitem><listitem><link><target>Twisted Edwards curve</target></link></listitem><listitem><link><target>Doubling-oriented DocheIcartKohel curve</target></link></listitem><listitem><link><target>Tripling-oriented DocheIcartKohel curve</target></link></listitem><listitem><link><target>Jacobian curve</target></link></listitem><listitem><link><target>Montgomery curve</target></link></listitem></list><heading level='2'>See also</heading><list type='bullet'><listitem><link><target>Cryptocurrency</target></link></listitem><listitem><link><target>Curve25519</target></link></listitem><listitem><link><target>DNSCurve</target></link></listitem><listitem><link><target>ECC patents</target></link></listitem><listitem><link><target>ECDH</target></link></listitem><listitem><link><target>Elliptic Curve Digital Signature Algorithm</target></link></listitem><listitem><link><target>ECMQV</target></link></listitem><listitem><link><target>Elliptic curve point multiplication</target></link></listitem><listitem><link><target>Homomorphic Signatures for Network Coding</target></link></listitem><listitem><link><target>Pairing-based cryptography</target></link></listitem><listitem><link><target>Public-key cryptography</target></link></listitem><listitem><link><target>Quantum cryptography</target></link></listitem></list><heading level='2'>Notes</heading><paragraph><template><target>Reflist</target><arg>30em</arg></template></paragraph><heading level='2'>References</heading><paragraph><template><target>refbegin</target></template></paragraph><list type='bullet'><listitem><link><target>SECG</target><part>Standards for Efficient Cryptography Group (SECG)</part></link>,<space/><link type='external' href='http://www.secg.org/download/aid-385/sec1_final.pdf'>SEC 1: Elliptic Curve Cryptography</link>, Version 1.0, September 20, 2000.</listitem><listitem>D. Hankerson, A. Menezes, and S.A. Vanstone,<space/><italics>Guide to Elliptic Curve Cryptography</italics>, Springer-Verlag, 2004.</listitem><listitem>I. Blake, G. Seroussi, and N. Smart,<space/><italics>Elliptic Curves in Cryptography</italics>, London Mathematical Society 265, Cambridge University Press, 1999.</listitem><listitem>I. Blake, G. Seroussi, and N. Smart, editors,<space/><italics>Advances in Elliptic Curve Cryptography</italics>, London Mathematical Society 317, Cambridge University Press, 2005.</listitem><listitem>L. Washington,<space/><italics>Elliptic Curves: Number Theory and Cryptography</italics>, Chapman &amp; Hall / CRC, 2003.</listitem><listitem><link type='external' href='http://www.nsa.gov/business/programs/elliptic_curve.shtml'>The Case for Elliptic Curve Cryptography</link>, National Security Agency</listitem><listitem><link type='external' href='http://www.certicom.com/index.php/ecc-tutorial'>Online Elliptic Curve Cryptography Tutorial</link>, Certicom Corp.</listitem><listitem>K. Malhotra, S. Gardner, and R. Patz, Implementation of Elliptic-Curve Cryptography on Mobile Healthcare Devices, Networking, Sensing and Control, 2007 IEEE International Conference on, London, 1517 April 2007 Page(s):239244</listitem><listitem>Saikat Basu,<space/><link type='external' href='http://ijns.jalaxy.com.tw/contents/ijns-v14-n2/ijns-2012-v14-n2-p101-108.pdf'>A New Parallel Window-Based Implementation of the Elliptic Curve Point Multiplication in Multi-Core Architectures</link>, International Journal of Network Security, Vol. 13, No. 3, 2011, Page(s):234241</listitem><listitem>Christof Paar, Jan Pelzl,<space/><link type='external' href='http://wiki.crypto.rub.de/Buch/movies.php'>&quot;Elliptic Curve Cryptosystems&quot;</link>, Chapter 9 of &quot;Understanding Cryptography, A Textbook for Students and Practitioners&quot;. (companion web site contains online cryptography course that covers elliptic curve cryptography), Springer, 2009.</listitem><listitem>Luca De Feo, David Jao, Jerome Plut,<space/><link type='external' href='http://eprint.iacr.org/2011/506'>Towards quantum-resistant cryptosystems from supersingular elliptic curve isogenies</link>, Springer 2011.</listitem></list><paragraph><template><target>refend</target></template></paragraph><list type='bullet'><listitem><link type='external' href='http://archive.numdam.org/ARCHIVE/MSMF/MSMF_1978__57_/MSMF_1978__57__1_0/MSMF_1978__57__1_0.pdf'>Jacques Vlu, ''Courbes elliptiques (...)'', Socit Mathmatique de France, '''57''', 1-152, Paris, 1978.</link></listitem></list><heading level='2'>External links</heading><paragraph><template><target>Commons</target><arg>Elliptic curve</arg></template></paragraph><list type='bullet'><listitem><link type='external' href='http://www.certicom.com/index.php/ecc-tutorial'>Certicom ECC Tutorial</link></listitem><listitem><link type='external' href='http://arstechnica.com/security/2013/10/a-relatively-easy-to-understand-primer-on-elliptic-curve-cryptography/'>a relatively easy to understand primer on elliptic curve cryptography</link></listitem><listitem><link type='external' href='http://www.imperialviolet.org/2010/12/04/ecc.html'>Elliptic curves and their implementation</link><space/>by Adam Langley (OpenSSL dev).</listitem><listitem><link type='external' href='http://sagenb.org/home/pub/1126/'>Interactive introduction to elliptic curves and elliptic curve cryptography with SAGE</link></listitem><listitem><link type='external' href='http://www.numberphile.com/videos/NSA1.html'>How did the NSA hack our e-mails?</link><space/>explained by Mathematician<space/><link><target>Edward Frenkel</target></link></listitem><listitem><link type='external' href='http://blog.cr.yp.to/20140323-ecdsa.html'>How to design an elliptic-curve signature system</link><space/>by<space/><link><target>Daniel J. Bernstein</target></link></listitem></list><paragraph><template><target>Cryptography navbox</target><arg>public-key</arg></template></paragraph><paragraph><link><target>Category:Elliptic curve cryptography</target></link><link><target>Category:Public-key cryptography</target></link><link><target>Category:Finite fields</target></link></paragraph></article>