<article title='Collation'><paragraph><template><target>about</target><arg>collation in library, information, and computer science</arg></template><bold>Collation</bold><space/>is the assembly of written information into a standard order. Many systems of collation are based on<space/><link><target>number</target><part>numerical order</part></link><space/>or<space/><link><target>alphabetical order</target></link>, or extensions and combinations thereof. Collation is a fundamental element of most office<space/><link><target>File system</target><part>filing systems</part></link>,<space/><link><target>library catalog</target><trail>s</trail></link><space/>and<space/><link><target>reference book</target><trail>s</trail></link>.</paragraph><paragraph>Collation differs from<space/><italics><link><target>Document classification</target><part>classification</part></link></italics><space/>in that classification is concerned with arranging information into logical categories, while collation is concerned with the ordering of items of information, usually based on the form of their<space/><link><target>identifier</target><trail>s</trail></link>. Formally speaking, a collation method typically defines a<space/><link><target>total order</target></link><space/>on a set of possible identifiers, called<space/><link><target>sort key</target><trail>s</trail></link>, which consequently produces a<space/><link><target>total preorder</target></link><space/>on the set of items of information (items with the same identifier are not placed in any defined order).</paragraph><paragraph>A collation algorithm such as the<space/><link><target>Unicode collation algorithm</target></link><space/>defines an order through the process of comparing two given<space/><link><target>character string</target><trail>s</trail></link><space/>and deciding which should come before the other. When an order has been defined in this way, a<space/><italics><link><target>sorting algorithm</target></link></italics><space/>can be used to put a list of any number of items into that order.</paragraph><paragraph>The main advantage of collation is that it makes it fast and easy for a user to find an element in the list, or to confirm that it is absent from the list. In automatic systems this can be done using a<space/><link><target>binary search algorithm</target></link><space/>or<space/><link><target>interpolation search</target></link>; manual searching may be performed using a roughly similar procedure, though this will often be done unconsciously. Other advantages are that one can easily find the first or last elements on the list (most likely to be useful in the case of numerically sorted data), or elements in a given range (useful again in the case of numerical data, and also with alphabetically ordered data when one may be sure of only the first few letters of the sought item or items).</paragraph><heading level='2'>Numerical and chronological order</heading><paragraph>Strings representing<space/><link><target>number</target><trail>s</trail></link><space/>may be sorted based on the values of the numbers that they represent. For example, &quot;-4&quot;, &quot;2.5&quot;, &quot;10&quot;, &quot;89&quot;, &quot;30,000&quot;. Note that pure application of this method may provide only a partial ordering on the strings, since different strings can represent the same number (as with &quot;2&quot; and &quot;2.0&quot;, or when<space/><link><target>scientific notation</target></link><space/>is used, &quot;2e3&quot; and &quot;2000&quot;).</paragraph><paragraph>A similar approach may be taken with strings representing<space/><link><target>calendar date</target><part>date</part><trail>s</trail></link><space/>or other items that can be ordered chronologically or in some other natural fashion.</paragraph><heading level='2'>Alphabetical order</heading><paragraph><template><target>Main</target><arg>Alphabetical order</arg></template><link><target>Alphabetical order</target></link><space/>is the basis for many systems of collation where items of information are identified by strings consisting principally of<space/><link><target>letter (alphabet)</target><part>letter</part><trail>s</trail></link><space/>from an<space/><link><target>alphabet</target></link>. The ordering of the strings relies on the existence of a standard ordering for the letters of the alphabet in question. (The system is not limited to alphabets in the strict technical sense; languages that use a<space/><link><target>syllabary</target></link><space/>or<space/><link><target>abugida</target></link>, for example<space/><link><target>Cherokee language</target><part>Cherokee</part></link>, can use the same ordering principle provided there is a set ordering for the symbols used.)</paragraph><paragraph>To decide which of two strings comes first in alphabetical order, initially their first letters are compared. The string whose first letter appears earlier in the alphabet comes first in alphabetical order. If the first letters are the same, then the second letters are compared, and so on, until the order is decided. (If one string runs out of letters to compare, then it is deemed to come first; for example, &quot;cart&quot; comes before &quot;carthorse&quot;.) The result of arranging a set of strings in alphabetical order is that words with the same first letter are grouped together, and within such a group words with the same first two letters are grouped together and so on.</paragraph><paragraph><link><target>Capital letter</target><trail>s</trail></link><space/>are typically treated as equivalent to their corresponding lowercase letters. (For alternative treatments in computerized systems, see<space/><link><target>#Automated collation</target><part>Automated collation</part></link>, below.)</paragraph><paragraph>Certain limitations, complications and special conventions may apply when alphabetical order is used:</paragraph><list type='bullet'><listitem>When strings contain<space/><link><target>space (character)</target><part>space</part><trail>s</trail></link><space/>or other word dividers, the decision must be taken whether to ignore these dividers or to treat them as &quot;letters&quot; preceding all other letters of the alphabet. For example, if the first approach is taken then &quot;car park&quot; will come after &quot;carbon&quot; and &quot;carp&quot; (as it would if it were written &quot;carpark&quot;), whereas in the second approach &quot;car park&quot; will come before those two words. The first rule is used in many (but not all)<space/><link><target>Dictionary</target><part>dictionaries</part></link>, the second in<space/><link><target>Telephone directory</target><part>telephone directories</part></link><space/>(so that Wilson, Jim K appears with other people named Wilson, Jim and not after Wilson, Jimbo).<space/></listitem><listitem>Abbreviations may be treated as if they were spelt out in full. For example, names containing &quot;St.&quot; (short for the English word<space/><italics><link><target>Saint</target></link></italics>) are often ordered as if they were written out as &quot;Saint&quot;. There is also a traditional convention in English that surnames beginning<space/><italics>Mc</italics><space/>and<space/><italics>M</italics>' are listed as if those prefixes were written<space/><italics>Mac</italics>.</listitem><listitem>Strings that represent personal names will often be listed by alphabetical order of surname, even if the<space/><link><target>given name</target></link><space/>comes first. For example, Juan Hernandes and Brian O'Leary should be sorted as &quot;Hernandes, Juan&quot; and &quot;O'Leary, Brian&quot; even if they are not written this way.</listitem><listitem>Very common initial words, such as<space/><italics>The</italics><space/>in English, are often ignored for sorting purposes. So<space/><italics><link><target>The Shining (novel)</target><part>The Shining</part></link></italics><space/>would be sorted as just &quot;Shining&quot; or &quot;Shining, The&quot;.</listitem><listitem>When some of the strings contain<space/><link><target>Numerical digit</target><part>numerals</part></link><space/>(or other non-letter characters), various approaches are possible. Sometimes such characters are treated as if they came before or after all the letters of the alphabet. Another method is for numbers to be sorted alphabetically as they would be spelled: for example<space/><italics><link><target>1776 (film)</target><part>1776</part></link></italics><space/>would be sorted as if spelled out &quot;seventeen seventy-six&quot;, and<space/><italics><link><target>24 heures du Mans</target></link></italics><space/>as if spelled &quot;vingt-quatre...&quot; (French for &quot;twenty-four&quot;). When numerals or other symbols are used as special graphical forms of letters, as in<space/><italics>1337</italics><space/>for<space/><link><target>leet</target></link><space/>or<space/><italics>Se7en</italics><space/>for the movie title<space/><italics><link><target>Seven (1995 film)</target><part>Seven</part></link></italics>, they may be sorted as if they were those letters.</listitem><listitem>Languages have different conventions for treating<space/><link><target>modified letter</target><trail>s</trail></link><space/>and certain letter combinations. For example, in<space/><link><target>Spanish language</target><part>Spanish</part></link><space/>the letter<space/><italics></italics><space/>is treated as a basic letter following<space/><italics>n</italics>, and the<space/><link><target>digraph (orthography)</target><part>digraph</part><trail>s</trail></link><space/><italics>ch</italics><space/>and<space/><italics>ll</italics><space/>were formerly (until 1994) treated as basic letters following<space/><italics>c</italics><space/>and<space/><italics>l</italics>, although they are now alphabetized as two-letter combinations. A list of such conventions for various languages can be found at<space/><template><target>p/s</target><arg>Alphabetical order</arg><arg>Language-specific conventions</arg></template>.</listitem></list><paragraph>In several languages the rules have changed over time, and so older dictionaries may use a different order than modern ones. Furthermore, collation may depend on use. For example, German<space/><link><target>dictionaries</target></link><space/>and<space/><link><target>telephone directories</target></link><space/>use different approaches.</paragraph><heading level='2'>Radical-and-stroke sorting</heading><list type='ident'><listitem><italics>See also<space/><link><target>Chinese characters#Indexing</target><part>Indexing of Chinese characters</part></link></italics></listitem></list><paragraph>Another form of collation is<space/><bold>radical-and-stroke sorting</bold>, used for non-alphabetic writing systems such as the<space/><link><target>hanzi</target></link><space/>of<space/><link><target>Chinese language</target><part>Chinese</part></link><space/>and the<space/><link><target>kanji</target></link><space/>of<space/><link><target>Japanese language</target><part>Japanese</part></link>, whose thousands of symbols defy ordering by convention. In this system, common components of characters are identified; these are called<space/><link><target>radical (Chinese character)</target><part>radicals</part></link><space/>in Chinese and logographic systems derived from Chinese. Characters are then grouped by their primary radical, then ordered by number of pen strokes within radicals. When there is no obvious radical or more than one radical, convention governs which is used for collation. For example, the Chinese character (meaning &quot;mother&quot;) is sorted as a six-stroke character under the three-stroke primary radical .</paragraph><paragraph>The radical-and-stroke system is cumbersome compared to an alphabetical system in which there are a few characters, all unambiguous. The choice of which components of a logograph comprise separate radicals and which radical is primary is not clear-cut. As a result, logographic languages often supplement radical-and-stroke ordering with alphabetic sorting of a phonetic conversion of the logographs. For example, the kanji word<space/><italics></italics>Tky'' (), the Japanese name of<space/><link><target>Tokyo</target></link>, can be sorted as if it were spelled out in the Japanese characters of the<space/><link><target>hiragana</target></link><space/>syllabary as &quot;to-u-ki-<xhtml:sub>yo</xhtml:sub>-u&quot; (), using the conventional sorting order for these characters.<template><target>citation needed</target><arg name="date">October 2012</arg></template></paragraph><paragraph>In addition, in Greater China,<space/><link><target>surname stroke order</target><trail>ing</trail></link><space/>is a convention in some official documents where people's names are listed without hierarchy.</paragraph><paragraph>The radical-and-stroke system, or some similar pattern-matching and stroke-counting method, was traditionally the only practical method for constructing dictionaries that someone could use to look up a logograph whose pronunciation was unknown. With the advent of computers, dictionary programs are now available that allow one to &quot;handwrite&quot; a character using a mouse or stylus.<template><target>citation needed</target><arg name="date">October 2012</arg></template></paragraph><heading level='2'>Automated collation</heading><paragraph>When information is stored in digital systems, collation may become an automated process. It is then necessary to implement an appropriate collation<space/><link><target>algorithm</target></link><space/>that allows the information to be sorted in a satisfactory manner for the application in question. Often the aim will be to achieve an alphabetical or numerical ordering that follows the standard criteria as described in the preceding sections. However, not all of these criteria are easy to automate.</paragraph><preblock><preline></preline></preblock><paragraph>The simplest kind of automated collation is based on the numerical codes of the symbols in a<space/><link><target>character set</target></link>, such as<space/><link><target>ASCII</target></link><space/>coding (or any of its<space/><link><target>superset</target><trail>s</trail></link><space/>such as<space/><link><target>Unicode</target></link>), with the symbols being ordered in increasing numerical order of their codes, and this ordering being extended to strings in accordance with the basic principles of alphabetical ordering (mathematically speaking,<space/><link><target>lexicographical order</target><trail>ing</trail></link>). So a computer program might treat the characters<space/><italics>a</italics>,<space/><italics>b</italics>,<space/><italics>C</italics>,<space/><italics>d</italics><space/>and<space/><italics>$</italics><space/>as being ordered<space/><italics>$</italics>,<space/><italics>C</italics>,<space/><italics>a</italics>,<space/><italics>b</italics>,<space/><italics>d</italics><space/>(the corresponding ASCII codes are<space/><italics>$</italics><space/>= 36,<space/><italics>a</italics><space/>= 97,<space/><italics>b</italics><space/>= 98,<space/><italics>C</italics><space/>= 67, and<space/><italics>d</italics><space/>= 100). Therefore, strings beginning with<space/><italics>C</italics><space/>(or any other capital letter) would be sorted before strings with lower-case<space/><italics>a</italics>,<space/><italics>b</italics>, etc. This is sometimes called<space/><italics><link><target>ASCIIbetical order</target></link></italics>.</paragraph><paragraph>The above method has the disadvantage that it can deviate from the standard alphabetical order that human users would expect, particularly due to the unexpected ordering of capital letters before all lower-case ones (and possibly the unexpected treatment of spaces and other non-letter characters). It is therefore often applied with certain refinements, the most obvious being the conversion of capitals to lowercase before comparing ASCII values.</paragraph><paragraph>In many collation algorithms, the comparison is based not on the numerical codes of the characters, but with reference to the<space/><bold>collating sequence</bold><space/>a sequence in which the characters are assumed to come for the purpose of collation as well as other ordering rules appropriate to the given application. This can serve to apply the correct conventions used for alphabetical ordering in the language in question, dealing properly with differently cased letters,<space/><link><target>modified letter</target><trail>s</trail></link>,<space/><link><target>digraph (orthography)</target><part>digraphs</part></link>, particular abbreviations and so on, as mentioned above under<space/><link><target>#Alphabetical order</target><part>Alphabetical order</part></link>, and in detail in the<space/><link><target>Alphabetical order</target></link><space/>article. Such algorithms are potentially quite complex, possibly requiring several passes through the text.<extension extension_name='ref'><link type='external' href='http://books.google.pl/books?id=5Pd_iFM4eLsC&amp;amp;pg=PA278&amp;amp;dq=%22collation+algorithms%22&amp;amp;hl=pl&amp;amp;sa=X&amp;amp;ei=2k-yT_GVEIrP4QSSx428CQ&amp;amp;redir_esc=y#v=onepage&amp;amp;q=%22collation%20algorithms%22&amp;amp;f=false'>''M Programming: A Comprehensive Guide''</link>, Richard F. Walters, Digital Press, 1997</extension></paragraph><paragraph>Problems are nonetheless still common when the algorithm has to encompass more than one language. For example, in<space/><link><target>German (language)</target><part>German</part></link><space/>dictionaries the word<space/><italics>konomisch</italics><space/>comes between<space/><italics>offenbar</italics><space/>and<space/><italics>olfaktorisch</italics>, while<space/><link><target>Turkish (language)</target><part>Turkish</part></link><space/>dictionaries treat<space/><italics>o</italics><space/>and<space/><italics></italics><space/>as different letters, placing<space/><italics>oyun</italics><space/>before<space/><italics>br</italics>.</paragraph><paragraph>A standard algorithm for collating any collection of strings composed of any standard<space/><link><target>Unicode</target></link><space/>symbols is the<space/><link><target>Unicode Collation Algorithm</target></link>. This can be adapted to use the appropriate collation sequence for a given language by tailoring its default collation table. Several such tailorings are collected in<space/><link><target>Common Locale Data Repository</target></link>.</paragraph><heading level='3'>Sort keys</heading><paragraph><template><target>redirect</target><arg>Sort key</arg><arg>sort keys in Wikipedia</arg><arg>WP:SORTKEY</arg></template>In some applications, the strings by which items are collated may differ from the identifiers that are displayed. For example,<space/><italics>The Shining</italics><space/>might be sorted as<space/><italics>Shining, The</italics><space/>(see<space/><link><target>#Alphabetical order</target><part>Alphabetical order</part></link><space/>above), but it may still be desired to display it as<space/><italics>The Shining</italics>. In this case two sets of strings can be stored, one for display purposes, and another for collation purposes. Strings used for collation in this way are called<space/><italics>sort keys</italics>.</paragraph><heading level='3'>Issues with numbers</heading><paragraph>Sometimes, it is desired to order text with embedded numbers using proper numerical order. For example, &quot;Figure 7b&quot; goes before &quot;Figure 11a&quot;, even though '7' comes after '1' in Unicode. This can be extended to<space/><link><target>Roman numeral</target><trail>s</trail></link>. This behavior is not particularly difficult to produce as long as only integers are to be sorted, although it can slow down sorting significantly. For example,<space/><link><target>Windows XP</target></link><space/>does this when sorting<space/><link><target>file name</target><trail>s</trail></link>.</paragraph><paragraph>Sorting decimals properly is a bit more difficult, because different locales use different symbols for a<space/><link><target>decimal separator</target><part>decimal point</part></link>, and sometimes the same character used as a decimal point is also used as a separator, for example &quot;Section 3.2.5&quot;. There is no universal answer for how to sort such strings; any rules are application dependent.</paragraph><paragraph>Ascending order of numbers differs from alphabetical order, e.g. 11 comes alphabetically before 2. This can be fixed with<space/><link><target>leading zero</target><trail>s</trail></link>: 02 comes alphabetically before 11. See e.g.<space/><link><target>ISO 8601</target></link>.</paragraph><paragraph>Also 13 comes alphabetically after 12 although it is less. With negative numbers, to make ascending order correspond with alphabetical sorting, more drastic measures are needed such as adding a constant to all numbers to make them all positive.</paragraph><heading level='2'>Labeling of ordered items</heading><paragraph>In some contexts, numbers and letters are used not so much as a basis for establishing an ordering, but as a means of labeling items that are already ordered. For example, pages, sections, chapters and the like, as well as the items of lists, are frequently &quot;numbered&quot; in this way. Labeling series that may be used include ordinary<space/><link><target>Arabic numerals</target></link><space/>(1, 2, 3, ...),<space/><link><target>Roman numerals</target></link><space/>(I, II, III, ... or i, ii, iii, ...), or letters (A, B, C, ... or a, b, c, ...). (An alternative method for indicating list items, without numbering them, is to use a<space/><link><target>bulleted list</target></link>.)</paragraph><paragraph>When letters of an alphabet are used for this purpose of<space/><link><target>enumeration</target></link>, there are certain language-specific conventions as to which letters are used. For example, the<space/><link><target>Russian alphabet</target><part>Russian</part></link><space/>letters<space/><link><target></target></link><space/>and<space/><link><target></target></link><space/>(which in writing are only used for modifying the preceding<space/><link><target>consonant</target></link>), and usually also<space/><link><target></target></link>,<space/><link><target></target></link><space/>and<space/><link><target></target></link>, are usually omitted. Also in many languages that use extended<space/><link><target>Latin script</target></link>, the<space/><link><target>modified letter</target><trail>s</trail></link><space/>are often not used in enumeration.</paragraph><heading level='2'>See also</heading><list type='bullet'><listitem><link><target>Alphabetical order</target></link></listitem><listitem><link><target>ASCII#order</target><part>Asciibetical Order</part></link></listitem><listitem><link><target>Hotchpot</target></link></listitem><listitem><link><target>Sorting</target></link></listitem><listitem><link><target>Taxonomic sequence</target></link></listitem><listitem><link><target>Mac and Mc together</target></link></listitem><listitem><link><target>Unicode equivalence</target></link></listitem></list><heading level='2'>Notes</heading><paragraph><template><target>Reflist</target></template></paragraph><heading level='2'>External links and references</heading><paragraph><template><target>Wiktionary</target><arg>collation</arg><arg>alphabetization</arg></template></paragraph><list type='bullet'><listitem><link type='external' href='http://www.unicode.org/unicode/reports/tr10/'>Unicode Collation Algorithm</link>: Unicode Technical Standard #10</listitem><listitem><link type='external' href='http://spanish.about.com/library/weekly/aa092099.htm#letters'>Collation in Spanish</link></listitem><listitem><link type='external' href='http://www.un.org/Overview/unmember.html'>Collation of the names of the member states of the United Nations</link></listitem><listitem><link type='external' href='http://www.w3.org/TR/css3-lists'>Typographical collation for many languages</link>, as proposed in the List module of<space/><link><target>Cascading Style Sheets</target></link>.</listitem><listitem><link type='external' href='http://www.collation-charts.org/'>Collation Charts</link>: Charts demonstrating language-specific sorting orders in various operating systems and DBMS</listitem><listitem><link type='external' href='http://demo.icu-project.org/icu-bin/locexp?_=en_US&amp;amp;x=col'>ICU Locale Explorer</link>: An online demonstration of sorting in different languages that uses the<space/><link><target>Unicode Collation Algorithm</target></link><space/>with<space/><link><target>International Components for Unicode</target></link></listitem></list><paragraph><link><target>Category:Collation</target><part></part></link></paragraph><paragraph><link><target>ca:Ordre alfabtic</target></link><link><target>cs:Abecedn azen</target></link><link><target>cy:Coladu</target></link><link><target>de:Alphabetische Sortierung</target></link><link><target>fr:Classement alphabtique</target></link><link><target>gl:Orde alfabtica</target></link><link><target>hi:</target></link><link><target>hr:Abecedno redanje</target></link><link><target>is:Stafrfsr</target></link><link><target>it:Ordine alfabetico</target></link><link><target>he:</target></link><link><target>ltg:Alfabetiskuo pardavuoona</target></link><link><target>ml:</target></link><link><target>mr:</target></link><link><target>nl:Alfabetische volgorde</target></link><link><target>pl:Porzdek alfabetyczny</target></link><link><target>pt:Ordem alfabtica</target></link><link><target>ro:Ordine alfabetic</target></link><link><target>simple:Alphabetical order</target></link><link><target>fi:Aakkosjrjestys</target></link><link><target>tr:Alfabetik</target></link></paragraph></article>