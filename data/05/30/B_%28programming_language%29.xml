<article title='B_%28programming_language%29'><paragraph><template><target>about</target><arg>a language developed at Bell Labs</arg><arg>"B" language of Meertens and Pemberton</arg><arg>ABC (programming language)</arg><arg>other uses</arg><arg>B (disambiguation)</arg></template><template><target>Infobox programming language</target><arg name="name"><space/>B
</arg><arg name="logo">
</arg><arg name="caption">
</arg><arg name="paradigm">
</arg><arg name="year"><space/>{{start date and age|1969}}<ref>http://www.britannica.com/EBchecked/topic/1663863/B</ref>
</arg><arg name="designer"><space/>[[Ken Thompson (computer programmer)|Ken Thompson]]
</arg><arg name="developer"><space/>[[Ken Thompson (computer programmer)|Ken Thompson]], [[Dennis Ritchie]]
</arg><arg name="latest_release_version">
</arg><arg name="latest_release_date">
</arg><arg name="latest_test_version">
</arg><arg name="latest_test_date">
</arg><arg name="turing-complete"><space/>yes
</arg><arg name="typing"><space/>typeless (everything is a [[Word (computer architecture)|word]])
</arg><arg name="implementations">
</arg><arg name="dialects">
</arg><arg name="influenced_by"><space/>[[BCPL]], [[PL/I]]
</arg><arg name="influenced"><space/>[[C (programming language)|C]]
</arg><arg name="operating_system">
</arg><arg name="license">
</arg><arg name="website">
</arg><arg name="file_ext"><space/>.b
</arg></template></paragraph><paragraph><bold>B</bold><space/>is a programming language developed at<space/><link><target>Bell Labs</target></link><space/>circa 1969. It is the work of<space/><link><target>Ken Thompson (computer programmer)</target><part>Ken Thompson</part></link><space/>with<space/><link><target>Dennis Ritchie</target></link>.</paragraph><paragraph>B was derived from<space/><link><target>BCPL</target></link>, and its name may be a contraction of BCPL. Thompson's coworker<space/><link><target>Dennis Ritchie</target></link><space/>speculated that the name might be based on Bon, an earlier, but unrelated, programming language that Thompson designed for use on<space/><link><target>Multics</target></link>.<template><target>refn</target><arg name="group">note</arg><arg name=""Its name most probably represents a contraction of BCPL, though an alternate theory holds that it derives from Bon [Thompson 69], an unrelated language created by Thompson during the Multics days. Bon in turn was named either after his wife Bonnie, or (according to an encyclopedia quotation in its manual), after [[Bon|a religion]] whose rituals involve the murmuring of magic formulas."<ref name">"chist">{{cite journal| first<space/></arg></template></paragraph><paragraph>B was designed for recursive, non-numeric, machine independent applications, such as system and language software.<extension extension_name='ref' name="bur"><template><target>cite web</target><arg name="first"><space/>Ken
</arg><arg name="last"><space/>Thompson
</arg><arg name="authorlink"><space/>Ken Thompson (computer programmer)
</arg><arg name="title"><space/>Users' Reference to B
</arg><arg name="date"><space/>7 January 1972
</arg><arg name="accessdate"><space/>21 March 2014
</arg><arg name="publisher"><space/>Bell Laboratories
</arg><arg name="url"><space/>https://www.bell-labs.com/usr/dmr/www/kbman.pdf
</arg><arg name="archiveurl"><space/>https://web.archive.org/web/20150317033259/https://www.bell-labs.com/usr/dmr/www/kbman.pdf
</arg><arg name="archivedate"><space/>11 June 2015
</arg></template></extension></paragraph><heading level='2'>History</heading><paragraph>Initially Ken Thompson<extension extension_name='ref' name="chist"></extension><space/>and later Dennis Ritchie<extension extension_name='ref' name="bur"></extension><space/>developed B basing it mainly on the<space/><link><target>BCPL</target></link><space/>language Thompson used in the<space/><link><target>Multics</target></link><space/>project. B was essentially the BCPL system stripped of any component Thompson felt he could do without in order to make it fit within the memory capacity of the minicomputers of the time. The BCPL to B transition also included changes made to suit Thompson's preferences (mostly along the lines of reducing the number of non-whitespace characters in a typical program).<extension extension_name='ref' name="chist"></extension><space/>Much of the typical ALGOL-like syntax of BCPL was rather heavily changed in this process, such as the<space/><xhtml:tt><list type='ident'><listitem>=</listitem></list></xhtml:tt><space/>and<space/><xhtml:tt>=</xhtml:tt><space/>operators which were replaced with<space/><xhtml:tt>=</xhtml:tt><space/>for assignment and<space/><xhtml:tt>==</xhtml:tt><space/>for equality test. (The<space/><xhtml:tt>&amp;</xhtml:tt><space/>and<space/><xhtml:tt>|</xhtml:tt><space/>of BCPL was later changed to<space/><xhtml:tt>&amp;&amp;</xhtml:tt><space/>and<space/><xhtml:tt>||</xhtml:tt><space/>in the transition to what is now known as C.)<space/><extension extension_name='ref' name="chist"></extension><space/>The assignment operator went back to &quot;=&quot; of<space/><link><target>Heinz Rutishauser</target><part>Rutishauser</part></link>'s programming language Superplan, which had influenced<space/><link><target>ALGOL 58</target></link>, that added a colon.</paragraph><paragraph>Thompson invented arithmetic assignment operators for B, using<space/><xhtml:code>x =+ y</xhtml:code><space/>to add y to x (in the C programming language the operator is spelled as<space/><xhtml:code>+=</xhtml:code>). B also introduced the increment and decrement operators (++ and --); Their prefix or postfix position determines whether the value is taken prior or post alteration of the operand. These innovations were not in the earliest versions of B. Some guess that they were created for the auto-increment and auto-decrement address modes of the<space/><link><target>Digital Equipment Corporation</target><part>DEC</part></link><space/><link><target>PDP-11</target></link>. This is historically impossible as there was no PDP-11 at the time that B was developed.<extension extension_name='ref' name="chist"></extension></paragraph><paragraph>B is typeless, or more precisely has one data type: the computer word. Most operators (e.g., +, -, *, /) treated this as an integer, but others treated it as a memory address to be de<link><target>reference (computer science)</target><part>referenced</part></link>. In many other ways it looked a lot like an early version of C. There are a few library functions, including some that vaguely resemble functions from the<space/><link><target>stdio.h</target><part>standard I/O library</part></link><space/>in C.<extension extension_name='ref' name="bur"></extension></paragraph><paragraph>Early implementations were for the DEC<space/><link><target>PDP-7</target></link><space/>and PDP-11 minicomputers using early<space/><link><target>Unix</target></link>, and<space/><link><target>Honeywell</target></link><space/><template><target>nowrap</target><arg>[[GE-600 series|GE 645]]</arg></template><extension extension_name='ref' name="Evolution"><template><target>cite journal</target><arg name="first">Dennis M.<space/></arg><arg name="last">Ritchie<space/></arg><arg name="title">The Evolution of the Unix Time-sharing System<space/></arg><arg name="url">https://www.bell-labs.com/usr/dmr/www/hist.html<space/></arg><arg name="archiveurl">https://web.archive.org/web/20150611114353/https://www.bell-labs.com/usr/dmr/www/hist.html<space/></arg><arg name="archivedate">11 June 2015<space/></arg><arg name="journal">AT&T Bell Laboratories Technical Journal<space/></arg><arg name="volume">63<space/></arg><arg name="number">6 Part 2<space/></arg><arg name="year">1984<space/></arg><arg name="pages">1577–1593</arg></template></extension><space/>36-bit mainframes running the operating system<space/><link><target>General Comprehensive Operating System</target><part>GCOS</part></link>. The earliest PDP-7 implementations compiled to<space/><link><target>threaded code</target></link>, and Ritchie wrote a compiler using<space/><link><target>TMG (language)</target><part>TMG</part></link><space/>which produced machine code.<extension extension_name='ref'><template><target>cite web</target><arg name="url">http://www.multicians.org/tmg.html<space/></arg><arg name="title">TMG<space/></arg><arg name="publisher">multicians.org</arg></template></extension><extension extension_name='ref'><template><target>cite web</target><arg name="url">https://www.bell-labs.com/usr/dmr/www/chist.html<space/></arg><arg name="archiveurl">https://web.archive.org/web/20150611114355/https://www.bell-labs.com/usr/dmr/www/chist.html<space/></arg><arg name="archivedate">11 June 2015<space/></arg><arg name="title">The Development of the C Language<space/></arg><arg name="first">Dennis M.<space/></arg><arg name="last">Ritchie<space/></arg><arg name="authorlink">Dennis Ritchie<space/></arg><arg name="publisher">Bell Labs/Lucent Technologies</arg></template></extension><extension extension_name='ref' name="reader"><template><target>cite techreport</target><arg name="first1">M. D.<space/></arg><arg name="last1">McIlroy<space/></arg><arg name="authorlink1">Doug McIlroy<space/></arg><arg name="year">1987<space/></arg><arg name="url">http://www.cs.dartmouth.edu/~doug/reader.pdf<space/></arg><arg name="title">A Research Unix reader: annotated excerpts from the Programmer's Manual, 1971–1986<space/></arg><arg name="series">CSTR<space/></arg><arg name="number">139<space/></arg><arg name="institution">Bell Labs</arg></template></extension><space/>In 1970 a PDP-11 was acquired and threaded code was used for the port; an assembler,<space/><xhtml:tt><link><target>dc (Unix)</target><part>dc</part></link></xhtml:tt>, and the B language itself were written in B to<space/><link><target>bootstrap</target></link><space/>the computer. An early version of<space/><link><target>yacc</target></link><space/>was produced with this PDP-11 configuration. Ritchie took over maintenance during this period.<extension extension_name='ref' name="chist"></extension><template><target>r</target><arg>reader</arg></template></paragraph><paragraph>The typeless nature of B made sense on the Honeywell, PDP-7 and many older computers, but was a problem on the PDP-11 because it was difficult to elegantly access the character data type that the PDP-11 and most modern computers fully support. Starting in 1971 Ritchie made changes to the language while converting its compiler to produce machine code, most notably adding data typing for variables. During 1971 and 1972 B evolved into &quot;New B&quot; (NB) and then C.<extension extension_name='ref' name="chist"></extension></paragraph><paragraph>B is almost extinct, having been superseded by the<space/><link><target>C (programming language)</target><part>C language</part></link>.<extension extension_name='ref' name="plb"></extension><space/>However, it continues to see use (<template><target>as of</target><arg>2014</arg><arg name="lc">y</arg></template>) on GCOS mainframes,<extension extension_name='ref' name="uwtools"><template><target>cite web</target><arg name="title"><space/>Thinkage UW Tools Package
</arg><arg name="accessdate"><space/>26 March 2014
</arg><arg name="publisher"><space/>Thinkage, Ltd.
</arg><arg name="url"><space/>http://www.thinkage.ca/english/gcos/product-uwtools.shtml
</arg></template></extension><space/>and on certain<space/><link><target>embedded systems</target></link><space/>(<template><target>as of</target><arg>2000</arg><arg name="lc">y</arg></template>) for a variety of reasons, including limited hardware in the small systems; extensive libraries, tools, licensing cost issues; and simply being good enough for the job on others.<extension extension_name='ref' name="plb"><template><target>cite web</target><arg name="last"><space/>Johnson and Kernighan
</arg><arg name="authorlink"><space/>Stephen C. Johnson
</arg><arg name="title"><space/>THE PROGRAMMING LANGUAGE B
</arg><arg name="accessdate"><space/>21 March 2014
</arg><arg name="publisher"><space/>Bell Laboratories
</arg><arg name="url"><space/>https://www.bell-labs.com/usr/dmr/www/bintro.html
</arg><arg name="archiveurl"><space/>https://web.archive.org/web/20150611114355/https://www.bell-labs.com/usr/dmr/www/bintro.html
</arg><arg name="archivedate"><space/>11 June 2015
</arg></template></extension><space/>The highly influential<space/><link><target>AberMUD</target></link><space/>was originally written in B.</paragraph><heading level='2'>Examples</heading><paragraph>The following example is from the<space/><italics>Users' Reference to B</italics><space/>by Ken Thompson:<extension extension_name='ref' name="bur"></extension></paragraph><paragraph><extension extension_name='syntaxhighlight' lang="c"><paragraph>/* The following function will print a non-negative number, n, to</paragraph><preblock><preline><space/><space/>the base b, where 2&lt;=b&lt;=10. This routine uses the fact that</preline><preline><space/><space/>in the ASCII character set, the digits 0 to 9 have sequential</preline><preline><space/><space/>code values. */</preline></preblock><paragraph>printn(n, b) {</paragraph><preblock><preline><space/><space/><space/><space/><space/><space/><space/>extrn putchar;</preline><preline><space/><space/><space/><space/><space/><space/><space/>auto a;</preline></preblock><preblock><preline><space/><space/><space/><space/><space/><space/><space/>if (a = n / b) /* assignment, not test for equality */</preline><preline><space/><space/><space/><space/><space/><space/><space/><space/><space/><space/><space/><space/><space/><space/><space/>printn(a, b); /* recursive */</preline><preline><space/><space/><space/><space/><space/><space/><space/>putchar(n % b + '0');</preline></preblock><paragraph>}</paragraph></extension></paragraph><heading level='2'>See also</heading><paragraph><template><target>portal bar</target><arg>Computer programming</arg><arg>Information technology</arg></template></paragraph><heading level='2'>Notes</heading><paragraph><template><target>reflist</target><arg name="group">note</arg></template></paragraph><heading level='2'>References</heading><paragraph><template><target>reflist</target></template></paragraph><heading level='2'>External links</heading><list type='bullet'><listitem><italics><link type='external' href='http://man.cat-v.org/unix-1st/1/b'>Manual page for b(1) from Unix First Edition</link></italics></listitem><listitem><italics><link type='external' href='https://www.bell-labs.com/usr/dmr/www/chist.html'>The Development of the C Language</link></italics>,<space/><link><target>Dennis Ritchie</target><part>Dennis M. Ritchie</part></link>. Puts B in the context of<space/><link><target>BCPL</target></link><space/>and<space/><link><target>C (programming language)</target><part>C</part></link>.</listitem><listitem><italics><link type='external' href='https://www.bell-labs.com/usr/dmr/www/kbman.html'>Users' Reference to B</link></italics>, Ken Thompson. Describes the<space/><link><target>PDP-11</target></link><space/>version.</listitem><listitem><italics><link type='external' href='https://www.bell-labs.com/usr/dmr/www/bintro.html'>The Programming Language B</link></italics>, S. C. Johnson &amp; B. W. Kernighan, Technical Report CS TR 8,<space/><link><target>Bell Labs</target></link><space/>(January 1973). The<space/><link><target>General Comprehensive Operating System</target><part>GCOS</part></link><space/>version on<space/><link><target>Honeywell</target></link><space/>equipment.</listitem><listitem><italics><link type='external' href='http://www.thinkage.ca/english/gcos/expl/b/index.html'>B Language Reference Manual</link></italics>, Thinkage Ltd. The production version of the language as used on GCOS, including language and runtime library.</listitem></list><paragraph><template><target>Ken Thompson navbox</target></template><template><target>Programming languages</target></template></paragraph><paragraph><link><target>Category:Procedural programming languages</target></link><link><target>Category:Programming languages created in 1969</target></link></paragraph></article>