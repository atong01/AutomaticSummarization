<article title='B%C3%A9zier_curve'><paragraph><link><target>Image:Bezier curve.svg</target><part>thumb</part><part>right</part><part>300px</part><part>Cubic Bzier curve</part></link>[[Image:Bezier basis.svg|thumb|right|300px|The<space/><link><target>basis function</target><trail>s</trail></link><space/>on the range<space/><template><target>nowrap</target><arg>''t'' in [0,1]</arg></template><space/>for cubic Bzier curves:<template><target>nowrap</target><arg name="blue: ''y''<sub>0</sub><space/>{{">}} (1 &minus; ''t'')<sup>3</sup></arg></template>,<template><target>nowrap</target><arg name="green: ''y''<sub>1</sub><space/>{{">}} 3(1 &minus; ''t'')<sup>2</sup><space/>''t''</arg></template>,<template><target>nowrap</target><arg name="red: ''y''<sub>2</sub><space/>{{">}} 3(1 &minus; ''t'') ''t''<sup>2</sup></arg></template>, and<template><target>nowrap</target><arg name="cyan: ''y''<sub>3</sub><space/>{{">}} ''t''<sup>3</sup></arg></template>.]]A<space/><bold>Bzier curve</bold><space/>is a<space/><link><target>parametric curve</target></link><space/>frequently used in<space/><link><target>computer graphics</target></link><space/>and related fields. Generalizations of Bzier curves to higher<space/><link><target>dimension</target><trail>s</trail></link><space/>are called<space/><link><target>Bzier surface</target><trail>s</trail></link>, of which the<space/><link><target>Bzier triangle</target></link><space/>is a special case.</paragraph><paragraph>In<space/><link><target>vector graphics</target></link>, Bzier curves are used to model smooth curves that can be scaled indefinitely. &quot;Paths&quot;, as they are commonly referred to in image manipulation programs,<extension extension_name='ref' group="note">Image manipulation programs such as<space/><link><target>Inkscape</target></link>,<space/><link><target>Adobe Photoshop</target></link>, and<space/><link><target>GIMP</target></link>.</extension><space/>are combinations of linked Bzier curves. Paths are not bound by the limits of<space/><link><target>rasterized image</target><trail>s</trail></link><space/>and are intuitive to modify.</paragraph><paragraph>Bzier curves are also used in the time domain, particularly in<space/><link><target>animation</target></link><space/>and<space/><link><target>user interface</target></link><extension extension_name='ref' group="note">In animation applications such as<space/><link><target>Adobe Flash</target></link>,<space/><link><target>Adobe After Effects</target></link>,<space/><link><target>Microsoft Expression Blend</target></link>,<space/><link><target>Blender (software)</target><part>Blender</part></link>,<space/><link><target>Autodesk Maya</target></link><space/>and<space/><link><target>Autodesk 3ds max</target></link>.</extension><space/>design. For example, a Bzier curve can be used to specify the velocity over time of an object such as an icon moving from A to B, rather than simply moving at a fixed number of pixels per step. When animators or<space/><link><target>Graphical user interface</target><part>interface</part></link><space/>designers talk about the &quot;physics&quot; or &quot;feel&quot; of an operation, they may be referring to the particular Bzier curve used to control the velocity over time of the move in question.</paragraph><paragraph>This also applies to robotics where the motion of a welding arm, for example, should be smooth to avoid unnecessary wear.</paragraph><paragraph>The mathematical basis for Bzier curves the<space/><link><target>Bernstein polynomial</target></link><space/>has been known since 1912, but its applicability to graphics was understood half a century later.Bzier curves were widely publicized in 1962 by the<space/><link><target>France</target><part>French</part></link><space/>engineer<space/><link><target>Pierre Bzier</target></link>, who used them to design<space/><link><target>automobile</target></link><space/>bodies at<space/><link><target>Renault</target></link>. The study of these curves was however first developed in 1959 by mathematician<space/><link><target>Paul de Casteljau</target></link><space/>using<space/><link><target>de Casteljau's algorithm</target></link>, a<space/><link><target>numerical stability</target><part>numerically stable</part></link><space/>method to evaluate Bzier curves at<space/><link><target>Citron</target></link>, another French automaker.<extension extension_name='ref' name="FarinHoschek2002"><template><target>cite book</target><arg name="author1">Gerald E. Farin</arg><arg name="author2">Josef Hoschek</arg><arg name="author3">Myung-Soo Kim</arg><arg name="title">Handbook of Computer Aided Geometric Design</arg><arg name="url">http://books.google.com/books?id</arg><arg name="year">2002</arg><arg name="publisher">Elsevier</arg><arg name="isbn">978-0-444-51104-1</arg><arg name="pages">4â€“6</arg></template></extension></paragraph><heading level='2'>Applications</heading><heading level='3'>Computer graphics</heading><paragraph><link><target>Image:Bzier curve in Adobe Illustrator CS2.png</target><part>left</part><part>thumb</part><part>Bzier path in<space/><link><target>Adobe Illustrator</target></link></part></link>Bzier curves are widely used in computer graphics to model smooth curves. As the curve is completely contained in the<space/><link><target>convex hull</target></link><space/>of its<space/><link><target>Control point (mathematics)</target><part>control points</part></link>, the points can be graphically displayed and used to manipulate the curve intuitively.<space/><link><target>Affine transformation</target><trail>s</trail></link><space/>such as<space/><link><target>translation (geometry)</target><part>translation</part></link><space/>and<space/><link><target>rotation</target></link><space/>can be applied on the curve by applying the respective transform on the control points of the curve.<template><target>cn</target><arg name="date">October 2015</arg></template></paragraph><paragraph><link><target>Quadratic function</target><part>Quadratic</part></link><space/>and<space/><link><target>Cubic function</target><part>cubic</part></link><space/>Bzier curves are most common. Higher degree curves are more<space/><link><target>computationally expensive</target></link><space/>to evaluate. When more complex shapes are needed, low order Bzier curves are patched together, producing a<space/><link><target>composite Bzier curve</target></link>. A composite Bzier curve is commonly referred to as a &quot;path&quot; in<space/><link><target>vector graphics</target></link><space/>languages (like<space/><link><target>PostScript</target></link>), vector graphics standards (like<space/><link><target>SVG</target></link>) and vector graphics programs (like<space/><link><target>Adobe Illustrator</target></link>,<space/><link><target>CorelDraw</target></link><space/>and<space/><link><target>Inkscape</target></link>). To guarantee smoothness, the control point at which two curves meet must be on the line between the two control points on either side.<template><target>cn</target><arg name="date">October 2015</arg></template></paragraph><paragraph>The simplest method for scan converting (<link><target>Rasterisation</target><part>rasterizing</part></link>) a Bzier curve is to evaluate it at many closely spaced points and scan convert the approximating sequence of line segments. However, this does not guarantee that the rasterized output looks sufficiently smooth, because the points may be spaced too far apart. Conversely it may generate too many points in areas where the curve is close to linear. A common adaptive method is recursive subdivision, in which a curve's control points are checked to see if the curve approximates a line segment to within a small tolerance. If not, the curve is subdivided parametrically into two segments, 0<space/><italics>t</italics><space/>0.5 and 0.5<space/><italics>t</italics><space/>1, and the same procedure is applied recursively to each half. There are also forward differencing methods, but great care must be taken to analyse error propagation.<template><target>cn</target><arg name="date">October 2015</arg></template></paragraph><paragraph>Analytical methods where a Bzier is intersected with each scan line involve finding roots of cubic polynomials (for cubic Bziers) and dealing with multiple roots, so they are not often used in practice.<template><target>citation needed</target><arg name="date">August 2014</arg></template></paragraph><heading level='3'>Animation</heading><paragraph>In animation applications, such as<space/><link><target>Adobe Flash</target></link><space/>and<space/><link><target>Synfig</target></link>, Bzier curves are used to outline, for example, movement. Users outline the wanted path in Bzier curves, and the application creates the needed frames for the object to move along the path.<template><target>cn</target><arg name="date">October 2015</arg></template></paragraph><paragraph>For 3D animation Bzier curves are often used to define 3D paths as well as 2D curves for keyframe interpolation.<template><target>cn</target><arg name="date">October 2015</arg></template></paragraph><heading level='3'>Fonts</heading><paragraph><link><target>TrueType</target></link><space/>fonts use composite Bzier curves composed of<space/><bold>quadratic</bold><space/>Bzier curves. Modern imaging systems like<space/><link><target>PostScript</target></link>,<space/><link><target>Asymptote (vector graphics language)</target><part>Asymptote</part></link>,<space/><link><target>Metafont</target></link>, and<space/><link><target>SVG</target></link><space/>use composite Bziers composed of<space/><bold>cubic</bold><space/>Bzier curves for drawing curved shapes.<space/><link><target>OpenType</target></link><space/>fonts can use either kind, depending on the flavor of the font.<template><target>cn</target><arg name="date">October 2015</arg></template></paragraph><paragraph>The internal rendering of all Bzier curves in font or vector graphics renderers will split them recursively up to the point where the curve is flat enough to be drawn as a series of linear or circular segments. The exact splitting algorithm is implementation dependent, only the flatness criteria must be respected to reach the necessary precision and to avoid non-monotonic local changes of curvature. The &quot;smooth curve&quot; feature of charts in<space/><link><target>Microsoft Excel</target></link><space/>also uses this algorithm.<extension extension_name='ref'>http://www.xlrotor.com/resources/files.shtml</extension></paragraph><paragraph>Because arcs of circles and ellipses cannot be exactly represented by Bzier curves, they are first approximated by Bzier curves, which are in turn approximated by arcs of circles. This is inefficient as there exists also approximations of all Bzier curves using arcs of circles or ellipses, which can be rendered incrementally with arbitrary precision. Another approach, used by modern hardware graphics adapters with accelerated geometry, can convert exactly all Bzier and conic curves (or surfaces) into<space/><link><target>Non-uniform rational B-spline</target><part>NURBS</part></link>, that can be rendered incrementally without first splitting the curve recursively to reach the necessary flatness condition. This approach also allows preserving the curve definition under all linear or perspective 2D and 3D transforms and projections.<template><target>cn</target><arg name="date">October 2015</arg></template></paragraph><paragraph>Font engines, like<space/><link><target>FreeType</target></link>, draw the font's curves (and lines) on a pixellated surface using a process known as<space/><link><target>font rasterization</target></link>.<extension extension_name='ref' name="freetype"><link type='external' href='http://www.freetype.org/freetype2/docs/glyphs/glyphs-6.html'>FreeType Glyph Conventions</link>, David Turner + Freetype Development Team, Freetype.org, retr May 2011</extension></paragraph><heading level='2'>Specific cases</heading><paragraph>A Bzier curve is defined by a set of<space/><italics>control points</italics><space/><bold>P</bold><xhtml:sub>0</xhtml:sub><space/>through<space/><bold>P</bold><xhtml:sub><italics>n</italics></xhtml:sub>, where<space/><italics>n</italics><space/>is called its order (<italics>n</italics><space/>= 1 for linear, 2 for quadratic, etc.). The first and last control points are always the end points of the curve; however, the intermediate control points (if any) generally do not lie on the curve.</paragraph><heading level='3'>Linear Bzier curves</heading><paragraph>Given points<space/><bold>P</bold><xhtml:sub>0</xhtml:sub><space/>and<space/><bold>P</bold><xhtml:sub>1</xhtml:sub>, a linear Bzier curve is simply a<space/><link><target>straight line</target></link><space/>between those two points. The curve is given by</paragraph><list type='ident'><listitem><extension extension_name='math'>\mathbf{B}(t)=\mathbf{P}_0 + t(\mathbf{P}_1-\mathbf{P}_0)=(1-t)\mathbf{P}_0 + t\mathbf{P}_1 \mbox{ , } 0 \le t \le 1</extension></listitem></list><paragraph>and is equivalent to<space/><link><target>linear interpolation</target></link>.</paragraph><heading level='3'>Quadratic Bzier curves</heading><paragraph>A quadratic Bzier curve is the path traced by the function<space/><bold>B</bold>(<italics>t</italics>), given points<space/><bold>P</bold><xhtml:sub>0</xhtml:sub>,<space/><bold>P</bold><xhtml:sub>1</xhtml:sub>, and<space/><bold>P</bold><xhtml:sub>2</xhtml:sub>,</paragraph><list type='ident'><listitem><extension extension_name='math'>\mathbf{B}(t) = (1 - t)[(1 - t) \mathbf P_0 + t \mathbf P_1] + t [(1 - t) \mathbf P_1 + t \mathbf P_2] \mbox{ , } 0 \le t \le 1</extension>,</listitem></list><paragraph>which can be interpreted as the linear interpolant of corresponding points on the linear Bzier curves from<space/><bold>P</bold><xhtml:sub>0</xhtml:sub><space/>to<space/><bold>P</bold><xhtml:sub>1</xhtml:sub><space/>and from<space/><bold>P</bold><xhtml:sub>1</xhtml:sub><space/>to<space/><bold>P</bold><xhtml:sub>2</xhtml:sub><space/>respectively. Rearranging the preceding equation yields:</paragraph><list type='ident'><listitem><extension extension_name='math'>\mathbf{B}(t) = (1 - t)^{2}\mathbf{P}_0 + 2(1 - t)t\mathbf{P}_1 + t^{2}\mathbf{P}_2 \mbox{ , } 0 \le t \le 1.</extension></listitem></list><paragraph>The derivative of the Bzier curve with respect to<space/><italics>t</italics><space/>is</paragraph><list type='ident'><listitem><extension extension_name='math'>\mathbf{B}'(t) = 2 (1 - t) (\mathbf{P}_1 - \mathbf{P}_0) + 2 t (\mathbf{P}_2 - \mathbf{P}_1) \,.</extension></listitem></list><paragraph>from which it can be concluded that the tangents to the curve at<space/><bold>P</bold><xhtml:sub>0</xhtml:sub><space/>and<space/><bold>P</bold><xhtml:sub>2</xhtml:sub><space/>intersect at<space/><bold>P</bold><xhtml:sub>1</xhtml:sub>. As<space/><italics>t</italics><space/>increases from 0 to 1, the curve departs from<space/><bold>P</bold><xhtml:sub>0</xhtml:sub><space/>in the direction of<space/><bold>P</bold><xhtml:sub>1</xhtml:sub>, then bends to arrive at<space/><bold>P</bold><xhtml:sub>2</xhtml:sub><space/>from the direction of<space/><bold>P</bold><xhtml:sub>1</xhtml:sub>.</paragraph><paragraph>The second derivative of the Bzier curve with respect to<space/><italics>t</italics><space/>is</paragraph><list type='ident'><listitem><extension extension_name='math'>\mathbf{B}''(t) = 2(\mathbf{P}_2 - 2 \mathbf{P}_1 + \mathbf{P}_0) \,.</extension></listitem></list><heading level='3'>Cubic Bzier curves</heading><paragraph>Four points<space/><bold>P</bold><xhtml:sub>0</xhtml:sub>,<space/><bold>P</bold><xhtml:sub>1</xhtml:sub>,<space/><bold>P</bold><xhtml:sub>2</xhtml:sub><space/>and<space/><bold>P</bold><xhtml:sub>3</xhtml:sub><space/>in the plane or in higher-dimensional space define a cubic Bzier curve.The curve starts at<space/><bold>P</bold><xhtml:sub>0</xhtml:sub><space/>going toward<space/><bold>P</bold><xhtml:sub>1</xhtml:sub><space/>and arrives at<space/><bold>P</bold><xhtml:sub>3</xhtml:sub><space/>coming from the direction of<space/><bold>P</bold><xhtml:sub>2</xhtml:sub>. Usually, it will not pass through<space/><bold>P</bold><xhtml:sub>1</xhtml:sub><space/>or<space/><bold>P</bold><xhtml:sub>2</xhtml:sub>; these points are only there to provide directional information. The distance between<space/><bold>P</bold><xhtml:sub>0</xhtml:sub><space/>and<space/><bold>P</bold><xhtml:sub>1</xhtml:sub><space/>determines &quot;how far&quot; and &quot;how fast&quot; the curve moves towards<space/><bold>P</bold><xhtml:sub>1</xhtml:sub><space/>before turning towards<space/><bold>P</bold><xhtml:sub>2</xhtml:sub>.</paragraph><paragraph>Writing<space/><bold>B</bold><xhtml:sub><bold>P</bold><xhtml:sub>i</xhtml:sub>,<bold>P</bold><xhtml:sub>j</xhtml:sub>,<bold>P</bold><xhtml:sub>k</xhtml:sub></xhtml:sub>(<italics>t</italics>) for the quadratic Bzier curve defined by points<space/><bold>P</bold><xhtml:sub>i</xhtml:sub>,<space/><bold>P</bold><xhtml:sub>j</xhtml:sub>, and<space/><bold>P</bold><xhtml:sub>k</xhtml:sub>, the cubic Bzier curve can be defined as a linear combination of two quadratic Bzier curves:</paragraph><list type='ident'><listitem><extension extension_name='math'>\mathbf{B}(t)=(1-t)\mathbf{B}_{\mathbf P_0,\mathbf P_1,\mathbf P_2}(t) + t \mathbf{B}_{\mathbf P_1,\mathbf P_2,\mathbf P_3}(t) \mbox{ , } 0 \le t \le 1.</extension></listitem></list><paragraph>The explicit form of the curve is:</paragraph><list type='ident'><listitem><extension extension_name='math'>\mathbf{B}(t)=(1-t)^3\mathbf{P}_0+3(1-t)^2t\mathbf{P}_1+3(1-t)t^2\mathbf{P}_2+t^3\mathbf{P}_3 \mbox{ , } 0 \le t \le 1.</extension></listitem></list><paragraph>For some choices of<space/><bold>P</bold><xhtml:sub>1</xhtml:sub><space/>and<space/><bold>P</bold><xhtml:sub>2</xhtml:sub><space/>the curve may intersect itself, or contain a cusp.</paragraph><paragraph>Any series of any 4 distinct points can be converted to a cubic Bzier curve that goes through all 4 points in order.Given the starting and ending point of some cubic Bzier curve, and the points along the curve corresponding to<space/><italics>t</italics><space/>= 1/3 and<space/><italics>t</italics><space/>= 2/3, the control points for the original Bzier curve can be recovered.<extension extension_name='ref'>John Burkardt.<link type='external' href='https://web.archive.org/web/20131225210855/http://people.sc.fsu.edu/~jburkardt/html/bezier_interpolation.html'>&quot;Forcing Bezier Interpolation (from web.archive.org 2013-12-25)&quot;</link>.</extension></paragraph><paragraph>The derivative of the cubic Bzier curve with respect to<space/><italics>t</italics><space/>is</paragraph><list type='ident'><listitem><extension extension_name='math'>\mathbf{B}'(t) = 3(1-t)^2(\mathbf{P}_1 - \mathbf{P}_0) + 6(1-t)t(\mathbf{P}_2 - \mathbf{P}_1) + 3t^2(\mathbf{P}_3 - \mathbf{P}_2) \,.</extension></listitem></list><paragraph>The second derivative of the Bzier curve with respect to<space/><italics>t</italics><space/>is</paragraph><list type='ident'><listitem><extension extension_name='math'>\mathbf{B}''(t) = 6(1-t)(\mathbf{P}_2 - 2 \mathbf{P}_1 + \mathbf{P}_0) + 6t(\mathbf{P}_3 - 2 \mathbf{P}_2 + \mathbf{P}_1) \,.</extension></listitem></list><heading level='2'>General definition</heading><paragraph>Bzier curves can be defined for any degree<space/><italics>n.</italics></paragraph><heading level='3'>Recursive definition</heading><paragraph>A recursive definition for the Bzier curve of degree<space/><italics>n</italics><space/>expresses it as a point-to-point<space/><link><target>linear combination</target></link><space/>(<link><target>linear interpolation</target></link>) of a pair of corresponding points in two Bzier curves of degree<space/><italics>n</italics>&amp;nbsp;&amp;minus;&amp;nbsp;1.</paragraph><paragraph>Let<space/><extension extension_name='math'>\mathbf{B}_{\mathbf{P}_0\mathbf{P}_1\ldots\mathbf{P}_n}</extension><space/>denote the Bzier curve determined by any selection of points<space/><bold>P</bold><xhtml:sub>0</xhtml:sub>,<space/><bold>P</bold><xhtml:sub>1</xhtml:sub>,&amp;nbsp;...,&amp;nbsp;<bold>P</bold><xhtml:sub><italics>n</italics></xhtml:sub>. Then to start,</paragraph><list type='ident'><listitem><extension extension_name='math'>\mathbf{B}_{\mathbf{P}_0}(t) = \mathbf{P}_0 \text{, and}</extension></listitem></list><list type='ident'><listitem><extension extension_name='math'>\mathbf{B}(t) = \mathbf{B}_{\mathbf{P}_0\mathbf{P}_1\ldots\mathbf{P}_n}(t) = (1-t)\mathbf{B}_{\mathbf{P}_0\mathbf{P}_1\ldots\mathbf{P}_{n-1}}(t) + t\mathbf{B}_{\mathbf{P}_1\mathbf{P}_2\ldots\mathbf{P}_n}(t)</extension></listitem></list><paragraph>This recursion is elucidated in the animations below.</paragraph><heading level='3'>Explicit definition</heading><paragraph>The formula can be expressed explicitly as follows:</paragraph><list type='ident'><listitem><extension extension_name='math'>\begin{align}
 \mathbf{B}(t) = {} &amp;\sum_{i=0}^n {n\choose i}(1 - t)^{n - i}t^i\mathbf{P}_i \\
 = {} &amp;(1 - t)^n\mathbf{P}_0 + {n\choose 1}(1 - t)^{n - 1}t\mathbf{P}_1 + \cdots \\
 {} &amp;\cdots + {n\choose n - 1}(1 - t)t^{n - 1}\mathbf{P}_{n - 1} + t^n\mathbf{P}_n,\quad 0 \le t \le 1
\end{align}</extension></listitem></list><paragraph>where<space/><extension extension_name='math'>\scriptstyle {n \choose i}</extension><space/>are the<space/><link><target>binomial coefficient</target><trail>s</trail></link>.</paragraph><paragraph>For example, for<space/><italics>n</italics>&amp;nbsp;=&amp;nbsp;5:</paragraph><list type='ident'><listitem><extension extension_name='math'>\begin{align}
 \mathbf{B}_{\mathbf{P}_0\mathbf{P}_1\mathbf{P}_2\mathbf{P}_3\mathbf{P}_4\mathbf{P}_5}(t) = \mathbf{B}(t)
 = {} &amp; (1 - t)^5\mathbf{P}_0 + 5t(1 - t)^4\mathbf{P}_1 + 10t^2(1 - t)^3 \mathbf{P}_2 \\
 {} &amp; + 10t^3 (1-t)^2 \mathbf{P}_3 + 5t^4(1-t) \mathbf{P}_4 + t^5 \mathbf{P}_5,\quad 0 \le t \le 1
\end{align}</extension></listitem></list><heading level='3'>Terminology</heading><paragraph>Some terminology is associated with these parametric curves. We have</paragraph><list type='ident'><listitem><extension extension_name='math'>\mathbf{B}(t) = \sum_{i=0}^n b_{i, n}(t)\mathbf{P}_i,\quad 0 \le t \le 1</extension></listitem></list><paragraph>where the polynomials</paragraph><list type='ident'><listitem><extension extension_name='math'>b_{i,n}(t) = {n\choose i} t^i (1 - t)^{n - i},\quad i = 0, \ldots, n</extension></listitem></list><paragraph>are known as<space/><link><target>Bernstein polynomial</target><part>Bernstein basis polynomials</part></link><space/>of degree<space/><italics>n</italics>.</paragraph><paragraph>Note that<space/><italics>t</italics><xhtml:sup>0</xhtml:sup>&amp;nbsp;=&amp;nbsp;1, (1&amp;nbsp;&amp;nbsp;<italics>t</italics>)<xhtml:sup>0</xhtml:sup>&amp;nbsp;=&amp;nbsp;1, and that the<space/><link><target>binomial coefficient</target></link>,<space/><extension extension_name='math'>\scriptstyle {n \choose i}</extension>, also expressed as<space/><extension extension_name='math'>^n{\mathbf{C}}_i<space/></extension><space/>or<space/><extension extension_name='math'>{\mathbf{C}_i}^n<space/></extension>, is:</paragraph><list type='ident'><listitem><extension extension_name='math'>{n \choose i} = \frac{n!}{i!(n - i)!}</extension></listitem></list><paragraph>The points<space/><bold>P</bold><xhtml:sub><italics>i</italics></xhtml:sub><space/>are called<space/><italics>control points</italics><space/>for the Bzier curve. The<space/><link><target>polygon</target></link><space/>formed by connecting the Bzier points with<space/><link><target>line (mathematics)</target><part>lines</part></link>, starting with<space/><bold>P</bold><xhtml:sub>0</xhtml:sub><space/>and finishing with<space/><bold>P</bold><xhtml:sub><italics>n</italics></xhtml:sub>, is called the<space/><italics>Bzier polygon</italics><space/>(or<space/><italics>control polygon</italics>). The<space/><link><target>convex hull</target></link><space/>of the Bzier polygon contains the Bzier curve.</paragraph><heading level='3'>Polynomial form</heading><paragraph>Sometimes it is desirable to express the Bzier curve as a<space/><link><target>polynomial</target></link><space/>instead of a sum of less straightforward<space/><link><target>Bernstein polynomial</target><trail>s</trail></link>. Application of the<space/><link><target>binomial theorem</target></link><space/>to the definition of the curve followed by some rearrangement will yield:</paragraph><list type='ident'><listitem><extension extension_name='math'>
\mathbf{B}(t) = \sum_{j = 0}^n {t^j \mathbf{C}_j}
</extension></listitem></list><paragraph>where</paragraph><list type='ident'><listitem><extension extension_name='math'>
\mathbf{C}_j = \frac{n!}{(n - j)!} \sum_{i = 0}^j \frac{(-1)^{i + j} \mathbf{P}_i}{i! (j - i)!} =
\prod_{m = 0}^{j - 1} (n - m) \sum_{i = 0}^j \frac{(-1)^{i + j} \mathbf{P}_i}{i! (j - i)!}
.</extension></listitem></list><paragraph>This could be practical if<space/><extension extension_name='math'>\mathbf{C}_j</extension><space/>can be computed prior to many evaluations of<space/><extension extension_name='math'>\mathbf{B}(t)</extension>; however one should use caution as high order curves may lack<space/><link><target>numeric stability</target></link><space/>(<link><target>de Casteljau's algorithm</target></link><space/>should be used if this occurs). Note that the<space/><link><target>empty product</target></link><space/>is 1.</paragraph><heading level='3'>Properties</heading><paragraph>[[File:quadratic_to_cubic_Bezier_curve.svg|thumb|150px|A cubic Bzier curve (yellow) can be made identical to a quadratic one (black) by<xhtml:div style="margin-left:1em;text-indent:-1em">1. Copying the end points, and</xhtml:div><xhtml:div style="margin-left:1em;text-indent:-1em">2. Placing its 2 middle control points (yellow circles) 2/3 along line segments from the end points to the quadratic curve's middle control point (black rectangle)</xhtml:div>]]</paragraph><list type='bullet'><listitem>The curve begins at<space/><bold>P</bold><xhtml:sub>0</xhtml:sub><space/>and ends at<space/><bold>P</bold><xhtml:sub><italics>n</italics></xhtml:sub>; this is the so-called<space/><italics>endpoint interpolation</italics><space/>property.</listitem><listitem>The curve is a straight line if and only if all the control points are<space/><link><target>collinear</target></link>.</listitem><listitem>The start (end) of the curve is<space/><link><target>tangent</target></link><space/>to the first (last) section of the Bzier polygon.</listitem><listitem>A curve can be split at any point into two subcurves, or into arbitrarily many subcurves, each of which is also a Bzier curve.</listitem><listitem>Some curves that seem simple, such as the<space/><link><target>circle</target></link>, cannot be described exactly by a Bzier or<space/><link><target>piecewise</target></link><space/>Bzier curve; though a four-piece cubic Bzier curve can approximate a circle (see<space/><link><target>composite Bzier curve</target></link>), with a maximum radial error of less than one part in a thousand, when each inner control point (or offline point) is the distance<space/><extension extension_name='math'>\textstyle\frac{4\left(\sqrt {2}-1\right)}{3}</extension><space/>horizontally or vertically from an outer control point on a unit circle. More generally, an<space/><italics>n</italics>-piece cubic Bzier curve can approximate a circle, when each inner control point is the distance<space/><extension extension_name='math'>\textstyle\frac{4}{3}\tan(t/4)</extension><space/>from an outer control point on a unit circle, where<space/><italics>t</italics><space/>is 360/<italics>n</italics><space/>degrees, and<space/><italics>n</italics><space/>&gt; 2.</listitem><listitem>Every quadratic Bzier curve is also a cubic Bzier curve, and more generally, every degree<space/><italics>n</italics><space/>Bzier curve is also a degree<space/><italics>m</italics><space/>curve for any<space/><italics>m</italics><space/>&gt;<space/><italics>n</italics>. In detail, a degree<space/><italics>n</italics><space/>curve with control points<space/><bold>P</bold><xhtml:sub>0</xhtml:sub>, ,<space/><bold>P</bold><xhtml:sub><italics>n</italics></xhtml:sub><space/>is equivalent (including the parametrization) to the degree<space/><italics>n</italics><space/>+ 1 curve with control points<space/><bold>P</bold>'<xhtml:sub>0</xhtml:sub>, ,<space/><bold>P</bold>'<xhtml:sub><italics>n</italics><space/>+ 1</xhtml:sub>, where<space/><extension extension_name='math'>\mathbf P'_k=\tfrac{k}{n+1}\mathbf P_{k-1}+\left(1-\tfrac{k}{n+1}\right)\mathbf P_k</extension>.</listitem><listitem>Bzier curves have the<space/><link><target>variation diminishing property</target></link>. What this means in intuitive terms is that a Bzier curves does not &quot;undulate&quot; more than the polygon of its control points, and may actually &quot;undulate&quot; less than that.<extension extension_name='ref' name="GonzalezDiaz-Herrera2014"><template><target>cite book</target><arg name="author1">Teofilo Gonzalez</arg><arg name="author1-link"><space/>Teofilo F. Gonzalez<space/></arg><arg name="author2">Jorge Diaz-Herrera</arg><arg name="author3">Allen Tucker</arg><arg name="title">Computing Handbook, Third Edition: Computer Science and Software Engineering</arg><arg name="url">http://books.google.com/books?id</arg><arg name="year">2014</arg><arg name="publisher">CRC Press</arg><arg name="isbn">978-1-4398-9852-9</arg><arg name="at">page 32-14</arg></template></extension></listitem><listitem>There is no<space/><link><target>local control</target></link><space/>in degree<space/><italics>n</italics><space/>Bzier curvesmeaning that any change to a control point requires recalculation of and thus affects the aspect of the entire curve, &quot;although the further that one is from the control point that was changed, the smaller is the change in the curve.&quot;<extension extension_name='ref' name="Agoston2005"><template><target>cite book</target><arg name="author">Max K. Agoston</arg><arg name="title">Computer Graphics and Geometric Modelling: Implementation & Algorithms</arg><arg name="url">http://books.google.com/books?id</arg><arg name="year">2005</arg><arg name="publisher">Springer Science & Business Media</arg><arg name="isbn">978-1-84628-108-2</arg><arg name="page">404</arg></template></extension></listitem></list><heading level='3'>Second order curve is a parabolic segment</heading><paragraph><link><target>File:Quadratic_Bezier_parabola_equivalence.svg</target><part>thumb</part><part>150px</part><part>Equivalence of a quadratic Bzier curve and a parabolic segment</part></link></paragraph><paragraph>A quadratic Bzier curve is also a segment of a<space/><link><target>parabola</target></link>. As a parabola is a<space/><link><target>conic section</target></link>, some sources refer to quadratic Bziers as &quot;conic arcs&quot;.<extension extension_name='ref' name="freetype"></extension><space/>With reference to the figure on the right, the important features of the parabola can be derived as follows:<extension extension_name='ref'>Duncan Marsh,<space/><link type='external' href='http://www.amazon.co.uk/Geometry-Computer-Graphics-Undergraduate-Mathematics/dp/1852338016'>''Applied Geometry for Computer Graphics and CAD''</link>, Springer Undergraduate Mathematics Series, 2005</extension></paragraph><list type='numbered'><listitem>Tangents to the parabola at the end-points of the curve (A and B) intersect at its control point (C).</listitem><listitem>If D is the midpoint of AB, the tangent to the curve which is perpendicular to CD (dashed cyan line) defines its vertex (V). Its axis of symmetry (dash-dot cyan) passes through V and is perpendicular to the tangent.</listitem><listitem>E is either point on the curve with a tangent at 45&amp;#176; to CD (dashed green). If G is the intersection of this tangent and the axis, the line passing through G and perpendicular to CD is the directrix (solid green).</listitem><listitem>The focus (F) is at the intersection of the axis and a line passing through E and perpendicular to CD (dotted yellow). The latus rectum is the line segment within the curve (solid yellow).</listitem></list><heading level='3'>Derivative</heading><paragraph>The derivative for a curve of order<space/><italics>n</italics><space/>is</paragraph><list type='ident'><listitem><extension extension_name='math'>\mathbf{B}'(t) = n \sum_{i=0}^{n-1} b_{i,n-1}(t) (\mathbf{P}_{i+1} - \mathbf{P}_i)</extension></listitem></list><heading level='2'>Constructing Bzier curves</heading><heading level='3'>Linear curves</heading><table style="text-align:center; float:right; font-size:95%; vertical-align:top;"><tablerow><tablecell style="border-bottom:1px solid #222;"><link><target>File:Bzier 1 big.gif</target><part>240px</part><part>Animation of a linear Bzier curve, ''t'' in [0,1</part></link>]</tablecell></tablerow><tablerow><tablecell>Animation of a linear Bzier curve,<space/><italics>t</italics><space/>in [0,1]</tablecell></tablerow></table><paragraph>The<space/><italics>t</italics><space/>in the function for a linear Bzier curve can be thought of as describing how far<space/><bold>B</bold>(<italics>t</italics>) is from<space/><bold>P</bold><xhtml:sub>0</xhtml:sub><space/>to<space/><bold>P</bold><xhtml:sub>1</xhtml:sub>. For example, when<space/><italics>t=0.25</italics>,<space/><bold>B</bold>(<italics>t</italics>) is one quarter of the way from point<space/><bold>P</bold><xhtml:sub>0</xhtml:sub><space/>to<space/><bold>P</bold><xhtml:sub>1</xhtml:sub>. As<space/><italics>t</italics><space/>varies from 0 to 1,<space/><bold>B</bold>(<italics>t</italics>) describes a straight line from<space/><bold>P</bold><xhtml:sub>0</xhtml:sub><space/>to<space/><bold>P</bold><xhtml:sub>1</xhtml:sub>.</paragraph><heading level='3'>Quadratic curves</heading><paragraph>For quadratic Bzier curves one can construct intermediate points<space/><bold>Q</bold><xhtml:sub>0</xhtml:sub><space/>and<space/><bold>Q</bold><xhtml:sub>1</xhtml:sub><space/>such that as<space/><italics>t</italics><space/>varies from 0 to 1:</paragraph><list type='bullet'><listitem>Point<space/><bold>Q</bold><xhtml:sub>0</xhtml:sub>(<italics>t</italics>) varies from<space/><bold>P</bold><xhtml:sub>0</xhtml:sub><space/>to<space/><bold>P</bold><xhtml:sub>1</xhtml:sub><space/>and describes a linear Bzier curve.</listitem><listitem>Point<space/><bold>Q</bold><xhtml:sub>1</xhtml:sub>(<italics>t</italics>) varies from<space/><bold>P</bold><xhtml:sub>1</xhtml:sub><space/>to<space/><bold>P</bold><xhtml:sub>2</xhtml:sub><space/>and describes a linear Bzier curve.</listitem><listitem>Point<space/><bold>B</bold>(<italics>t</italics>) is interpolated linearly between<space/><bold>Q</bold><xhtml:sub>0</xhtml:sub>(<italics>t</italics>) to<space/><bold>Q</bold><xhtml:sub>1</xhtml:sub>(<italics>t</italics>) and describes a quadratic Bzier curve.</listitem></list><paragraph><xhtml:center><table style="text-align:center; float:none; clear:both; font-size:95%; vertical-align:top;"><tablerow><tablecell style="border-bottom:1px solid #2f2;"><link><target>File:Bzier 2 big.svg</target><part>240px</part><part>Construction of a quadratic Bzier curve</part></link></tablecell><tablecell></tablecell><tablecell style="border-bottom:1px solid #2f2;"><link><target>File:Bzier 2 big.gif</target><part>240px</part><part>Animation of a quadratic Bzier curve, ''t'' in [0,1</part></link>]</tablecell></tablerow><tablerow><tablecell>Construction of a quadratic Bzier curve</tablecell><tablecell></tablecell><tablecell>Animation of a quadratic Bzier curve,<space/><italics>t</italics><space/>in [0,1]</tablecell></tablerow></table></xhtml:center></paragraph><heading level='3'>Higher-order curves</heading><paragraph>For higher-order curves one needs correspondingly more intermediate points. For cubic curves one can construct intermediate points<space/><bold>Q</bold><xhtml:sub>0</xhtml:sub>,<space/><bold>Q</bold><xhtml:sub>1</xhtml:sub>, and<space/><bold>Q</bold><xhtml:sub>2</xhtml:sub><space/>that describe linear Bzier curves, and points<space/><bold>R</bold><xhtml:sub>0</xhtml:sub><space/>&amp;<space/><bold>R</bold><xhtml:sub>1</xhtml:sub><space/>that describe quadratic Bzier curves:</paragraph><paragraph><xhtml:center><table style="text-align:center; float:none; clear:both; font-size:95%; vertical-align:top;"><tablerow><tablecell style="border-bottom:1px solid #22f;"><link><target>File:Bzier 3 big.svg</target><part>240px</part><part>Construction of a cubic Bzier curve</part></link></tablecell><tablecell></tablecell><tablecell style="border-bottom:1px solid #22f;"><link><target>File:Bzier 3 big.gif</target><part>240px</part><part>Animation of a cubic Bzier curve, ''t'' in [0,1</part></link>]</tablecell></tablerow><tablerow><tablecell>Construction of a cubic Bzier curve</tablecell><tablecell></tablecell><tablecell>Animation of a cubic Bzier curve,<space/><italics>t</italics><space/>in [0,1]</tablecell></tablerow></table></xhtml:center></paragraph><paragraph>For fourth-order curves one can construct intermediate points<space/><bold>Q</bold><xhtml:sub>0</xhtml:sub>,<space/><bold>Q</bold><xhtml:sub>1</xhtml:sub>,<space/><bold>Q</bold><xhtml:sub>2</xhtml:sub><space/>&amp;<space/><bold>Q</bold><xhtml:sub>3</xhtml:sub><space/>that describe linear Bzier curves, points<space/><bold>R</bold><xhtml:sub>0</xhtml:sub>,<space/><bold>R</bold><xhtml:sub>1</xhtml:sub><space/>&amp;<space/><bold>R</bold><xhtml:sub>2</xhtml:sub><space/>that describe quadratic Bzier curves, and points<space/><bold>S</bold><xhtml:sub>0</xhtml:sub><space/>&amp;<space/><bold>S</bold><xhtml:sub>1</xhtml:sub><space/>that describe cubic Bzier curves:</paragraph><paragraph><xhtml:center><table style="text-align:center; float:none; clear:both; font-size:95%; vertical-align:top;"><tablerow><tablecell style="border-bottom:1px solid #f2f;"><link><target>File:Bzier 4 big.svg</target><part>240px</part><part>Construction of a quartic Bzier curve</part></link></tablecell><tablecell></tablecell><tablecell style="border-bottom:1px solid #f2f;"><link><target>File:Bzier 4 big.gif</target><part>240px</part><part>Animation of a quartic Bzier curve, ''t'' in [0,1</part></link>]</tablecell></tablerow><tablerow><tablecell>Construction of a quartic Bzier curve</tablecell><tablecell></tablecell><tablecell>Animation of a quartic Bzier curve,<space/><italics>t</italics><space/>in [0,1]</tablecell></tablerow></table></xhtml:center></paragraph><paragraph>For fifth-order curves, one can construct similar intermediate points.<xhtml:center><table style="text-align:center; float:none; clear:both; font-size:95%; vertical-align:top;"><tablerow><tablecell style="border-bottom: 1px solid silver"><link><target>File:BezierCurve.gif</target><part>240px</part><part>Animation of the construction of a fifth-order Bzier curve</part></link></tablecell></tablerow><tablerow><tablecell>Animation of a fifth order Bzier curve,<space/><italics>t</italics><space/>in [0,1] in red. The Bzier curves for each of the lower orders is also shown.</tablecell></tablerow></table></xhtml:center></paragraph><paragraph>These representations rest on the process used in<space/><link><target>De Casteljau's algorithm</target></link><space/>to calculate Bzier curves.<extension extension_name='ref'><template><target>cite web</target><arg name="last">Shene</arg><arg name="first">C.K.</arg><arg name="title">Finding a Point on a BÃ©zier Curve: De Casteljau's Algorithm</arg><arg name="url">http://www.cs.mtu.edu/~shene/COURSES/cs3621/NOTES/spline/Bezier/de-casteljau.html</arg><arg name="accessdate">6 September 2012</arg></template></extension></paragraph><heading level='3'>Offsets (a.k.a. stroking) of Bzier curves</heading><paragraph>The curve at a fixed offset from a given Bzier curve, called an<space/><link><target>parallel curve</target><part>offset or parallel curve</part></link><space/>in mathematics (lying &quot;parallel&quot; to the original curve, like the offset between rails in a<space/><link><target>railroad track</target></link>), cannot be exactly formed by a Bzier curve (except in some trivial cases). In general, the two-sided offset curve of a cubic Bzier is a 10th order<space/><link><target>algebraic curve</target></link><extension extension_name='ref' name="Kilgard">http://www.slideshare.net/Mark_Kilgard/22pathrender, p. 28</extension><space/>and more generally for a Bzier of degree<space/><italics>n</italics><space/>the two-sided offset curve is an algebraic curve of degree 4<italics>n</italics>-2.<extension extension_name='ref'><link type='external' href='http://faculty.engineering.ucdavis.edu/farouki/wp-content/uploads/sites/41/2013/02/Introduction-to-PH-curves.pdf'>, particularly p. 16 &quot;taxonomy of offset curves&quot;</link></extension><space/>However, there are<space/><link><target>heuristic</target></link><space/>methods that usually give an adequate approximation for practical purposes.<extension extension_name='ref'>For example:<space/><link type='external' href='http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.43.1724'></link><space/>or<space/><link type='external' href='http://www.google.com/patents/US20110285719'></link>. For a survey see<space/><link type='external' href='http://www.computer.org/csdl/mags/cg/1997/03/mcg1997030062.pdf'></link>.</extension></paragraph><paragraph>In the field of<space/><link><target>vector graphics</target></link>, painting two symmetrically distanced offset curves is called<space/><italics>stroking</italics><space/>(the Bzier curve or in general a path of several Bzier segments).<extension extension_name='ref' name="Kilgard"></extension><space/>The conversion from offset curves to filled Bzier contours is of practical importance in converting<space/><link><target>font</target><trail>s</trail></link><space/>defined in<space/><link><target>METAFONT</target></link>, which allows stroking of Bzier curves, to the more widely used<space/><link><target>PostScript fonts</target><part>PostScript type 1 font</part><trail>s</trail></link>, which only allow (for efficiency purposes) the mathematically simpler operation of filling a contour defined by (non-self-intersecting) Bzier curves.<extension extension_name='ref'><link type='external' href='https://www.tug.org/TUGboat/tb16-3/tb48kinc.pdf'>MetaFog: Converting Metafont shapes to contours</link></extension></paragraph><heading level='2'>Degree elevation</heading><paragraph>A Bzier curve of degree<space/><italics>n</italics><space/>can be converted into a Bzier curve of degree<space/><italics>n</italics>&amp;nbsp;+&amp;nbsp;1<space/><italics>with the same shape</italics>. This is useful if software supports Bzier curves only of specific degree. For example, systems that can only work with cubic Bzier curves can implicitly work with quadratic curves by using their equivalent cubic representation.</paragraph><paragraph>To do degree elevation, we use the equality<space/><extension extension_name='math'>\mathbf{B}(t) = (1-t)\mathbf{B}(t) + t\mathbf{B}(t)</extension>. Each component<space/><extension extension_name='math'>\mathbf{b}_{i,n}(t)\mathbf{P}_i</extension><space/>is multiplied by (1&amp;nbsp;&amp;minus;&amp;nbsp;<italics>t</italics>) and&amp;nbsp;<italics>t</italics>, thus increasing a degree by one, without changing the value. Here is the example of increasing degree from 2 to&amp;nbsp;3.</paragraph><list type='ident'><listitem><extension extension_name='math'>
\begin{align}
 &amp;(1 - t)^2 \mathbf{P}_0 + 2(1 - t)t\mathbf{P}_1 + t^2 \mathbf{P}_2 \\
 = {} &amp;(1 - t)^3 \mathbf{P}_0 + 2(1 - t)^2 t\mathbf{P}_1 + (1 - t)t^2 \mathbf{P}_2\\
 &amp;+ (1 - t)^{2}t\mathbf{P}_0 + 2(1 - t)t^2 \mathbf{P}_1 + t^3 \mathbf{P}_2 \\
 = {} &amp;(1 - t)^3 \mathbf{P}_0
 + (1 - t)^2 t \left( \mathbf{P}_0 + 2\mathbf{P}_1\right)
 + (1 - t) t^2 \left(2\mathbf{P}_1 + \mathbf{P}_2\right)
 + t^{3}\mathbf{P}_2 \\
 = {} &amp;(1 - t)^3 \mathbf{P}_0
 + 3(1 - t)^2 t \frac{1}{3} \left( \mathbf{P}_0 + 2\mathbf{P}_1 \right)
 + 3(1 - t) t^2 \frac{1}{3} \left( 2\mathbf{P}_1 + \mathbf{P}_2 \right)
 + t^{3}\mathbf{P}_2
\end{align}
</extension></listitem></list><paragraph>For arbitrary<space/><italics>n</italics><space/>we use equalities</paragraph><list type='ident'><listitem><extension extension_name='math'>\begin{align}
 {n + 1 \choose i}(1 - t)\mathbf{b}_{i, n} &amp;= {n \choose i} \mathbf{b}_{i, n + 1} \\
 \Rightarrow (1 - t)\mathbf{b}_{i, n} &amp;= \frac{n + 1 - i}{n + 1} \mathbf{b}_{i, n + 1} \\
 {n + 1 \choose i + 1} t\mathbf{b}_{i, n} &amp;= {n \choose i} \mathbf{b}_{i + 1, n + 1} \\
 \Rightarrow t\mathbf{b}_{i, n} &amp;= \frac{i + 1}{n + 1} \mathbf{b}_{i + 1, n + 1} \\

 \mathbf{B}(t) &amp;= (1 - t)\sum_{i=0}^n \mathbf{b}_{i, n}(t)\mathbf{P}_i
 + t\sum_{i=0}^n \mathbf{b}_{i, n}(t)\mathbf{P}_i \\
 &amp;= \sum_{i=0}^n \frac{n + 1 - i}{n + 1}\mathbf{b}_{i, n + 1}(t)\mathbf{P}_i
 + \sum_{i=0}^n \frac{i + 1}{n + 1}\mathbf{b}_{i + 1, n + 1}(t)\mathbf{P}_i \\
 &amp;= \sum_{i=0}^{n + 1} \left(\frac{i}{n + 1}\mathbf{P}_{i - 1}
 + \frac{n + 1 - i}{n + 1}\mathbf{P}_i\right) \mathbf{b}_{i, n + 1}(t) \\
 &amp;= \sum_{i=0}^{n + 1} \mathbf{b}_{i, n + 1}(t)\mathbf{P'}_i
\end{align}</extension></listitem></list><paragraph>introducing arbitrary<space/><extension extension_name='math'>\mathbf{P}_{-1}</extension><space/>and<space/><extension extension_name='math'>\mathbf{P}_{n + 1}</extension>.</paragraph><paragraph>Therefore, new control points are<space/><extension extension_name='ref' name="farin1997"><template><target>Cite book</target><arg name="title">Curves and surfaces for computer-aided geometric design
<space/></arg><arg name="first">Gerald
<space/></arg><arg name="last">Farin
<space/></arg><arg name="publisher">[[Elsevier]] Science & Technology Books
<space/></arg><arg name="year">1997
<space/></arg><arg name="isbn">978-0-12-249054-5
<space/></arg><arg name="edition">4
<space/></arg><arg name="postscript">{{inconsistent citations}}
</arg></template></extension></paragraph><list type='ident'><listitem><extension extension_name='math'>\mathbf{P'}_i = \frac{i}{n + 1}\mathbf{P}_{i - 1} + \frac{n + 1 - i}{n + 1}\mathbf{P}_i,\quad i=0, \ldots, n + 1</extension></listitem></list><heading level='3'>Repeated Degree Elevation</heading><paragraph>The concept of Degree Elevation can be repeated on a control polygon<space/><bold>R</bold><space/>to get a sequence of control polygons<space/><bold>R</bold>,<bold>R</bold><xhtml:sub>1</xhtml:sub>,<bold>R</bold><xhtml:sub>2</xhtml:sub>, and so on. After<space/><italics>r</italics><space/>degree elevations, the polygon<space/><bold>R</bold><xhtml:sub>r</xhtml:sub><space/>has the vertices<space/><bold>P</bold><xhtml:sub>0,r</xhtml:sub>,<bold>P</bold><xhtml:sub>1,r</xhtml:sub>,<bold>P</bold><xhtml:sub>2,r</xhtml:sub>,...,<bold>P</bold><xhtml:sub>n+r,r</xhtml:sub><space/>given by<space/><extension extension_name='ref' name="farin1997"></extension></paragraph><list type='ident'><listitem><extension extension_name='math'>\mathbf{P}_{i,r} = \sum_{j=0}^n \mathbf{P}_j \tbinom nj \frac{\tbinom{r}{i-j}}{\tbinom{n+r}{i}}</extension></listitem></list><paragraph>It can also be shown that for the underlying Bzier curve<space/><italics>B</italics>,</paragraph><list type='ident'><listitem><extension extension_name='math'>\mathbf{\lim_{r \to \infty}R_r} = \mathbf{B}</extension></listitem></list><heading level='2'>Rational Bzier curves</heading><paragraph><link><target>Image:Rational Bezier curve-conic sections.svg</target><part>thumb</part><part>Segments of conic sections represented exactly by rational Bzier curves</part></link>The rational Bzier curve adds adjustable weights to provide closer approximations to arbitrary shapes. The numerator is a weighted Bernstein-form Bzier curve and the denominator is a weighted sum of<space/><link><target>Bernstein polynomial</target><trail>s</trail></link>. Rational Bzier curves can, among other uses, be used to represent segments of<space/><link><target>conic section</target><trail>s</trail></link><space/>exactly, including circular arcs.<extension extension_name='ref'><template><target>cite web</target><arg name="url">http://www.cl.cam.ac.uk/teaching/2000/AGraphHCI/SMEG/node5.html</arg><arg name="title">Some Mathematical Elements of Graphics: Rational B-splines</arg><arg name="author">Neil Dodgson</arg><arg name="date">2000-09-25</arg><arg name="accessdate">2009-02-23</arg></template></extension></paragraph><paragraph>Given<space/><italics>n</italics><space/>+ 1 control points<space/><bold>P</bold><xhtml:sub><italics>i</italics></xhtml:sub>, the rational Bzier curve can be described by:</paragraph><list type='ident'><listitem><extension extension_name='math'>
\mathbf{B}(t) =
\frac{
\sum_{i=0}^n b_{i,n}(t) \mathbf{P}_{i}w_i
}
{
\sum_{i=0}^n b_{i,n}(t) w_i
}
</extension></listitem></list><paragraph>or simply</paragraph><list type='ident'><listitem><extension extension_name='math'>
\mathbf{B}(t) =
\frac{
\sum_{i=0}^n {n \choose i} t^i (1-t)^{n-i}\mathbf{P}_{i}w_i
}
{
\sum_{i=0}^n {n \choose i} t^i (1-t)^{n-i}w_i
}.
</extension></listitem></list><heading level='2'>See also</heading><paragraph><link><target>File:Quadratic Beziers in string art.svg</target><part>thumb</part><part>100px</part><part>Quadratic Bziers in string art: The end points ('''&amp;bull;''') and control point ('''&amp;times;''') define the quadratic Bzier curve ('''&amp;#8943;''').</part></link></paragraph><list type='bullet'><listitem><link><target>Bzier surface</target></link></listitem><listitem><link><target>B-spline</target></link></listitem><listitem><link><target>Hermite curve</target></link></listitem><listitem><link><target>NURBS</target></link></listitem><listitem><link><target>String art</target></link><space/>Bzier curves are also formed by many common forms of string art, where strings are looped across a frame of nails.<template><target>Citation Needed</target><arg name="date">June 2015</arg></template></listitem><listitem><link><target>Variation diminishing property of Bzier curves</target></link></listitem></list><heading level='2'>Notes</heading><paragraph><template><target>Reflist</target><arg name="group">"note"</arg><arg>1</arg></template></paragraph><heading level='2'>References</heading><paragraph><extension extension_name='references'></extension></paragraph><list type='bullet'><listitem>Rida T. Farouki,<space/><italics><link type='external' href='http://mae.engr.ucdavis.edu/~farouki/bernstein.pdf'>The Bernstein polynomial basis: A centennial retrospective</link></italics>, Computer Aided Geometric Design, Volume 29, Issue 6, August 2012, Pages 379419,<space/><template><target>doi</target><arg>10.1016/j.cagd.2012.03.001</arg></template></listitem><listitem>Paul Bourke:<space/><italics>Bzier Surfaces (in 3D)</italics>, http://local.wasp.uwa.edu.au/~pbourke/geometry/bezier/index.html</listitem><listitem><link><target>Donald Knuth</target></link>:<space/><italics>Metafont: the Program</italics>, Addison-Wesley 1986, pp.&amp;nbsp;123131. Excellent discussion of implementation details; available for free as part of the TeX distribution.</listitem><listitem>Dr Thomas Sederberg, BYU<space/><italics>Bzier curves</italics>, http://www.tsplines.com/resources/class_notes/Bezier_curves.pdf</listitem><listitem>J.D. Foley<space/><italics>et al.</italics>:<space/><italics><link><target>Computer Graphics: Principles and Practice#Second Edition in C</target><part>Computer Graphics: Principles and Practice in C</part></link></italics><space/>(2nd ed., Addison Wesley, 1992)</listitem><listitem>Rajiv Chandel: &quot;<link type='external' href='http://codingg.blogspot.in/2014/03/implementing-bezier-curves-in-games.html'>Implementing Bezier Curves in games</link>&quot;</listitem></list><heading level='2'>Computer code</heading><list type='bullet'><listitem><link type='external' href='https://github.com/retuxx/tinyspline'>TinySpline: Open source C-library for NURBS, B-Splines and Bezier Splines with bindings for various languages</link></listitem></list><heading level='2'>Further reading and external links</heading><list type='bullet'><listitem><link type='external' href='http://vimeo.com/106757336'>Cubic Bezier Curves - Under the Hood (video)</link><space/>Video shows how computers render a cubic Bzier curve, by Peter Nowell</listitem><listitem><link type='external' href='http://www.ams.org/featurecolumn/archive/bezier.html#2'>From Bzier to Bernstein</link><space/>Feature Column from<space/><link><target>American Mathematical Society</target></link></listitem><listitem><template><target>springer</target><arg name="title">BÃ©zier curve</arg><arg name="id">p/b110460</arg></template></listitem><listitem><template><target>cite book</target><arg name="author1">Hartmut Prautzsch</arg><arg name="author2">Wolfgang Boehm</arg><arg name="author3">Marco Paluszny</arg><arg name="title">BÃ©zier and B-Spline Techniques</arg><arg name="year">2002</arg><arg name="publisher">Springer Science & Business Media</arg><arg name="isbn">978-3-540-43761-1</arg></template></listitem><listitem><template><target>cite book</target><arg name="url">http://www.cis.upenn.edu/~jean/gbooks/geom1.html</arg><arg name="title">Curves and Surfaces in Geometric Modeling: Theory and Algorithms</arg><arg name="author">Jean Gallier</arg><arg name="publisher">Morgan Kaufmann</arg><arg name="year">1999</arg><arg name="at">Chapter 5. Polynomial Curves as BÃ©zier Curves</arg></template><space/>This book is out of print and freely available from the author.</listitem><listitem><link type='external' href='http://pomax.github.io/bezierinfo'>A Primer on Bzier Curves</link><space/>&amp;mdash; A detailed explanation of implementing Bzier curves and associated graphics algorithms, with interactive graphics.</listitem><listitem><template><target>cite book</target><arg name="author">Gerald E. Farin</arg><arg name="title">Curves and Surfaces for CAGD: A Practical Guide</arg><arg name="year">2002</arg><arg name="publisher">Morgan Kaufmann</arg><arg name="isbn">978-1-55860-737-8</arg><arg name="edition">5th</arg><arg name="url">http://www.farinhansford.com/books/cagd/</arg></template></listitem><listitem><template><target>Mathworld</target><arg name="urlname">BezierCurve</arg><arg name="title">BÃ©zier Curve</arg></template></listitem><listitem>http://web.archive.org/web/20061202151511/http://www.fho-emden.de/~hoffmann/bezier18122002.pdf</listitem><listitem><template><target>cite journal</target><arg name="doi"><space/>10.1016/j.cam.2003.10.008<space/></arg><arg name="title">Approximation of circular arcs and offset curves by BÃ©zier curves of high degree<space/></arg><arg name="journal">Journal of Computational and Applied Mathematics<space/></arg><arg name="date">2004<space/></arg><arg name="volume">167<space/></arg><arg name="issue">2<space/></arg><arg name="pages">405â€“416<space/></arg><arg name="first">Young Joon<space/></arg><arg name="last">Ahn</arg></template></listitem></list><paragraph><template><target>DEFAULTSORT:Bezier Curve</target></template><link><target>Category:Graphic design</target></link><link><target>Category:Interpolation</target></link><link><target>Category:Curves</target></link></paragraph></article>