<article title='Computable_number'><paragraph><template><target>Unreferenced</target><arg>article</arg><arg name="date">June 2015</arg></template>In<space/><link><target>mathematics</target></link>,<space/><bold>computable numbers</bold><space/>are the<space/><link><target>real numbers</target></link><space/>that can be computed to within any desired precision by a finite, terminating<space/><link><target>algorithm</target></link>. They are also known as the<space/><bold>recursive numbers</bold><space/>or the<space/><bold>computable reals</bold><space/>or<space/><bold>recursive reals</bold>.</paragraph><paragraph>Equivalent definitions can be given using<space/><link><target>-recursive function</target><trail>s</trail></link>,<space/><link><target>Turing machines</target></link>, or<space/><link><target>lambda calculus</target><part>-calculus</part></link><space/>as the formal representation of algorithms. The computable numbers form a<space/><link><target>real closed field</target></link><space/>and can be used in the place of real numbers for many, but not all, mathematical purposes.</paragraph><heading level='2'>Informal definition using a Turing machine as example</heading><paragraph>In the following,<space/><link><target>Marvin Minsky</target></link><space/>defines the numbers to be computed in a manner similar to those defined by<space/><link><target>Alan Turing</target></link><space/>in 1936; i.e., as &quot;sequences of digits interpreted as decimal fractions&quot; between 0 and 1:</paragraph><preblock><preline></preline></preblock><list type='ident'><listitem>&quot;A computable number [is] one for which there is a Turing machine which, given<space/><italics>n</italics><space/>on its initial tape, terminates with the<space/><italics>nth</italics><space/>digit of that number [encoded on its tape].&quot; (Minsky 1967:159)</listitem></list><paragraph>The key notions in the definition are (1) that some<space/><italics>n</italics><space/>is specified at the start, (2) for any<space/><italics>n</italics><space/>the computation only takes a finite number of steps, after which the machine produces the desired output and terminates.</paragraph><paragraph>An alternate form of (2) the machine successively prints all n of the digits on its tape, halting after printing the n<xhtml:sup>th</xhtml:sup><space/>emphasizes Minsky's observation: (3) That by use of a Turing machine, a<space/><italics>finite</italics><space/>definition in the form of the machine's table is being used to define what is a potentially-<italics>infinite</italics><space/>string of decimal digits.</paragraph><paragraph>This is however not the modern definition which only requires the result be accurate to within any given accuracy. The informal definition above is subject to a rounding problem called the<space/><link><target>table-maker's dilemma</target></link><space/>whereas the modern definition is not.</paragraph><heading level='2'>Formal definition</heading><paragraph>A<space/><link><target>real number</target></link><space/><italics>a</italics><space/>is<space/><bold>computable</bold><space/>if it can be approximated by some<space/><link><target>computable function</target></link><space/><extension extension_name='math'>f:\mathbb{N}\to\mathbb{Z}</extension><space/>in the following manner: given any positive<space/><link><target>integer</target></link><space/><italics>n</italics>, the function produces an integer<space/><italics>f(n)</italics><space/>such that:</paragraph><list type='ident'><listitem><extension extension_name='math'>{f(n)-1\over n} \leq a \leq {f(n)+1\over n}.</extension></listitem></list><paragraph>There are two similar definitions that are equivalent:</paragraph><list type='bullet'><listitem>There exists a computable function which, given any positive rational<space/><link><target>error bound</target></link><space/><extension extension_name='math'>\varepsilon</extension>, produces a<space/><link><target>rational number</target></link><space/><italics>r</italics><space/>such that<space/><extension extension_name='math'>|r - a| \leq \varepsilon.</extension></listitem><listitem>There is a computable sequence of rational numbers<space/><extension extension_name='math'>q_i</extension><space/>converging to<space/><extension extension_name='math'>a</extension><space/>such that &lt;math&gt;|q_i - q_{i+1}| &lt; 2^{-i}\,&lt;/math&gt; for each<space/><italics>i</italics>.</listitem></list><paragraph>There is another equivalent definition of computable numbers via computable<space/><link><target>Dedekind cut</target><trail>s</trail></link>. A<space/><bold>computable Dedekind cut</bold><space/>is a computable function<space/><extension extension_name='math'>D\;</extension><space/>which when provided with a rational number<space/><extension extension_name='math'>r</extension><space/>as input returns<space/><extension extension_name='math'>D(r)=\mathrm{true}\;</extension><space/>or<space/><extension extension_name='math'>D(r)=\mathrm{false}\;</extension>, satisfying the following conditions:</paragraph><list type='ident'><listitem><extension extension_name='math'>\exists r D(r)=\mathrm{true}\;</extension></listitem><listitem><extension extension_name='math'>\exists r D(r)=\mathrm{false}\;</extension></listitem><listitem>&lt;math&gt;(D(r)=\mathrm{true}) \wedge (D(s)=\mathrm{false}) \Rightarrow r&lt;s\;&lt;/math&gt;</listitem><listitem><extension extension_name='math'>D(r)=\mathrm{true} \Rightarrow \exist s&gt;r, D(s)=\mathrm{true}.\;</extension></listitem></list><paragraph>An example is given by a program<space/><italics>D</italics><space/>that defines the<space/><link><target>cube root</target></link><space/>of 3. Assuming<space/><extension extension_name='math'>q&gt;0\;</extension><space/>this is defined by:</paragraph><list type='ident'><listitem><extension extension_name='math'>p^3&lt;3 q^3 \Rightarrow D(p/q)=\mathrm{true}\;</extension></listitem><listitem><extension extension_name='math'>p^3&gt;3 q^3 \Rightarrow D(p/q)=\mathrm{false}.\;</extension></listitem></list><paragraph>A real number is computable if and only if there is a computable Dedekind cut<space/><italics>D</italics><space/>converging to it. The function<space/><italics>D</italics><space/>is unique for each irrational computable number (although of course two different programs may provide the same function).</paragraph><paragraph>A<space/><link><target>complex number</target></link><space/>is called computable if its real and imaginary parts are computable.</paragraph><heading level='2'>Properties</heading><heading level='3'>Countable but not computably enumerable</heading><paragraph>While the set of real numbers is<space/><link><target>uncountable</target></link>, the set of computable numbers is only<space/><link><target>countable</target></link><space/>and thus<space/><link><target>almost all</target></link><space/>real numbers are not computable. That the computable numbers are<space/><link><target>countable</target><part>at most countable</part></link><space/>intuitively comes from the fact that they are produced by Turing machines, of which there are only countably many. More precisely, assigning a<space/><link><target>Gdel number</target></link><space/>to each Turing machine definition produces a subset<space/><extension extension_name='math'>S</extension><space/>of the<space/><link><target>natural numbers</target></link><space/>corresponding to the computable numbers and identifies a<space/><link><target>surjection</target></link><space/>from<space/><extension extension_name='math'>S</extension><space/>to the computable numbers, which shows that the computable numbers are<space/><link><target>subcountable</target></link>. Moreover for any computable number<space/><extension extension_name='math'>x,</extension><space/>the<space/><link><target>well ordering principle</target></link><space/>provides that there is a minimal element in<space/><extension extension_name='math'>S</extension><space/>which corresponds to<space/><extension extension_name='math'>x</extension>, and therefore there exists a subset<space/><extension extension_name='math'>S'\subset S</extension><space/>consisting of the minimal elements, on which the map is a<space/><link><target>bijection</target></link>. The inverse of this bijection is an<space/><link><target>Injective function</target><part>injection</part></link><space/>into the natural numbers of the computable numbers, proving that they are countable.</paragraph><paragraph>The set<space/><extension extension_name='math'>S</extension><space/>of Gdel numbers, however, is not<space/><link><target>computably enumerable</target></link><space/>(nor consequently is<space/><extension extension_name='math'>S'</extension>), even though the computable reals are themselves ordered. This is because there is no algorithm to determine which Gdel numbers correspond to Turing machines that produce computable reals. In order to produce a computable real, a Turing machine must compute a<space/><link><target>total function</target></link>, but the corresponding<space/><link><target>decision problem</target></link><space/>is in<space/><link><target>Turing degree</target></link><space/><bold>0&amp;prime;&amp;prime;</bold>. Consequently there is no surjective<space/><link><target>computable function</target></link><space/>from the natural numbers to the computable reals, and<space/><link><target>Cantor's diagonal argument</target></link><space/>cannot be used<space/><link><target>Constructivism (mathematics)</target><part>constructively</part></link><space/>to demonstrate uncountably many of them.</paragraph><heading level='3'>Properties as a field</heading><paragraph>The arithmetical operations on computable numbers are themselves computable in the sense that whenever real numbers<space/><italics>a</italics><space/>and<space/><italics>b</italics><space/>are computable then the following real numbers are also computable:<space/><italics>a + b</italics>,<space/><italics>a - b</italics>,<space/><italics>ab</italics>, and<space/><italics>a/b</italics><space/>if<space/><italics>b</italics><space/>is nonzero.These operations are actually<space/><italics>uniformly computable</italics>; for example, there is a Turing machine which on input (<italics>A</italics>,<italics>B</italics>,<extension extension_name='math'>\epsilon</extension>) produces output<space/><italics>r</italics>, where<space/><italics>A</italics><space/>is the description of a Turing machine approximating<space/><italics>a</italics>,<space/><italics>B</italics><space/>is the description of a Turing machine approximating<space/><italics>b</italics>, and<space/><italics>r</italics><space/>is an<space/><extension extension_name='math'>\epsilon</extension><space/>approximation of<space/><italics>a</italics>+<italics>b</italics>.</paragraph><paragraph>The fact that computable real numbers form a field was first proved by<space/><link><target>Henry Gordon Rice</target></link><space/>(1954)<template><target>Citation needed</target><arg name="date"><space/>June 2015</arg><arg name="reason"><space/></arg></template>.</paragraph><paragraph>Computable reals do not form however a<space/><link><target>computable algebra</target><part>computable field</part></link>, because the definition of the latter notion requires effective equality.</paragraph><heading level='3'>Non-computability of the ordering</heading><paragraph>The order relation on the computable numbers is not computable. Let<space/><italics>A</italics><space/>be the description of a Turing machine approximating the number<space/><extension extension_name='math'>a</extension>. Then there is no Turing machine which on input<space/><italics>A</italics><space/>outputs &quot;YES&quot; if<space/><extension extension_name='math'>a &gt; 0</extension><space/>and &quot;NO&quot; if<space/><extension extension_name='math'>a \le 0</extension>. The reason: suppose the machine described by<space/><italics>A</italics><space/>keeps outputting 0 as<space/><extension extension_name='math'>\epsilon</extension><space/>approximations. It is not clear how long to wait before deciding that the machine will<space/><italics>never</italics><space/>output an approximation which forces<space/><italics>a</italics><space/>to be positive. Thus the machine will eventually have to guess that the number will equal 0, in order to produce an output; the sequence may later become different from 0. This idea can be used to show that the machine is incorrect on some sequences if it computes a total function. A similar problem occurs when the computable reals are represented as<space/><link><target>Dedekind cut</target><trail>s</trail></link>. The same holds for the equality relation : the equality test is not computable.</paragraph><paragraph>While the full order relation is not computable, the restriction of it to pairs of unequal numbers is computable. That is, there is a program that takes as input two Turing machines<space/><italics>A</italics><space/>and<space/><italics>B</italics><space/>approximating numbers<space/><italics>a</italics><space/>and<space/><italics>b</italics>, where<space/><italics>a</italics><space/><italics>b</italics>, and outputs whether &lt;math&gt;a &lt; b&lt;/math&gt; or<space/><extension extension_name='math'>a &gt; b</extension>. It is sufficient to use -approximations where &lt;math&gt; \varepsilon &lt; |b-a|/2&lt;/math&gt; so by taking increasingly small (with a limit to 0), one eventually can decide whether &lt;math&gt;a &lt; b&lt;/math&gt; or<space/><extension extension_name='math'>a &gt; b</extension>.</paragraph><heading level='3'>Other properties</heading><paragraph>The computable real numbers do not share all the properties of the real numbers used in analysis. For example, the least upper bound of a bounded increasing computable sequence of computable real numbers need not be a computable real number (Bridges and Richman, 1987:58). A sequence with this property is known as a<space/><link><target>Specker sequence</target></link>, as the first construction is due to E. Specker (1949). Despite the existence of counterexamples such as these, parts of calculus and real analysis can be developed in the field of computable numbers, leading to the study of<space/><link><target>computable analysis</target></link>.<space/></paragraph><paragraph>Every computable number is<space/><link><target>definable number</target><part>definable</part></link>, but not vice versa. There are many definable, noncomputable real numbers, including:</paragraph><list type='bullet'><listitem>The binary representation of the<space/><link><target>halting problem</target></link><space/>(or any other uncomputable set of natural numbers).</listitem><listitem><link><target>Chaitin's constant</target></link>,<space/><extension extension_name='math'>\Omega</extension>, which is a type of real number that is<space/><link><target>Turing degree</target><part>Turing equivalent</part></link><space/>to the halting problem.</listitem></list><paragraph>Both of these examples in fact define an infinite set of definable, uncomputable numbers, one for each<space/><link><target>Universal Turing machine</target></link>.A real number is computable if and only if the set of natural numbers it represents (when written in binary and viewed as a characteristic function) is computable.</paragraph><paragraph>Every computable number is<space/><link><target>arithmetical number</target><part>arithmetical</part></link>.</paragraph><paragraph>The set of computable real numbers (as well as every countable,<space/><link><target>densely ordered</target></link><space/>subset of computable reals without ends) is<space/><link><target>order-isomorphic</target></link><space/>to the set of rational numbers.</paragraph><heading level='2'>Digit strings and the Cantor and Baire spaces</heading><paragraph>Turing's original paper defined computable numbers as follows:</paragraph><list type='ident'><listitem>A real number is computable if its digit sequence can be produced by some algorithm or Turing machine. The algorithm takes an integer<space/><extension extension_name='math'>n \ge 1</extension><space/>as input and produces the<space/><extension extension_name='math'>n</extension>-th digit of the real number's decimal expansion as output.</listitem></list><paragraph>(Note that the decimal expansion of<space/><italics>a</italics><space/>only refers to the digits following the decimal point.)</paragraph><paragraph>Turing was aware that this definition is equivalent to the<space/><extension extension_name='math'>\epsilon</extension>-approximation definition given above. The argument proceeds as follows: if a number is computable in the Turing sense, then it is also computable in the<space/><extension extension_name='math'>\epsilon</extension><space/>sense: if<space/><extension extension_name='math'>n &gt; \log_{10} (1/\epsilon)</extension>, then the first<space/><italics>n</italics><space/>digits of the decimal expansion for<space/><italics>a</italics><space/>provide an<space/><extension extension_name='math'>\epsilon</extension><space/>approximation of<space/><italics>a</italics>. For the converse, we pick an<space/><extension extension_name='math'>\epsilon</extension><space/>computable real number<space/><italics>a</italics><space/>and generate increasingly precisce approximations until the<space/><italics>n</italics>th digit after the decimal point is certain. This always generates a decimal expansion equal to<space/><italics>a</italics><space/>but it may improperly end in an infinite sequence of 9's in which case it must have a finite (and thus computable) proper decimal expansion.<space/></paragraph><paragraph>Unless certain topological properties of the real numbers are relevant it is often more convenient to deal with elements of<space/><extension extension_name='math'>2^{\omega}</extension><space/>(total 0,1 valued functions) instead of reals numbers in<space/><extension extension_name='math'>[0,1]</extension>. The members of<space/><extension extension_name='math'>2^{\omega}</extension><space/>can be identified with binary decimal expansions but since the decimal expansions<space/><extension extension_name='math'>.d_1d_2\ldots d_n0111\ldots</extension><space/>and<space/><extension extension_name='math'>.d_1d_2\ldots d_n10</extension><space/>denote the same real number the interval<space/><extension extension_name='math'>[0,1]</extension><space/>can only be bijectively (and homeomorphically under the subset topology) identified with the subset of<space/><extension extension_name='math'>2^{\omega}</extension><space/>not ending in all 1's.<space/></paragraph><paragraph>Note that this property of decimal expansions means it's impossible to effectively identify computable real numbers defined in terms of a decimal expansion and those defined in the<space/><extension extension_name='math'>\epsilon</extension><space/>approximation sense. Hirst has shown there is no algorithm which takes as input the description of a Turing machine which produces<space/><extension extension_name='math'>\epsilon</extension><space/>approximations for the computable number<space/><italics>a</italics>, and produces as output a Turing machine which enumerates the digits of<space/><italics>a</italics><space/>in the sense of Turing's definition (see Hirst 2007). Similarly it means that the arithmetic operations on the computable reals are not effective on their decimal representations as when adding decimal numbers, in order to produce one digit it may be necessary to look arbitrarily far to the right to determine if there is a carry to the current location. This lack of uniformity is one reason that the contemporary definition of computable numbers uses<space/><extension extension_name='math'>\epsilon</extension><space/>approximations rather than decimal expansions.</paragraph><paragraph>However, from a computational or measure theoretic perspective the two structures<space/><extension extension_name='math'>2^{\omega}</extension><space/>and<space/><extension extension_name='math'>[0,1]</extension><space/>are essentially identical. and computability theorists often refer to members of<space/><extension extension_name='math'>2^{\omega}</extension><space/>as reals. While<space/><extension extension_name='math'>[0,1]</extension><space/><extension extension_name='math'>2^{\omega}</extension><space/>is<space/><link><target>totally disconnected space</target><part>totally disconnected</part></link><space/>for questions about<space/><extension extension_name='math'>\Pi^0_1</extension><space/>classes or randomness it's much less messy to work in<space/><extension extension_name='math'>2^{\omega}</extension>.</paragraph><paragraph>Elements of<space/><extension extension_name='math'>\omega^{\omega}</extension><space/>are sometimes called reals as well and though containing a homeomorphic image of<space/><extension extension_name='math'>\mathbb{R}</extension><space/><extension extension_name='math'>\omega^{\omega}</extension><space/>in addition to being totally disconnected isn't even locally compact. This leads to genuine differences in the computational properties. For instance the<space/><extension extension_name='math'>x \in \mathbb{R}</extension><space/>satisfying<space/><extension extension_name='math'>\forall(n \in \omega)\phi(x,n)</extension><space/>with<space/><extension extension_name='math'>\phi(x,n)</extension><space/>quantifier free must be computable while the unique<space/><extension extension_name='math'>x \in \omega^{\omega}</extension><space/>satisfying a universal formula can be arbitrarily high in the hyperarithmetic hierarchy.</paragraph><heading level='2'>Can computable numbers be used instead of the reals?</heading><paragraph>The computable numbers include many of the specific real numbers which appear in practice, including all real<space/><link><target>algebraic number</target><trail>s</trail></link>, as well as<space/><italics>e</italics>,<space/><extension extension_name='math'>\pi</extension>, and many other<space/><link><target>transcendental number</target><trail>s</trail></link>. Though the computable reals exhaust those reals we can calculate or approximate, the assumption that all reals are computable leads to substantially different conclusions about the real numbers. The question naturally arises of whether it is possible to dispose of the full set of reals and use computable numbers for all of mathematics. This idea is appealing from a<space/><link><target>constructivism (mathematics)</target><part>constructivist</part></link><space/>point of view, and has been pursued by what<space/><link><target>Errett Bishop</target><part>Bishop</part></link><space/>and Richman call the<space/><italics>Russian school</italics><space/>of constructive mathematics.<space/></paragraph><paragraph>To actually develop analysis over computable numbers, some care must be taken. For example, if one uses the classical definition of a sequence, the set of computable numbers is not closed under the basic operation of taking the<space/><link><target>supremum</target></link><space/>of a<space/><link><target>bounded sequence</target></link><space/>(for example, consider a<space/><link><target>Specker sequence</target></link>). This difficulty is addressed by considering only sequences which have a computable<space/><link><target>modulus of convergence</target></link>. The resulting mathematical theory is called<space/><link><target>computable analysis</target></link>.</paragraph><heading level='2'>Implementation</heading><paragraph>There are some computer packages that work with computable real numbers,representing the real numbers as programs computing approximations.One example is the<space/><link><target>RealLib</target></link><space/>package (<link type='external' href='http://daimi.au.dk/~barnie/RealLib/'>reallib home page</link>).</paragraph><heading level='2'>See also</heading><list type='bullet'><listitem><link><target>Definable number</target></link></listitem><listitem><link><target>Semicomputable function</target></link></listitem><listitem><link><target>Transcomputational problem</target></link></listitem></list><heading level='2'>References</heading><list type='bullet'><listitem>Oliver Aberth 1968,<space/><italics>Analysis in the Computable Number Field</italics>, Journal of the Association for Computing Machinery (JACM), vol 15, iss 2, pp 276299. This paper describes the development of the calculus over the computable number field.</listitem><listitem>Errett Bishop and Douglas Bridges,<space/><italics>Constructive Analysis</italics>, Springer, 1985, ISBN 0-387-15066-8</listitem><listitem>Douglas Bridges and Fred Richman.<space/><italics>Varieties of Constructive Mathematics</italics>, Oxford, 1987.</listitem><listitem>Jeffry L. Hirst, Representations of reals in reverse mathematics, Bulletin of the Polish Academy of Sciences, Mathematics, 55, (2007) 303&amp;ndash;316.</listitem><listitem><link><target>Marvin Minsky</target></link><space/>1967,<space/><italics>Computation: Finite and Infinite Machines</italics>, Prentice-Hall, Inc. Englewood Cliffs, NJ. No ISBN. Library of Congress Card Catalog No. 67-12342. His chapter 9 &quot;The Computable Real Numbers&quot; expands on the topics of this article.</listitem><listitem>E. Specker, &quot;Nicht konstruktiv beweisbare Stze der Analysis&quot; J. Symbol. Logic, 14 (1949) pp.&amp;nbsp;145158</listitem><listitem><template><target>Citation</target><arg name="last"><space/>Turing<space/></arg><arg name="first"><space/>A.M.<space/></arg><arg name="publication-date"><space/>1937<space/></arg><arg name="year"><space/>1936<space/></arg><arg name="title"><space/>On Computable Numbers, with an Application to the Entscheidungsproblem<space/></arg><arg name="periodical"><space/>Proceedings of the London Mathematical Society<space/></arg><arg name="series"><space/>2<space/></arg><arg name="volume"><space/>42<space/></arg><arg name="issue"><space/>1<space/></arg><arg name="pages"><space/>230–65<space/></arg><arg name="url"><space/>http://www.abelard.org/turpap2/tp2-ie.asp<space/></arg><arg name="doi"><space/>10.1112/plms/s2-42.1.230<space/></arg></template><space/>(and<space/><template><target>Citation</target><arg name="last"><space/>Turing<space/></arg><arg name="first"><space/>A.M.<space/></arg><arg name="publication-date"><space/>1937<space/></arg><arg name="title"><space/>On Computable Numbers, with an Application to the Entscheidungsproblem: A correction<space/></arg><arg name="periodical"><space/>Proceedings of the London Mathematical Society<space/></arg><arg name="series"><space/>2<space/></arg><arg name="volume"><space/>43<space/></arg><arg name="issue"><space/>6<space/></arg><arg name="pages"><space/>544–6<space/></arg><arg name="doi"><space/>10.1112/plms/s2-43.6.544<space/></arg><arg name="year"><space/>1938<space/></arg></template>). Computable numbers (and Turing's a-machines) were introduced in this paper; the definition of computable numbers uses infinite decimal sequences.</listitem><listitem>Klaus Weihrauch 2000,<space/><italics>Computable analysis</italics>, Texts in theoretical computer science,<space/><link><target>Springer Science+Business Media</target><part>Springer</part></link>, ISBN 3-540-66817-9. 1.3.2 introduces the definition by<space/><link><target>nested sequences of intervals</target></link><space/>converging to the singleton real. Other representations are discussed in 4.1.</listitem><listitem>Klaus Weihrauch,<space/><italics><link type='external' href='http://eccc.uni-trier.de/static/books/A_Simple_Introduction_to_Computable_Analysis_Fragments_of_a_Book/'>A simple introduction to computable analysis</link></italics></listitem><listitem>H. Gordon Rice. &quot;Recursive real numbers.&quot; Proceedings of the American Mathematical Society 5.5 (1954): 784-791.</listitem><listitem>V. Stoltenberg-Hansen, J. V. Tucker &quot;Computable Rings and Fields&quot; in<space/><italics>Handbook of computability theory</italics><space/>edited by E.R. Griffor. Elsevier 1999</listitem></list><paragraph>Computable numbers were defined independently by Turing, Post and Church. See<space/><italics>The Undecidable</italics>, ed. Martin Davis, for further original papers.</paragraph><paragraph><template><target>Number Systems</target></template></paragraph><paragraph><template><target>DEFAULTSORT:Computable Number</target></template><link><target>Category:Computability theory</target></link><link><target>Category:Theory of computation</target></link></paragraph></article>